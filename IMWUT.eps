%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: <95EE><9898><5B9A><4E49>.pdf
%%Creator: Adobe Acrobat 15.7.0
%%For: Owen
%%CreationDate: 2018/8/15, 18:57:20
%%BoundingBox: 0 0 1400 510
%%HiResBoundingBox: 0 0 1399.5865 509.6709
%%CropBox: 0 0 1399.5865 509.6709
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1177 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 81.157285, 2014/12/12-00:43:15        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2018-08-15T18:56+08:00"
   xmp:CreatorTool="Microsoft® Visio® 2016"
   xmp:ModifyDate="2018-08-15T18:57:09+08:00"
   xmp:MetadataDate="2018-08-15T18:57:09+08:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Visio® 2016"
   xmpMM:DocumentID="uuid:30e9ee57-7d28-4743-ac7d-0b0641a28bdd"
   xmpMM:InstanceID="uuid:ae4b8e7e-b975-4209-8504-dff408b4bee8">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Clark Owen</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -509.671 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 509.671 li
1399.59 509.671 li
1399.59 0 li
cp
clp
gsave
-.0371094 510.191 mo
1399.96 510.191 li
1399.96 -.80896 li
-.0371094 -.80896 li
cp
clp
432.993 120.091 mo
432.993 110.451 440.803 102.641 450.433 102.641 cv
460.073 102.641 467.883 110.451 467.883 120.091 cv
467.883 129.721 460.073 137.531 450.433 137.531 cv
440.803 137.531 432.993 129.721 432.993 120.091 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.472541 .271244 0 0 cmyk
ef
1.5 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
432.993 120.091 mo
432.993 110.451 440.803 102.641 450.433 102.641 cv
460.073 102.641 467.883 110.451 467.883 120.091 cv
467.883 129.721 460.073 137.531 450.433 137.531 cv
440.803 137.531 432.993 129.721 432.993 120.091 cv
cp
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
@
432.993 177.401 mo
432.993 167.771 440.803 159.961 450.433 159.961 cv
460.073 159.961 467.883 167.771 467.883 177.401 cv
467.883 187.041 460.073 194.851 450.433 194.851 cv
440.803 194.851 432.993 187.041 432.993 177.401 cv
cp
.472541 .271244 0 0 cmyk
ef
432.993 177.401 mo
432.993 167.771 440.803 159.961 450.433 159.961 cv
460.073 159.961 467.883 167.771 467.883 177.401 cv
467.883 187.041 460.073 194.851 450.433 194.851 cv
440.803 194.851 432.993 187.041 432.993 177.401 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
432.993 280.821 mo
432.993 271.191 440.803 263.381 450.433 263.381 cv
460.073 263.381 467.883 271.191 467.883 280.821 cv
467.883 290.451 460.073 298.261 450.433 298.261 cv
440.803 298.261 432.993 290.451 432.993 280.821 cv
cp
.472541 .271244 0 0 cmyk
ef
432.993 280.821 mo
432.993 271.191 440.803 263.381 450.433 263.381 cv
460.073 263.381 467.883 271.191 467.883 280.821 cv
467.883 290.451 460.073 298.261 450.433 298.261 cv
440.803 298.261 432.993 290.451 432.993 280.821 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
293.443 265.871 mo
328.331 265.871 li
328.331 230.983 li
293.443 230.983 li
cp
.394232 .0187991 .542443 0 cmyk
ef
293.443 265.871 mo
328.331 265.871 li
328.331 230.983 li
293.443 230.983 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
293.443 116.351 mo
328.331 116.351 li
328.331 81.463 li
293.443 81.463 li
cp
.394232 .0187991 .542443 0 cmyk
ef
293.443 116.351 mo
328.331 116.351 li
328.331 81.463 li
293.443 81.463 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
293.443 191.111 mo
328.331 191.111 li
328.331 156.223 li
293.443 156.223 li
cp
.394232 .0187991 .542443 0 cmyk
ef
293.443 191.111 mo
328.331 191.111 li
328.331 156.223 li
293.443 156.223 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
293.443 340.631 mo
328.331 340.631 li
328.331 305.743 li
293.443 305.743 li
cp
.394232 .0187991 .542443 0 cmyk
ef
293.443 340.631 mo
328.331 340.631 li
328.331 305.743 li
293.443 305.743 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
879.153 178.591 mo
914.041 178.591 li
914.041 143.703 li
879.153 143.703 li
cp
.476326 .831693 .898802 .160922 cmyk
ef
879.153 178.591 mo
914.041 178.591 li
914.041 143.703 li
879.153 143.703 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
879.153 258.331 mo
914.041 258.331 li
914.041 223.443 li
879.153 223.443 li
cp
.476326 .831693 .898802 .160922 cmyk
ef
879.153 258.331 mo
914.041 258.331 li
914.041 223.443 li
879.153 223.443 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
879.153 338.071 mo
914.041 338.071 li
914.041 303.183 li
879.153 303.183 li
cp
.476326 .831693 .898802 .160922 cmyk
ef
879.153 338.071 mo
914.041 338.071 li
914.041 303.183 li
879.153 303.183 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
293.443 415.391 mo
328.331 415.391 li
328.331 380.503 li
293.443 380.503 li
cp
.394232 .0187991 .542443 0 cmyk
ef
293.443 415.391 mo
328.331 415.391 li
328.331 380.503 li
293.443 380.503 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
432.993 334.401 mo
432.993 324.761 440.803 316.951 450.433 316.951 cv
460.073 316.951 467.883 324.761 467.883 334.401 cv
467.883 344.031 460.073 351.841 450.433 351.841 cv
440.803 351.841 432.993 344.031 432.993 334.401 cv
cp
.472541 .271244 0 0 cmyk
ef
432.993 334.401 mo
432.993 324.761 440.803 316.951 450.433 316.951 cv
460.073 316.951 467.883 324.761 467.883 334.401 cv
467.883 344.031 460.073 351.841 450.433 351.841 cv
440.803 351.841 432.993 344.031 432.993 334.401 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
2.25 lw
1 lc
1 lj
[2.25 4.5 ] 0 dsh
485.923 121.291 mo
566.113 121.291 li
.644953 .27805 0 0 cmyk
@
564.913 116.521 mo
579.223 121.291 li
564.913 126.061 li
564.913 116.521 li
cp
ef
1.5 lw
[10.5 7.5 0 7.5 ] 0 dsh
328.333 98.9011 mo
432.993 177.401 li
1 /0 /CSD get_res sepcs
.502 sep
@
328.333 173.661 mo
432.993 177.401 li
@
328.333 248.421 mo
432.993 120.091 li
@
328.333 323.181 mo
432.993 280.821 li
@
328.333 248.421 mo
432.993 280.821 li
@
328.333 173.661 mo
432.993 334.401 li
@
328.333 397.941 mo
432.993 280.821 li
@
328.333 397.941 mo
438.103 165.071 li
@
328.333 323.181 mo
432.993 177.401 li
@
[] 0 dsh
879.153 161.141 mo
786.483 120.511 li
@
879.153 240.891 mo
786.483 177.831 li
@
879.153 320.631 mo
786.483 281.241 li
@
879.153 240.891 mo
786.483 334.821 li
@
[10.5 7.5 0 7.5 ] 0 dsh
328.333 98.9011 mo
432.993 280.821 li
@
2 lc
0 lj
[3 1.5 ] 0 dsh
579.553 442.961 mo
937.553 442.961 li
937.553 11.0211 li
579.553 11.0211 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
2.25 lw
1 lc
1 lj
[2.25 4.5 ] 0 dsh
486.253 173.511 mo
566.433 173.511 li
.644953 .27805 0 0 cmyk
@
565.243 168.741 mo
579.553 173.511 li
565.243 178.281 li
565.243 168.741 li
cp
ef
485.923 281.671 mo
566.113 281.671 li
@
564.913 276.901 mo
579.223 281.671 li
564.913 286.441 li
564.913 276.901 li
cp
ef
485.593 339.111 mo
565.783 339.111 li
@
564.593 334.341 mo
578.903 339.111 li
564.593 343.881 li
564.593 334.341 li
cp
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WUKAAA+Calibri-BoldItalic Initial
ct_T42Dict begin
-0.691 -0.305 1.328 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /WUKAAA+Calibri-BoldItalic
Type42DictBegin
[<00010000000c000c000c000c4f532f327ba7b521000000cc000000606376
742055d14f580000012c000006ac6670676da1ea42ac000007d800000913
676c796634e7daf40000bb5c0000a1f868656164f5d2853a000010ec0000
0036686865610e7c17e40000112400000024686d74786c961e3f00001148
00003e386c6f6361131de84900004f800000234a6d6178701f40188d0000
72cc000000206e616d65dc6aae8a000072ec00003154707265708c07c7b9
0000a4400000171b676469720000000000000000000000000003044b02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
0304040a0204e0000aff4000247b00000001000000004d53202000210000
fb040600fe0001c4079e0226200001bf0000000003c0050e000000200003
0000079e0000fe930000000000000000000000700081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
00000000000000000000005f0060006e006f007000710062006700600072
0078007a007b007d007e007f0080008300850086008700890086008c008d
008e008f009100920093009400950096009700980099009a009b009c009d
009e009300960099009e0094009500000099009a00a000a200a600a800aa
00ac00ad00ae00a100a200a300a400a500a700a800a900aa00ab00a300a7
00a800aa00ab00ac00ad00ae009e00a300a600a700a900aa00ac00ad00af
00b000b100ac00ad00ae00af00b000b100b200b300b400b500af00af00b0
00b100b200b300b400b500b700b800b900b600b700b800b900ba00bb00bc
00bd00be00bf00c000c100c200c000c100c200b900ba00bb00bd00be00bf
00c000c100c200b600b700b800b900ba00bb00bc00bd00be00bf00c000c1
00c200cc00c300c400c500c600c700c800c900ca00cb00cc00cd00ce00cf
00c400c500c600c700c800c900ca00cb00ce00cf00c400c500c600c700c8
00c900ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca
00cb00cc00cd00ce00cf00d000d100d200d300d400d500d600d800d900da
00db00de00df00e200e300e400ec00d000d100d400d500d600dc00dd00de
00e000e400e200e800d000d100d200d300d400d500d600d700d800d900da
00db00dc00dd00de00df00e000e100e200e300e400e600e700e800e900ed
00ee00d100d200d300d400d500d800d900da00dc00e100e800f600f700fb
0108011a011d010e011300f500f800fb010d011600f600fa0109010d0121
0127012d012e012f01340135013b014101420152012f0130006a006b0090
00910094009600980099009a009a009c0077007b008900940092009300a3
00a400a500a6008100a900ab00ac00ad00ae00af00b100b300b4009b00bb
00bb00bb00bf00bc00bd00c200c300c400c500c600c700c800c900ca00cb
00cd00d000a800ac00b100b400b500b600b700b800b900ba00bb00bc00bd
00be00c200c400c500c600c800b400ca000000b400b500b600b700b800b9
00be00bf00c300c600c700c800c900ca00cb00cf00d000aa00ad00ae00b1
00b200ba00be00c000c500c600c800c900cf00d000d100d200d5000000d4
00d900da00db00dc00dd00de00e200e500d100d300d400d100d200d800da
00db00cb00de00df00df00e100e200e400e500e600d600d700d100d300d3
00d400d500d700ce00d600db00dc00dd00de00c400bb00e100d200d200e0
00d200d100d300d500d600d900d600d600db00c900dc00ac00e100de00de
00df00e000e800eb00ed00e800e900ea00e000e700ed00bc00e300ea00e5
00ba00e700e800e300e800e900ea00cc00ed00f000f200f400ee00ef00f1
00f200f300f400f400f400c100ee00f200ee00ee00f100ef00db00f300db
00ee00ef00eb00d700f000dd00ec00f500f200f700f700f300f900f500f6
00fc00fc00f400d900fa00fb00fc00f700f700da00f900f600fa00fb00fb
00ff00fe00ff010001010102010300f900ff0100010000fc00fc00fc00e2
00fd00e900fe00fa00fe010100fd010301040106010701080109010a010b
010c010d0100010101070108010900ff0100010100fa01020104010b010c
010800ff010001060107010800f8010a010b010c010d010f011001110112
011301140115011600fd010e010f01120118010f01100111010901130114
0115011601170118010e010f011001110112011301150000011701180119
011a0000011e0120012100ce011c011e00f6011a011c011d012001220119
0102011d000000d5012301270128012901300133013500000124012500fd
012e012f013e013f012300000125012601270000012b00fe012f0130013c
013e014101440145012300ff012c0136013b013e01460000000000000000
00000000000000000000000002990092000000000000042600d8050e0105
03c000c2024e0078042600d700b100a000500058005e006a05e802cc4046
5f5e5d5c5b5a59585554535251504f4e4d4c4b4a49484746454443424140
3f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a
090807060504030201002c4523466020b02660b004262348482d2c452346
236120b02661b004262348482d2c45234660b0206120b04660b004262348
482d2c4523462361b0206020b02661b02061b004262348482d2c45234660
b0406120b06660b004262348482d2c4523462361b0406020b02661b04061
b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a5158
2320b08d44235920b0ed51582320b04d44235920b0042651582320b00d44
235921212d2c20204518684420b001602045b04676688a4560442d2c01b1
0b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b0
282370b10228453ab10200080d2d2c2045b00325456164b050515845441b
2121592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061
b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03
458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d
2c4b525845441b2121592d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2c00b00743b00643
0b2d2c21210c6423648bb84000622d2c21b08051580c6423648bb8200062
1bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb20080
2f2b59b002602d2c0c6423648bb84000626023212d2c4523456023456023
456023766818b08062202d2cb00426b00426b00425b0042545234520b003
266062636820b0032661658a2344442d2c2045b0005458b040442045b040
61441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f23
70b01423421b2121592d2c4b515820b0032545695358441b2121591b2121
592d2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a60
442d2c45234560442d2c4b235158b90033ffe0b134201bb3330034005944
442d2cb0164358b00326458a586466b01f601b64b020606620581b21b040
59b001615923586559b02923442310b029e01b2121212121592d2cb01643
58b004254564b020606620581b21b04059b0016123586559b0292344b004
25b00725082058021b0359b0052510b004252046b0042523423cb0072510
b006252046b00425b0016023423c2058011b0059b0052510b00425b029e0
b0072510b00625b029e0b00425b00725082058021b0359b00425b0032543
48b00625b00325b0016043481b2159212121212121212d2cb0164358b004
254564b020606620581b21b04059b0016123581b6559b0292344b00525b0
0825082058021b0359b0042510b005252046b0042523423cb00425b00725
08b0072510b006252046b00425b0016023423c2058011b0059b0042510b0
0525b029e0b02920456544b0072510b00625b029e0b00525b00825082058
021b0359b00525b003254348b00425b0072508b00625b00325b001604348
1b2159212121212121212d2c02b00425202046b004252342b0052508b003
254548212121212d2c02b0032520b0042508b0022543482121212d2c4523
20451820b00050205823652359236820b040505821b04059235865598a60
442d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b
2121592d2c4b53234b515a58381b2121592d2cb000214b5458381b212159
2d2cb002435458b0462b1b21212121592d2cb002435458b0472b1b212121
592d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b2121
21592d2c208a08234b538a4b515a5823381b2121592d2c0020b200400325
b0062649618b3812342d2c014623466023466123201020468a61b8ff8062
8ab140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b5258
7d1b7a592d2cb012004b014b54422d2cb1020042b123018851b140018853
5a58b910000020885458b202010243604259b12401885158b92000004088
5458b2020202436042b12401885458b2022002436042004b014b5258b202
0802436042591bb940000080885458b202040243604259b94000008063b8
0100885458b202080243604259b94000010063b80200885458b202100243
604259b94000020063b80400885458b202400243604259595959592d2c45
1868234b51582320452064b04050587c59688a6059442d2cb00016b00225
b0022501b001233e00b002233eb10102060cb00a236542b00b234201b001
233f00b002233fb10102060cb006236542b0072342b00116012d2c20b820
00628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff
545821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547
b004254760b0062547b0806361b00225b0005558b00325b00725496359b0
082558001b0159b00425b0062549b009255cb009255a58b0092b59b00725
46b0806361b0032520b0005558631b2159612320b0005558b080631b21b0
8059b0592bb006255c586959b00425202010b00048233ab0062658001b01
59b0052658b003252f598a12233221212d2cb00625b00a2587b00625b009
254ab0005358b00625b00a251bb00925b0072559b00225b00225070cb005
256323b00625636020b94000040063535821b00426b00426b00a1bb94000
040063655158b0042665b0042665b00a1bb00426b00426b000b00325b003
250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b0
005558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ff
ff545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587
b00a2510b00b25c15920b00051b800522378b00161b00225b00725b00725
07b00a25b00d254961b08062b00525b005250bb00a252338b00625b00625
87b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549
b0032554b8ffa723792121212121212121212121212d2c23b0005458b940
0000001bb900004000598ab0005458b9400000001bb90000400059b05b2b
2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8a
b0005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db0
0426b00426080db05b2b2d000001000000063333afb900a45f0f3cf50019
080000000000bbeb7ccc00000000d5968a60fa78fd8d0aa3085000030009
0002000000000000000100000600fe0001c40aa0fa78f9cc0aa30800019a
0000000000000000000000000d78040e0000000000000000000001cf0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000050b003b000000000000
00000000000003e7003c0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000222003400000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000006fe003400000000000000000000
00000000000000000000000000000559005f000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004420034000000000000000000000000000000000000000000000000
03b9ffff000000000000000000000000000000000000000003f600950000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000447
ffb300000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000438002f03b300570000
000000000000000000000000000000000000049100330000000000000000
00000000038f003400000000000000000000000000000000000000000000
00000000000000000000000000000358002d049c00580000000000000000
00000000000000000497002d00000000000000000210002d000000000000
000000000000000000000000000000000000000000000210001800000000
000000000000000000000000000000000000000002fc0034000000000000
00000000000000000000000000000648002c04b3002c0000000000000000
00000000000000000000000004c900520000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
03fb002d00000000000000000421002d0000000000000000000000000366
fffe0000000000000000000000000000000000000000037b007700000000
000000000000000004a60064000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000404ffca00000000000000000000
00000000000000000000000000000000000000000000000000000439003e
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000004390024034b003b00000000
00000000000000000000000000000000075b003b000000000600003b0000
00000439003e00000000000000000000000003ee003b0000000000000000
000000000000000000000000000000000000000000000000000000000288
ff4a06b1ff4a08f8ff4a04ceff3806afff4a08f5ff4a046fff4a00000000
000000000000000000000000000000000000000000000000000000000000
000006b6ff4a000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000046fff4a00000000000000000000000006b6ff4a050dff4a00000000
000000000755ff4a043900360000000000000000000000000000000003cb
ffa400000000000000000000000000000000043800260000000000000000
01f700260000000000000000000000000000000000000000000000000000
00000000000001f700260000000000000000000000000000000000000000
00000000000000000000000001f700260000000000000000000000000000
000000000000066e00260438002600000000000000000000000000000000
00000000000000000438003c000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000439ffdf
000000000000000002d10026000000000000000000000000032700020000
00000000000000000000000000000000000005c500020000000000000000
0000000002c6005e0000000000000000000000000510005e04af005e0000
000000000000000000000000000000000000000000000000000000000000
000000000540005e078a005e0728005e0000000000000000000000000000
000000000000000000000000000000000000000000000438005700000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
03adffc70000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000002ec009d02ea008d
0237009a02ec009d02bc009b01d0000302ec009e02f1008e017a00900000
0000000000000176008d0461008f02f2008e02eb009e02eb006500000000
01fc008f023a007c01fa00ae02f200b0000000000000000002a400550000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000001e200000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000029b009b00000000
000000000000000000000000000000000000000002690081000000000000
000000000000000000000000000002350056000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
038200e80000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000002de004e03f2
000003f0ffd2000000000000000000000000000000000000000000000000
00000000040e0046040e000a040effe40000000000000000000000000000
000000000000000000000000000002ad005603a000010385000700000000
000000000000000000000000000000000000000000000000039f003e039f
ffff039f000d000000000000000000000000000000000000000000000000
0000000002de007b03f2000103f000000000000000000000000000000000
0000000000000000000000000000040e0046040e000a040e001300000000
000000000000000000000000000000000000000000000000020500c002b4
007a02b00078000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000205000802b4
ffc202b0ffc0000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000020500210270
ffdc0274ffd5000000000000000000000000000000000000000000000000
00000000020500a30270005e027400580000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000004c1006603f300180288000d0288005503cbffa4
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000036b00b402b700b0000000000000000000000000
01b000ad000000000000000000000000049a00ad0000000003a100c902f4
00ad00000000000000000288007f02b000d5000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000006b0000d08f7000d04ce000d06ae000d08f5000d046f000d
000000000000000000000000000000000000000000000000000000000000
0000046f000d0000000006b6000d00000000000000000000000000000000
0000000000000000000000000000000006b6000d00000000000000000000
00000000000000000000046e000d00000000000000000000000006b6000d
050d000d00000000000000000755000d0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000036b00b402b700b000000000000000000000000001b0
00ad000000000000000000000000049a00ad000000000000000003a100c9
0000000002f400ad0000000002b000d50000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000199
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a80115011501150115019c019c019c019c019c019c019c019c019c019c
019c019c019c019c019c019c019c019c019c01e301e301e301e301e301e3
01e301e301e301e301e301e301e301e301e301e301e301e301e301e301e3
024802480248024802480248024802b502b502b502b502b502b502b502b5
02b502b502b502b5033d033d033d033d033d033d033d03e003e003e003e0
03e003e00444044404440444044404440444044404440444044404440444
044404440444044404440444044404440444044404440444044404440444
04440444044404ae04ae04ae04ae04ae04ae04ae04ae04ae04ae04ae04ae
04ae053605a405a405a405a405a405a405fb05fb05fb05fb066a066a066a
066a066a066a066a066a066a066a06ca0752075207520752075207cb07cb
07cb08020802080208020802080208020802080d080d080d080d080d080d
080d08510851085108510851085108da09570957095709570957095709b2
09b209b209b209b209b209b209b209b209b209b209b20a1e0a1e0a1e0aaa
0aaa0aaa0aaa0b320b320b320b320b320b320b800b800b800b800bdd0bdd
0bdd0bdd0bdd0bdd0bdd0bdd0bdd0bdd0bdd0bdd0bdd0bdd0bdd0bdd0bdd
0c550c550c550c550c550c550c550c550c550c550cf40cf40cf40cf40cf4
0cf40cf40cf40cf40cf40cf40cf40cf40da70e260e260e260e260e260e26
0f2f0f2f1036103610d810d810d810d81185118511851185118511851185
118511851185124613741514163717251871192d192d192d192d192d192d
192d192d192d192d1a471a471a471a471a471a471a471a471a471a471a47
1a471a471a471a471aed1aed1aed1aed1bf11ccc1ccc1ccc1e051ee41ee4
1ee41ee41ee41fbc1fbc1fbc1fbc1fbc205b205b205b20cf20cf20cf20cf
20cf20cf20cf20cf20cf210621062106210621062106210621062106214e
214e214e214e214e214e221f22b122b122b122b122b122b122b1231e231e
231e231e231e231e231e231e231e231e231e231e23c823c823c8244e244e
244e244e24ed24ed24ed24ed24ed24ed261826182618261826c126c126c1
26c12797283528352835283528352835283528352835283528f92a1e2b0e
2b0e2b0e2b0e2b0e2b0e2b0e2b0e2b0e2b0e2ba12ba12ba12ba12ba12ba1
2ba12ba12ba12ba12ba12ba12ba12ba12ba12ba12ba12c2a2c2a2c2a2c2a
2c2a2c2a2c2a2c2a2c2a2c2a2c2a2c2a2c2a2c9a2d1e2d852e012e7f2f17
2fc1304130983098309830d0317b31f0323b32c032c0331e339d341c3491
349134913505350535053505350535053505350535053505350535053505
350535053505350535053505350535053505350535053505350535053505
350535053505350535053505350535053505350535053505350535053505
350535053505350535053505350535053505350535053505350535053505
35053505353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a353a353a353a353a353a353a
353a353a353a353a353a353a353a353a353a359f359f359f359f359f359f
359f36033603360336033603360336573657365736573657365736573657
365736573657365736573657365736573657365736573657365736573657
365736573657365736573657365736573657365736573657365736573657
365736573657365736573657365736573657365736573657365736573657
3657365736573657365736573657365736573657365736b336b336b336b3
36b336b336b336b336b336b336b336b336b336b336b336b336b336b336b3
36b336b336b336b336b336b336b336b336b336b336b336b336b336b336b3
36b336b336ff377c382638263826382638263826382638263889390939b2
39b239b239b239b239b239b239b239fc3a783b2b3b2b3b2b3b2b3b2b3b2b
3b2b3b2b3b8b3b933b9b3b9b3b9b3b9b3b9b3b9b3b9b3b9b3be63c643d0b
3d0b3d0b3d0b3d0b3d0b3d0b3d0b3d953e433f263f263f263f263f263f26
3f263f263f2f3f383f413f413f413f413f413f413f413f413f413f413f41
3f413f413f8d3ffa408e408e408e408e408e408e408e408e408e408e408e
408e408e40d7414c41dd41dd41dd41dd41dd41dd41dd41dd41e641ef41f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f841f841f841f841f841f841f841f841f841f8
41f841f841f841f841f841f8430a438443f9446e44764476447644764476
447644764476447644764476447644764476447644764476447644764476
447644764476447644764476447e4486448644864486448e448e448e448e
44964496449e44a644a644a64523452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b452b452b452b452b452b452b452b452b452b452b
452b452b452b452b452b45eb46e847834833492649cc49cc49cc49cc49cc
49cc49cc49cc49cc4a4b4a4b4b344b344b344b344b344b344b344b344b34
4bf84bf84bf84bf84bf84bf84c7b4c7b4c7b4c7b4d454de44de44de44ecb
4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb
4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb
4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb
4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb
4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb
4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb
4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb
4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb
4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb
4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb
4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4ecb4f164f72
4f724f724f724fa24fa24fa24fa25013501350135064506450bc50bc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc50fc
50fc50fc50fc50fc50fc50fc50fc50fc00000001000011a400d40010006c
000300020010002f006000000d16171b0002000100>
<0000002d02220000000300000000021000000000000300000001000e0210
0000000300000002001604d60000000300000003003c04b0000000030000
0004002604c60000000300000005001804ec000000030000000600240504
0000000300000007007605280000000300000008002a05ac000000030000
0009002007b0000000030000000a02a00210000000030000000b005607d0
000000030000000c002a0826000000030000000d0e060850000000030000
000e006c16560001000000000000010816c20001000000000001000717ca
0001000000000002000b192d0001000000000003001e191a000100000000
0004001319250001000000000005000c1938000100000000000600121944
0001000000000007003b19560001000000000008001516c9000100000000
000900101991000100000000000a015017ca000100000000000b002b19a1
000100000000000c001519cc000100000000000d070319e1000100000000
000e003620e400030001040900000212059e0003000104090001000e0210
0003000104090002001604d60003000104090003003c04b0000300010409
0004002604c60003000104090005001804ec000300010409000600240504
0003000104090007007605280003000104090008002a05ac000300010409
0009002007b0000300010409000a02a00210000300010409000b005607d0
000300010409000c002a0826000300010409000d0e18211a000300010409
000e006c165600a9002000320030003100370020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e000d004800650062007200650077
0020004f00700065006e00540079007000650020004c00610079006f0075
00740020006c006f00670069006300200063006f00700079007200690067
00680074002000a900200032003000300033002000260020003200300030
0037002c002000520061006c00700068002000480061006e0063006f0063
006b002000260020004a006f0068006e00200048007500640073006f006e
002e002000540068006900730020006c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c00200048006500620072006500770020006900730020006f0070
0065006e00200073006f007500720063006500200073006f006600740077
00610072006500200075006e00640065007200200074006800650020004d
004900540020004c006900630065006e00730065003b0020007300650065
00200065006d0062006500640064006500640020006c006900630065006e
007300650020006400650073006300720069007000740069006f006e0020
0066006f0072002000640065007400610069006c0073002e00430061006c
0069006200720069002000690073002000610020006d006f006400650072
006e002000730061006e0073002000730065007200690066002000660061
006d0069006c00790020007700690074006800200073007500620074006c
006500200072006f0075006e00640069006e006700730020006f006e0020
007300740065006d007300200061006e006400200063006f0072006e0065
00720073002e002000490074002000660065006100740075007200650073
0020007200650061006c0020006900740061006c006900630073002c0020
0073006d0061006c006c00200063006100700073002c00200061006e0064
0020006d0075006c007400690070006c00650020006e0075006d00650072
0061006c00200073006500740073002e0020004900740073002000700072
006f0070006f007200740069006f006e007300200061006c006c006f0077
0020006800690067006800200069006d007000610063007400200069006e
002000740069006700680074006c007900200073006500740020006c0069
006e006500730020006f0066002000620069006700200061006e00640020
0073006d0061006c006c0020007400650078007400200061006c0069006b
0065002e002000430061006c0069006200720069002700730020006d0061
006e0079002000630075007200760065007300200061006e006400200074
006800650020006e00650077002000720061007300740065007200690073
006500720020007400650061006d00200075007000200069006e00200062
00690067006700650072002000730069007a0065007300200074006f0020
00720065007600650061006c002000610020007700610072006d00200061
006e006400200073006f0066007400200063006800610072006100630074
00650072002e004d006900630072006f0073006f00660074003a00200043
0061006c006900620072006900200042006f006c00640020004900740061
006c0069006300560065007200730069006f006e00200036002e00320030
00430061006c0069006200720069002d0042006f006c0064004900740061
006c0069006300430061006c006900620072006900200069007300200061
002000740072006100640065006d00610072006b0020006f006600200074
006800650020004d006900630072006f0073006f00660074002000670072
006f007500700020006f006600200063006f006d00700061006e00690065
0073002e00a9002000320030003100370020004d006900630072006f0073
006f0066007400200043006f00720070006f0072006100740069006f006e
002e00200041006c006c0020005200690067006800740073002000520065
007300650072007600650064002e000d000a004800650062007200650077
0020004f00700065006e00540079007000650020004c00610079006f0075
00740020006c006f00670069006300200063006f00700079007200690067
00680074002000a900200032003000300033002000260020003200300030
0037002c002000520061006c00700068002000480061006e0063006f0063
006b002000260020004a006f0068006e00200048007500640073006f006e
002e002000540068006900730020006c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c00200048006500620072006500770020006900730020006f0070
0065006e00200073006f007500720063006500200073006f006600740077
00610072006500200075006e00640065007200200074006800650020004d
004900540020004c006900630065006e00730065003b0020007300650065
00200065006d0062006500640064006500640020006c006900630065006e
007300650020006400650073006300720069007000740069006f006e0020
0066006f0072002000640065007400610069006c0073002e004c00750063
0028006100730029002000640065002000470072006f006f007400680074
00740070003a002f002f007700770077002e006d006900630072006f0073
006f00660074002e0063006f006d002f007400790070006f006700720061
007000680079002f006300740066006f006e007400730068007400740070
003a002f002f006c00750063006100730066006f006e00740073002e0063
006f006d004d006900630072006f0073006f006600740020007300750070
0070006c00690065006400200066006f006e0074002e00200059006f0075
0020006d0061007900200075007300650020007400680069007300200066
006f006e007400200074006f0020006300720065006100740065002c0020
0064006900730070006c00610079002c00200061006e0064002000700072
0069006e007400200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
00650020006c006900630065006e007300650020007400650072006d0073
0020006f00720020007400650072006d00730020006f0066002000750073
0065002c0020006f006600200074006800650020004d006900630072006f
0073006f00660074002000700072006f0064007500630074002c00200073
006500720076006900630065002c0020006f007200200063006f006e0074
0065006e007400200069006e002000770068006900630068002000740068
0069007300200066006f006e0074002000770061007300200069006e0063
006c0075006400650064002e00200059006f00750020006d006100790020
006f006e006c0079002000280069002900200065006d0062006500640020
007400680069007300200066006f006e007400200069006e00200063006f
006e00740065006e00740020006100730020007000650072006d00690074
007400650064002000620079002000740068006500200065006d00620065
006400640069006e00670020007200650073007400720069006300740069
006f006e007300200069006e0063006c007500640065006400200069006e
0020007400680069007300200066006f006e0074003b00200061006e0064
00200028006900690029002000740065006d0070006f0072006100720069
006c007900200064006f0077006e006c006f006100640020007400680069
007300200066006f006e007400200074006f002000610020007000720069
006e0074006500720020006f00720020006f00740068006500720020006f
00750074007000750074002000640065007600690063006500200074006f
002000680065006c00700020007000720069006e007400200063006f006e
00740065006e0074002e00200041006e00790020006f0074006800650072
0020007500730065002000690073002000700072006f0068006900620069
007400650064002e000d000d00540068006500200066006f006c006c006f
00770069006e00670020006c006900630065006e00730065002c00200062
00610073006500640020006f006e00200074006800650020004d00490054
0020006c006900630065006e00730065002000280068007400740070003a
002f002f0065006e002e00770069006b006900700065006400690061002e
006f00720067002f00770069006b0069002f004d00490054005f004c0069
00630065006e007300650029002c0020006100700070006c006900650073
00200074006f00200074006800650020004f00700065006e005400790070
00650020004c00610079006f007500740020006c006f0067006900630020
0066006f00720020004200690062006c006900630061006c002000480065
00620072006500770020201c004c00610079006f007500740020004c006f
006700690063201d0020006100730020006a006f0069006e0074006c0079
00200064006500760065006c006f00700065006400200062007900200052
0061006c00700068002000480061006e0063006f0063006b00200061006e
00640020004a006f0068006e00200048007500640073006f006e002e0020
000d000d005000650072006d0069007300730069006f006e002000690073
00200068006500720065006200790020006700720061006e007400650064
002c002000660072006500650020006f0066002000630068006100720067
0065002c00200074006f00200061006e007900200070006500720073006f
006e0020006f0062007400610069006e0069006e00670020006100200063
006f007000790020006f006600200074006800650020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200066006f00720020004200690062006c006900630061006c
002000480065006200720065007700200061006e00640020006100730073
006f00630069006100740065006400200064006f00630075006d0065006e
0074006100740069006f006e002000660069006c00650073002000280074
006800650020201c004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065201d0029002c00200074
006f0020006400650061006c00200069006e00200074006800650020004c
00610079006f007500740020004c006f00670069006300200053006f0066
0074007700610072006500200077006900740068006f0075007400200072
00650073007400720069006300740069006f006e002c00200069006e0063
006c007500640069006e006700200077006900740068006f007500740020
006c0069006d00690074006100740069006f006e00200074006800650020
00720069006700680074007300200074006f0020007500730065002c0020
0063006f00700079002c0020006d006f0064006900660079002c0020006d
0065007200670065002c0020007000750062006c006900730068002c0020
0064006900730074007200690062007500740065002c0020007300750062
006c006900630065006e00730065002c00200061006e0064002f006f0072
002000730065006c006c00200063006f00700069006500730020006f0066
00200074006800650020004c00610079006f007500740020004c006f0067
0069006300200053006f006600740077006100720065002c00200061006e
006400200074006f0020007000650072006d006900740020007000650072
0073006f006e007300200074006f002000770068006f006d002000740068
00650020004c00610079006f007500740020004c006f0067006900630020
0053006f0066007400770061007200650020006900730020006600750072
006e0069007300680065006400200074006f00200064006f00200073006f
002c0020007300750062006a00650063007400200074006f002000740068
006500200066006f006c006c006f00770069006e006700200063006f006e
0064006900740069006f006e0073003a000d000d00540068006500200061
0062006f0076006500200063006f00700079007200690067006800740020
006e006f007400690063006500200061006e006400200074006800690073
0020007000650072006d0069007300730069006f006e0020006e006f0074
0069006300650020007300680061006c006c00200062006500200069006e
0063006c007500640065006400200069006e00200061006c006c00200063
006f00700069006500730020006f00720020007300750062007300740061
006e007400690061006c00200070006f007200740069006f006e00730020
006f006600200074006800650020004c00610079006f007500740020004c
006f00670069006300200053006f006600740077006100720065002e000d
000d00540048004500200053004f00460054005700410052004500200049
0053002000500052004f0056004900440045004400200027004100530020
004900530027002c00200057004900540048004f00550054002000570041
005200520041004e005400590020004f004600200041004e00590020004b
0049004e0044002c002000450058005000520045005300530020004f0052
00200049004d0050004c004900450044002c00200049004e0043004c0055
00440049004e004700200042005500540020004e004f00540020004c0049
004d004900540045004400200054004f0020005400480045002000570041
005200520041004e00540049004500530020004f00460020004d00450052
004300480041004e0054004100420049004c004900540059002c00200046
00490054004e00450053005300200046004f005200200041002000500041
00520054004900430055004c0041005200200050005500520050004f0053
004500200041004e00440020004e004f004e0049004e004600520049004e
00470045004d0045004e0054002e00200049004e0020004e004f00200045
00560045004e00540020005300480041004c004c00200054004800450020
0041005500540048004f005200530020004f005200200043004f00500059
0052004900470048005400200048004f004c004400450052005300200042
00450020004c004900410042004c004500200046004f005200200041004e
005900200043004c00410049004d002c002000440041004d004100470045
00530020004f00520020004f00540048004500520020004c004900410042
0049004c004900540059002c002000570048004500540048004500520020
0049004e00200041004e00200041004300540049004f004e0020004f0046
00200043004f004e00540052004100430054002c00200054004f00520054
0020004f00520020004f00540048004500520057004900530045002c0020
00410052004900530049004e0047002000460052004f004d002c0020004f
005500540020004f00460020004f005200200049004e00200043004f004e
004e0045004300540049004f004e00200057004900540048002000540048
004500200053004f0046005400570041005200450020004f005200200054
0048004500200055005300450020004f00520020004f0054004800450052
0020004400450041004c0049004e0047005300200049004e002000540048
004500200053004f004600540057004100520045002e000d006800740074
0070003a002f002f007700770077002e006d006900630072006f0073006f
00660074002e0063006f006d002f007400790070006f0067007200610070
00680079002f0066006f006e00740073002f00640065006600610075006c
0074002e0061007300700078a92032303137204d6963726f736f66742043
6f72706f726174696f6e2e20416c6c205269676874732052657365727665
642e0d486562726577204f70656e54797065204c61796f7574206c6f6769
6320636f7079726967687420a92032303033202620323030372c2052616c
70682048616e636f636b2026204a6f686e20487564736f6e2e2054686973
206c61796f7574206c6f67696320666f72204269626c6963616c20486562
726577206973206f70656e20736f7572636520736f66747761726520756e
64657220746865204d4954204c6963656e73653b2073656520656d626564
646564206c6963656e7365206465736372697074696f6e20666f72206465
7461696c732e43616c696272692069732061206d6f6465726e2073616e73
2073657269662066616d696c79207769746820737562746c6520726f756e
64696e6773206f6e207374656d7320616e6420636f726e6572732e204974
206665617475726573207265616c206974616c6963732c20736d616c6c20
636170732c20616e64206d756c7469706c65206e756d6572616c20736574
732e204974732070726f706f7274696f6e7320616c6c6f77206869676820
696d7061637420696e2074696768746c7920736574206c696e6573206f66
2062696720616e6420736d616c6c207465787420616c696b652e2043616c
696272692773206d616e792063757276657320616e6420746865206e6577
2072617374657269736572207465616d20757020696e2062696767657220
73697a657320746f2072657665616c2061207761726d20616e6420736f66
74206368617261637465722e4d6963726f736f66743a2043616c69627269
20426f6c64204974616c696356657273696f6e20362e323043616c696272
692d426f6c644974616c696343616c696272692069732061207472616465
6d61726b206f6620746865204d6963726f736f66742067726f7570206f66
20636f6d70616e6965732e4c7563286173292064652047726f6f74687474
703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f67726170
68792f6374666f6e7473687474703a2f2f6c75636173666f6e74732e636f
6d4d6963726f736f667420737570706c69656420666f6e742e20596f7520
6d617920757365207468697320666f6e7420746f206372656174652c2064
6973706c61792c20616e64207072696e7420636f6e74656e742061732070
65726d697474656420627920746865206c6963656e7365207465726d7320
6f72207465726d73206f66207573652c206f6620746865204d6963726f73
6f66742070726f647563742c20736572766963652c206f7220636f6e7465
6e7420696e207768696368207468697320666f6e742077617320696e636c
756465642e20596f75206d6179206f6e6c792028692920656d6265642074
68697320666f6e7420696e20636f6e74656e74206173207065726d697474
65642062792074686520656d62656464696e67207265737472696374696f
6e7320696e636c7564656420696e207468697320666f6e743b20616e6420
286969292074656d706f726172696c7920646f776e6c6f61642074686973
20666f6e7420746f2061207072696e746572206f72206f74686572206f75
747075742064657669636520746f2068656c70207072696e7420636f6e74
656e742e20416e79206f74686572207573652069732070726f6869626974
65642e0d0d54686520666f6c6c6f77696e67206c6963656e73652c206261
736564206f6e20746865204d4954206c6963656e73652028687474703a2f
2f656e2e77696b6970656469612e6f72672f77696b692f4d49545f4c6963
656e7365292c206170706c69657320746f20746865204f70656e54797065
204c61796f7574206c6f67696320666f72204269626c6963616c20486562
72657720d24c61796f7574204c6f676963d3206173206a6f696e746c7920
646576656c6f7065642062792052616c70682048616e636f636b20616e64
204a6f686e20487564736f6e2e200d0d5065726d697373696f6e20697320
686572656279206772616e7465642c2066726565206f6620636861726765
2c20746f20616e7920706572736f6e206f627461696e696e67206120636f
7079206f6620746865204f70656e54797065204c61796f7574206c6f6769
6320666f72204269626c6963616c2048656272657720616e64206173736f
63696174656420646f63756d656e746174696f6e2066696c657320287468
6520d24c61796f7574204c6f67696320536f667477617265d3292c20746f
206465616c20696e20746865204c61796f7574204c6f67696320536f6674
7761726520776974686f7574207265737472696374696f6e2c20696e636c
7564696e6720776974686f7574206c696d69746174696f6e207468652072
696768747320746f207573652c20636f70792c206d6f646966792c206d65
7267652c207075626c6973682c20646973747269627574652c207375626c
6963656e73652c20616e642f6f722073656c6c20636f70696573206f6620
746865204c61796f7574204c6f67696320536f6674776172652c20616e64
20746f207065726d697420706572736f6e7320746f2077686f6d20746865
204c61796f7574204c6f67696320536f667477617265206973206675726e
697368656420746f20646f20736f2c207375626a65637420746f20746865
20666f6c6c6f77696e6720636f6e646974696f6e733a0d0d546865206162
6f766520636f70797269676874206e6f7469636520616e64207468697320
7065726d697373696f6e206e6f74696365207368616c6c20626520696e63
6c7564656420696e20616c6c20636f70696573206f72207375627374616e
7469616c20706f7274696f6e73206f6620746865204c61796f7574204c6f
67696320536f6674776172652e0d0d54484520534f465457415245204953
2050524f564944454420274153204953272c20574954484f555420574152
52414e5459204f4620414e59204b494e442c2045585052455353204f5220
494d504c4945442c20494e434c5544494e4720425554204e4f54204c494d
4954454420544f205448452057415252414e54494553204f46204d455243
48414e544142494c4954592c204649544e45535320464f52204120504152
544943554c415220505552504f534520414e44204e4f4e494e4652494e47
454d454e542e20494e204e4f204556454e54205348414c4c205448452041
5554484f5253204f5220434f5059524947485420484f4c44455253204245
204c4941424c4520464f5220414e5920434c41494d2c2044414d41474553
204f52204f54484552204c494142494c4954592c20574845544845522049
4e20414e20414354494f4e204f4620434f4e54524143542c20544f525420
4f52204f54484552574953452c2041524953494e472046524f4d2c204f55
54204f46204f5220494e20434f4e4e454354494f4e205749544820544845
20534f465457415245204f522054484520555345204f52204f5448455220
4445414c494e475320494e2054484520534f4654574152452e0d68747470
3a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f6772617068
792f666f6e74732f64656661756c742e61737078004d006900630072006f
0073006f0066007400200073007500700070006c00690065006400200066
006f006e0074002e00200059006f00750020006d00610079002000750073
00650020007400680069007300200066006f006e007400200074006f0020
006300720065006100740065002c00200064006900730070006c00610079
002c00200061006e00640020007000720069006e007400200063006f006e
00740065006e00740020006100730020007000650072006d006900740074
0065006400200062007900200074006800650020006c006900630065006e
007300650020007400650072006d00730020006f00720020007400650072
006d00730020006f00660020007500730065002c0020006f006600200074
006800650020004d006900630072006f0073006f00660074002000700072
006f0064007500630074002c00200073006500720076006900630065002c
0020006f007200200063006f006e00740065006e007400200069006e0020
007700680069006300680020007400680069007300200066006f006e0074
002000770061007300200069006e0063006c0075006400650064002e0020
0059006f00750020006d006100790020006f006e006c0079002000280069
002900200065006d0062006500640020007400680069007300200066006f
006e007400200069006e00200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
00740068006500200065006d00620065006400640069006e006700200072
00650073007400720069006300740069006f006e007300200069006e0063
006c007500640065006400200069006e0020007400680069007300200066
006f006e0074003b00200061006e00640020002800690069002900200074
0065006d0070006f0072006100720069006c007900200064006f0077006e
006c006f006100640020007400680069007300200066006f006e00740020
0074006f002000610020007000720069006e0074006500720020006f0072
0020006f00740068006500720020006f0075007400700075007400200064
0065007600690063006500200074006f002000680065006c007000200070
00720069006e007400200063006f006e00740065006e0074002e00200041
006e00790020006f00740068006500720020007500730065002000690073
002000700072006f0068006900620069007400650064002e000d000a000d
000a00540068006500200066006f006c006c006f00770069006e00670020
006c006900630065006e00730065002c0020006200610073006500640020
006f006e00200074006800650020004d004900540020006c006900630065
006e00730065002000280068007400740070003a002f002f0065006e002e
00770069006b006900700065006400690061002e006f00720067002f0077
0069006b0069002f004d00490054005f004c006900630065006e00730065
0029002c0020006100700070006c00690065007300200074006f00200074
006800650020004f00700065006e00540079007000650020004c00610079
006f007500740020006c006f00670069006300200066006f007200200042
00690062006c006900630061006c00200048006500620072006500770020
201c004c00610079006f007500740020004c006f006700690063201d0020
006100730020006a006f0069006e0074006c007900200064006500760065
006c006f007000650064002000620079002000520061006c007000680020
00480061006e0063006f0063006b00200061006e00640020004a006f0068
006e00200048007500640073006f006e002e0020000d000a000d000a0050
00650072006d0069007300730069006f006e002000690073002000680065
00720065006200790020006700720061006e007400650064002c00200066
0072006500650020006f00660020006300680061007200670065002c0020
0074006f00200061006e007900200070006500720073006f006e0020006f
0062007400610069006e0069006e00670020006100200063006f00700079
0020006f006600200074006800650020004f00700065006e005400790070
00650020004c00610079006f007500740020006c006f0067006900630020
0066006f00720020004200690062006c006900630061006c002000480065
006200720065007700200061006e00640020006100730073006f00630069
006100740065006400200064006f00630075006d0065006e007400610074
0069006f006e002000660069006c00650073002000280074006800650020
201c004c00610079006f007500740020004c006f00670069006300200053
006f006600740077006100720065201d0029002c00200074006f00200064
00650061006c00200069006e00200074006800650020004c00610079006f
007500740020004c006f00670069006300200053006f0066007400770061
0072006500200077006900740068006f0075007400200072006500730074
00720069006300740069006f006e002c00200069006e0063006c00750064
0069006e006700200077006900740068006f007500740020006c0069006d
00690074006100740069006f006e00200074006800650020007200690067
00680074007300200074006f0020007500730065002c00200063006f0070
0079002c0020006d006f0064006900660079002c0020006d006500720067
0065002c0020007000750062006c006900730068002c0020006400690073
0074007200690062007500740065002c0020007300750062006c00690063
0065006e00730065002c00200061006e0064002f006f0072002000730065
006c006c00200063006f00700069006500730020006f0066002000740068
00650020004c00610079006f007500740020004c006f0067006900630020
0053006f006600740077006100720065002c00200061006e006400200074
006f0020007000650072006d0069007400200070006500720073006f006e
007300200074006f002000770068006f006d00200074006800650020004c
00610079006f007500740020004c006f00670069006300200053006f0066
007400770061007200650020006900730020006600750072006e00690073
00680065006400200074006f00200064006f00200073006f002c00200073
00750062006a00650063007400200074006f002000740068006500200066
006f006c006c006f00770069006e006700200063006f006e006400690074
0069006f006e0073003a000d000a000d000a005400680065002000610062
006f0076006500200063006f00700079007200690067006800740020006e
006f007400690063006500200061006e0064002000740068006900730020
007000650072006d0069007300730069006f006e0020006e006f00740069
006300650020007300680061006c006c00200062006500200069006e0063
006c007500640065006400200069006e00200061006c006c00200063006f
00700069006500730020006f00720020007300750062007300740061006e
007400690061006c00200070006f007200740069006f006e00730020006f
006600200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002e000d000a
000d000a00540048004500200053004f0046005400570041005200450020
00490053002000500052004f005600490044004500440020002700410053
0020004900530027002c00200057004900540048004f0055005400200057
0041005200520041004e005400590020004f004600200041004e00590020
004b0049004e0044002c002000450058005000520045005300530020004f
005200200049004d0050004c004900450044002c00200049004e0043004c
005500440049004e004700200042005500540020004e004f00540020004c
0049004d004900540045004400200054004f002000540048004500200057
0041005200520041004e00540049004500530020004f00460020004d0045
0052004300480041004e0054004100420049004c004900540059002c0020
004600490054004e00450053005300200046004f00520020004100200050
004100520054004900430055004c0041005200200050005500520050004f
0053004500200041004e00440020004e004f004e0049004e004600520049
004e00470045004d0045004e0054002e00200049004e0020004e004f0020
004500560045004e00540020005300480041004c004c0020005400480045
00200041005500540048004f005200530020004f005200200043004f0050
00590052004900470048005400200048004f004c00440045005200530020
004200450020004c004900410042004c004500200046004f005200200041
004e005900200043004c00410049004d002c002000440041004d00410047
004500530020004f00520020004f00540048004500520020004c00490041
00420049004c004900540059002c00200057004800450054004800450052
00200049004e00200041004e00200041004300540049004f004e0020004f
004600200043004f004e00540052004100430054002c00200054004f0052
00540020004f00520020004f00540048004500520057004900530045002c
002000410052004900530049004e0047002000460052004f004d002c0020
004f005500540020004f00460020004f005200200049004e00200043004f
004e004e0045004300540049004f004e0020005700490054004800200054
0048004500200053004f0046005400570041005200450020004f00520020
00540048004500200055005300450020004f00520020004f005400480045
00520020004400450041004c0049004e0047005300200049004e00200054
0048004500200053004f004600540057004100520045002e000d000ab109
03b802a3b21b341fb8029bb21a351fb8028eb21a351fb80272b219371fb8
0271b219371fb80270b219371fb8025cb218391fb8025bb218391fb8025a
b218391fb80223b2173b1fb80222b2173b1fb80221b2173b1fb80220b217
3b1fb8021fb2173b1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1f
b80219b2173b1fb8021bb2173b1fb80218b2173b1fb80217b216461fb801
e1b216461fb801e0b216461fb801dfb216461fb801deb216461fb801ddb2
16461fb801dcb216461fb801dbb216461fb801dab216461fb801d9b21646
1fb801d8b216461fb801d7b216461fb801d6b216461fb801d3b216461fb8
01d5b216461fb801d4b216461fb801d2b216461fb801d1b216461fb801d0
b216461fb801ceb216461fb801cdb216461fb801ccb216461fb801cbb216
461fb801cab216461fb801c9b216461fb801c8b216461fb801c7b216461f
b801c6b216461fb801c4b216461fb801c3b216461fb801c2b216461fb801
c1b216461fb801bab215461fb801cfb215551fb801b9b215551fb801b8b2
15551fb801b7b215551fb801b6b215641fb801b5b215641fb801b4b21564
1fb801b3b215641fb801b2b215641fb801c5b215641fb80334b21f2d1fb8
0333b21f2d1fb80332b21f2d1fb80331b21f2d1fb80330b21f2d1fb8032f
b21b341fb8032eb21f2d1fb8030db21e2f1fb8030bb21e2f1fb802fbb21d
301fb802fab21d301fb802f8b21d301fb802f7b21d301fb802f6b21d301f
b802f5b21d301fb802f4b21d301fb802f3b21d301fb802f2b21d301fb802
dab21c331fb802d9b21c331fb802d8b21c331fb802d7b21c331fb802d5b2
1c331fb802d4b21c331fb802d3b21c331fb802b9b21b341fb8030cb21b34
1fb802b7b21b341fb802d2b21b341fb802d1b21b341fb802b6b21b341fb8
02b4b21b341fb802b8b21a351fb802a2b21a351fb802a1b21a351fb802a0
b21a351fb802b5b21a351fb8029eb21a351fb802d6b21a351fb8029cb21a
351fb8029fb219371fb8028cb219371fb8028db219371fb80289b2173b1f
b80286b219371fb80285b219371fb8026fb218391fb8028bb218391fb802
87b218391fb8026db218391fb8026cb218391fb8026bb218391fb8026ab2
173b1fb80255b2173b1fb80259b2173b1fb80258b2173b1fb80257b2173b
1fb80256b2173b1fb8028ab2173b1fb80253b2173b1fb80251b2173b1fb8
029db2173b1fb8024eb2173b1fb80288b2173b1fb80250b2173b1fb8024f
b2173b1fb8024db2173b1fb8024cb2173b1fb8030fb2173b1fb8024ab217
3b1fb8024bb2173b1fb80216b216461fb80215b216461fb8026eb216461f
b80252b216461fb80214b216461fb80213b216461fb80212b216461fb802
11b216461fb80210b216461fb8020fb216461fb8020eb216461fb8020db2
16461fb8020cb216461fb8020bb216461fb8020ab216461fb80254b21646
1fb80209b216461fb801c0b215641fb801bfb215641fb8031eb21f2d1fb8
031db21f2d1fb8031cb21f2d1fb8031bb21f2d1fb80319b21f2d1fb80318
b21f2d1fb80304b21e2f1fb80303b21e2f1fb802e7b21d301fb802e6b21d
301fb802e5b21d301fb802e4b21d301fb802c7b21c331fb802c6b21c331f
b802c5b21c331fb802c4b21b341fb802c3b21b341fb802adb21b341fb802
acb21b341fb802abb21b341fb8031ab21a351fb80236b2173b1fb80235b2
173b1fb80263b216461fb80316b21f2d1fb80315b21f2d1fb80314b21f2d
1fb80313b21f2d1fb80312b21f2d1fb80311b21f2d1fb80310b21f2d1fb8
0301b21e2f1fb80300b21e2f1fb802ffb21e2f1fb802fdb21e2f1fb802fc
b21e2f1fb802e2b21d301fb802e1b21d301fb802e0b21d301fb802dfb21d
301fb802deb21d301fb802ddb21d301fb802dcb21d301fb802dbb21d301f
b802c2b21c331fb802c1b21c331fb802c0b21c331fb802bfb21c331fb802
beb21c331fb802bdb21c331fb802bcb21c331fb802bbb21c331fb802bab2
1c331fb802a9b21b341fb802a8b21b341fb802a7b21b341fb802a6b21b34
1fb802a5b21b341fb802a4b21b341fb802e3b21a351fb80295b21a351fb8
0294b21a351fb80291b21a351fb8028fb21a351fb80293b219371fb80292
b219371fb8027ab219371fb80279b219371fb80278b219371fb80277b219
371fb80290b219371fb80276b219371fb80275b219371fb80274b219371f
b80273b219371fb80262b218391fb8025fb218391fb8025eb218391fb802
5db218391fb80261b218391fb80234b2173b1fb80233b2173b1fb80232b2
173b1fb80231b2173b1fb80230b2173b1fb80260b2173b1fb8022fb2173b
1fb8022eb2173b1fb8022db2173b1fb8022bb2173b1fb8022ab2173b1fb8
0229b2173b1fb80226b2173b1fb80225b2173b1fb80224b2173b1fb80228
b2173b1fb80227b2173b1fb80302b216461fb8022cb216461fb801f6b216
461fb801f4b216461fb801f3b216461fb801f2b216461fb801f1b216461f
b801f0b216461fb801efb216461fb801eeb216461fb801edb216461fb801
ecb216461fb801ebb216461fb801eab216461fb801e9b216461fb801e8b2
16461fb801e7b216461fb801e6b216461fb801e5b216461fb801f5b21646
1fb801e4b216461fb801e3b216461fb801e2b216461fb8032db21f2d1fb8
032cb21f2d1fb8032bb21f2d1fb8032ab21f2d1fb80329b21f2d1fb80328
b21f2d1fb80327b21f2d1fb80325b21f2d1fb80323b21f2d1fb80322b21f
2d1fb80321b21f2d1fb8031fb21f2d1fb8030ab21e2f1fb80309b21e2f1f
b80308b21e2f1fb80307b21e2f1fb80306b21e2f1fb802f1b21d301fb802
f0b21d301fb802efb21d301fb802eeb21d301fb802edb21d301fb802ecb2
1d301fb802eab21d301fb802e9b21d301fb802e8b21d301fb802cfb21c33
1fb802ceb21c331fb802ebb21c331fb802d0b21c331fb802cdb21c331fb8
02ccb21b341fb802cab21b341fb802c9b21b341fb802c8b21b341fb80326
b21b341fb802b2b21a351fb802b0b21a351fb802afb21a351fb802aeb21a
351fb8029ab21a351fb80299b21a351fb80298b21a351fb802cbb21a351f
b802aab21a351fb80305b219371fb80296b219371fb80283b219371fb802
80b219371fb80281b219371fb8027fb219371fb8027eb219371fb80265b2
18391fb802b3b218391fb80269b218391fb80268b2173b1fb80266b2173b
1fb80264b2173b1fb802b1b2173b1fb80245b2173b1fb80248b2173b1fb8
0242b2173b1fb80241b2173b1fb80240b2173b1fb8023fb2173b1fb80284
b2173b1fb80282b2173b1fb80297b2173b1fb8023cb2173b1fb8023eb217
3b1fb8023bb2173b1fb8023ab2173b1fb80239b2173b1fb80249b2173b1f
b80247b2173b1fb80246b2173b1fb80238b2173b1fb80237b2173b1fb802
08b216461fb80207b216461fb8023db216461fb80206b216461fb80205b2
16461fb80204b216461fb80203b216461fb80202b216461fb80201b21646
1fb80244b216461fb80243b216461fb80200b216461fb8027bb216461fb8
01ffb216461fb801feb216461fb80267b216461fb801fdb216461fb801fc
b216461fb801fbb216461fb801fab216461fb801f9b216461fb801f8b216
461fb801beb215641fb801bdb215641fb801bcb215641fb801bbb215641f
b801b1b2148b1fb801b0b2148b1fb8027db219371fb8027cb219371fb801
1e40c710421ff70e481ff60e481ff50d4a1fe20d4a1fe10d4a1fe00c4e1f
c50c4e1fc40c4e1fc30c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561fbe0b
561fb40b561fb30b561fb20b561fb10b561fb00b561faf0b561fae0b561f
ad0b561fac0b561fab0b561faa0b561fa90b561fa80b561fa70b561fa60b
561fa50b561fa40b561fa30b561fa10a681fa00a681f9f0a681f9e0a681f
9d0a681f9c0a681f9b0a681f9a0a681f990a681f980a681f970a681f960a
681f9509771f9109771f9009771f8f09771f8e09771fb903530350400a56
1f8d09771f8c09651f4109035203500068001f035103500068001f01a2b2
13321fb801a1b213321fb801a0b212371fb8019fb212371fb80191b21237
1fb80190b211401fb8018fb211401fb8018eb211401fb8018db211401fb8
018cb211401fb8018bb211401fb8018ab211401fb80189b211401fb80188
b211401fb80187b211401fb8014eb211401fb8014db210421fb8014cb210
421fb8014bb210421fb8014ab210421fb80149b210421fb80148b210421f
b80147b210421fb80146b210421fb80145b210421fb80144b20f451fb801
43b20f451fb80142b20f451fb8011db20f451fb8011cb20f451fb8011bb2
0f451fb8011ab20f451fb80119b20f451fb80118b20e481fb80117b20e48
1fb80116b20e481fb80115b20e481fb80114b20e481fb80113b20e481fb8
0112b20d4a1fb8011140570d4a1ff40d4a1ff30d4a1ff20d4a1ff10d4a1f
f00d4a1fef0d4a1fee0c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c
4e1fda0c4e1fd90b561fd80b561fbd0b561fbc0b561fba0b561fb90b561f
a20a681f9409771fb80199b213321fb80198b213321fb80169b211401fb8
0168b211401fb80167b211401fb80166b211401fb80165b211401fb80164
b211401fb80163b211401fb80162b211401fb80161b211401fb80160b211
401fb80135b211401fb80134b210421fb80133b210421fb80132b210421f
b80131b210421fb80130b210421fb8012fb210421fb8012eb210421fb801
2db20f451fb8012cb20f451fb80107b20f451fb80106b20f451fb80105b2
0f451fb9034f034eb23b1f34bf034e0044034e0054034e0003ffc0034eb2
292c46b9ffc0034eb2121646b801adb213141fb801acb2131b1fb801abb2
131b1fb801aab213231fb801a9b213231fb801a8b213231fb801a7b21332
1fb801a6b213321fb801a5b213321fb801a4b213321fb801a3b213321fb8
0197b213321fb80196b213321fb80195b213321fb80194b212371fb80193
b212371fb80192b212371fb8015fb212371fb8015eb211401fb8015db211
401fb8015cb211401fb8015bb211401fb8015ab211401fb80159b211401f
b80158b211401fb80157b211401fb80156b211401fb80155b211401fb801
54b211401fb80153b211401fb80152b211401fb80151b211401fb80150b2
11401fb8014fb211401fb8012bb211401fb8012ab210421fb80129b21042
1fb80128b210421fb80127b210421fb80126b210421fb80125b210421fb8
0124b210421fb80123b210421fb80122b210421fb80121b20f451fb80120
b20f451fb8011fb20f451fb80104b20f451fb80103b20f451fb80102b20f
451fb80101b20f451fb8010040830e481fff0e481ffe0e481ffd0e481ffc
0e481ffb0e481ffa0d4a1ff90d4a1ff80d4a1fec0d4a1feb0d4a1fea0d4a
1fe90d4a1fe80d4a1fe70d4a1fe60c4e1fe50c4e1fe40c4e1fe30c4e1fcf
0c4e1fce0c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e
1fc70c4e1fc60c4e1fb80c4e1fb70b561fb60b561fb50b561fb801afb213
321fb801aeb213321fb8019eb213321fb8019db213321fb8019cb212371f
b8019bb212371fb8019ab212371fb80186b212371fb80185b2112e1fb801
84b211401fb80183b211401fb80182b211401fb80181b211401fb80180b2
11401fb8017fb211401fb8017eb211401fb8017db211401fb8017cb21140
1fb8017bb211401fb8017ab211401fb80179b211401fb80178b211401fb8
0177b211401fb80176b211401fb80175b211401fb80174b211401fb80173
b211401fb80172b211401fb80171b211401fb80170b211401fb8016fb211
401fb8016eb211401fb8016db211401fb8016cb211401fb80141b211401f
b80140b210421fb8013fb210421fb8013eb210421fb8013db210421fb801
3cb210421fb8013bb210421fb8013ab210421fb80139b210421fb80138b2
10421fb80137b20f451fb80136b20f451fb80110b20f451fb8010fb20f45
1fb8010eb20f451fb8010db20f451fb8010cb20f451fb8010bb20e481fb8
010ab20e481fb80109b20e481fb80108402f0e481fed0c4e1fd70c4e1fd6
0c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd00b561f930977
1f9209771fb8016bb212371fb8016a406e11401f8503251f84032e1f8301
2e1f8248805581ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b
7d7b7dab7ddb7d067c487a557bab7a55047a147a020a7948775578ab7755
0b77010c764875555475e475f4750314755475647574759475d475e47507
a475b475c47503b8ffc0401275383b46807590750214757475020075010f
b8ffc04020750b0e467448725573ab72550472247254720339f072010240
72016072707202b8ffc0b372242846b8ffc0401b72161a46207240725072
0371486f5570ab6f556e486d55ef6d0110410a03550020035500d0035500
03000f0354008f035440ff02006c706c02096a03251f692e675568ab6755
662e645565ab6455632e6255612e60555f2e5d555eab5d555c2e5a555bab
5a55592e58555703251f562e545555ab5455532e515552ab51554f2e4e55
4e03251f4d2e4b554cab4b554a2e485549ab4855504801472e4655450336
1f001f01001e01001e701e801ef01e040b601d701d02701de01df01d0370
1cf01c027f1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f19
9f19af19050f198f199f19030c7012801202701180110230114011d011e0
11040011a011020f8f0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf
0ecf0e034f0e5f0e6f0e030f0eaf0ebf0e0310400e2e31460f0d404b1f0d
2f0d033c2f0d3f0d4f0d038f0d01400d2e3246400d2427463f0c4f0c5f0c
039f0c01400c262946ef0aff0a02400a2427464009262d464009171b4600
03012001010001100120010308b8ffc0b401151f4603bd01000100000500
01019000542b4bb807ff524bb008505bb00188b02553b00188b040515ab0
0688b000555a5b58b101018e59b101024354b0144b515a58b101018e5985
8d8d001d424bb01d5358b203a0a01d42594bb0805358b20340401d42594b
b0ff5358b20300001d42592b5e7375732b2b2b732b73742b2b73745e732b
5e7374757374755e73747573015e7374737475757473745e737473002b2b
732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e737473732b
2b2b732b2b73755f755e732b2b2b5e7373732b7374752b5e732b2b5e732b
2b73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
185f5e0000>
[16249 16121 9097 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> WUKAAA+Calibri-BoldItalic AddT42Char 
2 0 0 <00050000fe7303e0050e00030007003b00550056004fb52d162d16083c41
0a023a0049000701b00002002002000008000101b1401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3031011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103e0fc4f03
46fd240276204468481e032d25161f1207011905231a0b2f4228120d1d2f
23263a291a06080704060a07082737422245674422fecb04080e090e2b20
1c23130604090f0b0d29211a221307fe26050efaf2050efb570444fbbc03
1136654e3306790d0b02050908a7211b1e303b1e14251d110d0f0d0e0e07
1c1f1c0707120f0a233d51fd9e091c201d0a0d0e0910150c0b1d1f1e0a0e
0c080f16fd21>WUKAAA+Calibri-BoldItalic AddT42Char 
WUKAAA+Calibri-BoldItalic /CharStrings get begin
/space 3 def
end
WUKAAA+Calibri-BoldItalic /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/TXQXGF+Calibri-BoldItalic /WUKAAA+Calibri-BoldItalic findfont ct_VMDictPut
/TXQXGF+Calibri-BoldItalic*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
TXQXGF+Calibri-BoldItalic nf
TXQXGF+Calibri-BoldItalic*1 [26.275 0 0 -26.275 0 0 ]msf
456.033 245.841 mo
( )sh
%ADOBeginSubsetFont: WUKAAA+Calibri-BoldItalic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXQXGF+Calibri-BoldItalic gcheck setglobal} if
2 336 24 <0002003b000004f6050e001800270062ba0346034700582bb10102435558
b9000002ed400919201f100f100f091fb80140b2135120b8016cb3400954
282b183f1aed3fed123939012fc63233d4ed30311bb3100f091fb80140b2
135120b8016cb3400954282b183f1aed3fed12393930315901140e062321
222e02371336363321321e0205342e0223230333323e0404f60f233b5879
9ec689feb7101d130705e208362501389acf8b45feec224c776489b18a69
8f6d4d3116033a3c868b897d6c4f2c0813201804682c273c76af923f6c4e
2cfc903359758288>TXQXGF+Calibri-BoldItalic AddT42Char 
2 1658 94 <0001ffffffe903bf0525004a0087ba0346034700582bb10102435558bc00
1102ea003f003602f140111a3f1a3f1a00251136441f072c072c310cb801
3fb2445331b80170b3401f56282b183f1aed3fed1139392f2f1112393901
2fc439392f2f10ed10ed30311b400a1136441f072c072c310cb8013fb244
5331b80170b3401f56282b183f1aed3fed1139392f2f1112393930315901
140e0423222e0223220e0215141e0615140e0223222e0335343e0433321e
0233323e0235342e0635343e0233321e0403bf0306090d10090e2a3d5234
364b3017243c4d4f4d3c244c8bc578416e553a1c04070a0e110a112f4660
433b593c1f243b4b4e4b3b244880b26b325a4a34140904ab081e24251f14
191d191e313d1f24372f2c30394b613f5ea17744151e211e1e0820252720
141f25201e34452925382f2a30384b62415a986d3d0f171c1315>TXQXGF+Calibri-BoldItalic AddT42Char 
2 6314 258 <0002003effe9041903d70026003b0093ba0348034900582bb10102435558
b3091d081eb8022bb42627263b08b8022bb2002631b802a9400c13093b27
1d0426000321492ab80155b21a4a36b80154b5400e4d034c282b183f3f1a
ed3fed3f1239391739012fedd4dded33113310ed11393930311b400b093b
271d0426000321492ab80155b21a4a36b80154b5400e4d034c282b183f3f
1aed3fed3f123939173930315925060623222e0237370e0323222e023534
3e043332161737363633321e020701262623220e0415141e0233323e0237
036404373d1f271807021c0f425a6d3a506a401b18324e6d8d5953803010
04373d1e28170802fed12355382a4636291b0d0918281f2c5c503d0e2115
1204090f0b8f20473a26385f7a433f9594896a3f45424f151205090f0afe
f437372843585f61291e362a19355b794500>TXQXGF+Calibri-BoldItalic AddT42Char 
2 15370 336 <00020036fe93041903d7003c005100deba0348034900582bb10102435558
401524101a1b024c33343d3c51501d1c3d1c001c3c3d47b802a940120b29
1c343c001c040537491f513d33042440b80154b5304a1212174cb8015440
0b244d2803171317021a0317b80103b340054f282b183f1aed005f5e5d2b
3fed12392f3fed1217393f121739012f2fc4edc4321133107d870ec4c4c4
1112013939002b30311b400f343c001c040537491f513d33042440b80154
b5304a1212174cb80154400b244d2803171317021a0317b80103b340054f
282b183f1aed005f5e5d2b3fed12392f3fed1217393f121739303159050e
0323222627262635343e0433321e0233323e02373636370e0323222e0235
343e043332161737363633321e020701262623220e0415141e0233323e02
37035c124c7cb17655872d100c02070a0f120c0c233a563f33513c25080d
1a0b12435663324d69421d18334e6d8d585380301004373d1e28170802fe
d12355382a4537291b0d0c19271c2c5c503d0e025b875b2e1b1508141206
1c22251d131114111024382941581c2141341f345c7c4841969488693e45
424f151205090f0afef5373728435860602b22382715355b7a45>TXQXGF+Calibri-BoldItalic AddT42Char 
3 0 346 <00010026fffa03e6057000410082ba0348034900582bb101024355584010
2e1924410b000a230b180b4134040513b80158401240394a23190a00242e
061e29461e4c054c282b183f3f3f1217393f1aed121739012f2fc4321133
cd333230311bb6180b4134040513b80158401240394a23190a00242e061e
29461e4c054c282b183f3f3f1217393f1aed121739303159250e0323222e
023713363635342e0223220e0207030e0323222e0237013e0333321e0207
030e03073e0333321e02151406070369020f1f3126242f1a09026b040609
14201629594f3e0d51020f1f3224252f1b08020107020e203125252f1a08
0247050c0f0f071342556334445e3c1b0807220a0f0a05050a0f0a021715
351516251b0f345a7843fe6e0a0f0a05050a0f0a05230a100b06060b100a
fe961632312e122040342126445e38244723>TXQXGF+Calibri-BoldItalic AddT42Char 
3 318 349 <00020026fffa022c054e001300290068ba0348034900582bb10102435558
b4291f141e00b80301400b0a1f1e1e141f290424190fb80195b605402449
194c282b183f3f1adeed11121739012f2fd4ed1133113330311bb71e141f
290424190fb80195b605402449194c282b183f3f1adeed11121739303159
010e0323222e02373e0333321e02010e0323222e0237133e0333321e0207
02250718283a2b2a351b04080718283a2b2a351b03fef7020f1f3224252f
1b0802b1020f1f3125252f1b080204ca25331f0d0d1f33252432200e0e20
32fb340a0f0a05050a0f0a037a0a0f0b06060b0f0a00>TXQXGF+Calibri-BoldItalic AddT42Char 
3 1222 374 <00010026fffa03e703d7003a0078ba0348034900582bb10102435558400c
311a1a1b26030f040e250f15b80158401440364a040e1b251a0f31260820
2b49204c094c282b183f3f3f1217393f1aed012f2fc4321133cd33321133
30311bb900150158401440364a040e1b251a0f312608202b49204c094c28
2b183f3f3f1217393f1aed30315901140607030e0323222e023713363635
342623220e0207030e0323222e0237133e0333321e0207073e0333321e02
03e709076f020f1f3125252f1a09026c0505262d29594f3e0d51020f1f32
24252f1b0802b3020d1b2b1e1f271607021d15465b6b3a465f3b1a02d723
4625fdd90a0f0a05050a0f0a02171832132d3a34597743fe6c0a0f0a0505
0a0f0a037d0a0f090505090f0a9323493a2529465d00>TXQXGF+Calibri-BoldItalic AddT42Char 
3 2072 396 <00010026fffa030c03d700330077ba0348034900582bb101024355584013
2811111d121c001d1c0f0c1f0c2f0c030d030cb8015f4010402d4a121c11
281d2706172249174c282b183f3f1217393f1aed005f5e5d012f2fc41133
1133113330311bb9000c015f4010402d4a121c11281d2706172249174c28
2b183f3f1217393f1aed30315901140e0423222e0223220e0207030e0323
222e0237133e0333321e0207073e0333321e021716030c04080c0f130b09
12161a11224d46370c50020f1f3224252f1b0802b2020e1b2b1e1f271607
021c183f474c250f1f1b15060603ac072430332c1c0707073455713efe6f
0a0f0a05050a0f0a037d0a0f090505090f0a8e2b48351e0406090506>TXQXGF+Calibri-BoldItalic AddT42Char 
3 3256 410 <0001005effec02e504b100450093ba0348034900582bb10102435558401d
362c2b372b42080941094137092b2b30371737170030424837413c082cb8
0128b5092b2136480fb80152b340214d282b183f1aed3f123939ed32cd39
393f012fcd39392f2f123911331133107d87c4c41087c4c430311bb64248
37413c082cb80128b5092b2136480fb80152b340214d282b183f1aed3f12
3939ed32cd39393f30315901140e04232303060615141633323e02333216
15140e02070e0323222e0235343e02371323222635343e023333373e0333
321e02070733321602e504070c0f130bc354030526291822191208080b08
0d1009092431381c3c5b3e1f02050503576c0d0c07101a126b28020f1f31
2524301a090228c1110c03950a1f24241d13fe5d0f290d28250709070f11
13302d250909100c071936543c0b1d20210d01b3111811373526c70a100b
05050b100ac71600>TXQXGF+Calibri-BoldItalic AddT42Char 
TXQXGF+Calibri-BoldItalic /CharStrings get begin
/D 24 def
/S 94 def
/a 258 def
/g 336 def
/h 346 def
/i 349 def
/n 374 def
/r 396 def
/t 410 def
end
TXQXGF+Calibri-BoldItalic /Encoding get
dup 68 /D put
dup 83 /S put
dup 97 /a put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 114 /r put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXQXGF+Calibri-BoldItalic*1 
[32{/.notdef}rp /space 35{/.notdef}rp /D 14{/.notdef}rp /S 13{/.notdef}rp /a 
5{/.notdef}rp /g /h /i 4{/.notdef}rp /n 3{/.notdef}rp /r 
/.notdef /t 139{/.notdef}rp]
TXQXGF+Calibri-BoldItalic nf
TXQXGF+Calibri-BoldItalic*1 [26.275 0 0 -26.275 0 0 ]msf
461.913 245.841 mo
(Data Sharing )
[16.5533 13.4529 9.01233 13.5052 5.93811 12.0602 14.2146 13.5052 9.01257 6.72644 13.5051 13.5054 
0 ]xsh
%ADOBeginSubsetFont: WUKAAA+Calibri-BoldItalic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXQXGF+Calibri-BoldItalic gcheck setglobal} if
2 8624 286 <0002003bffe903c903d7002e003c00b3ba0348034900582bb10102435558
b62a323706040009b80293400923110c1e031414232fb8028f4027002311
110c32ea2a37c62800061006400650066006b006c006071b0306061e2a4a
0cff401e4d282b183f1aed3f12392f005f5e5d2bed10ed11392f012fdded
12392f173910ed11173930311b402511110c32ea2a37c628000610064006
50066006b006c006071b0306061e2a4a0cff401e4d282b183f1aed3f1239
2f005f5e5d2bed10ed11392f30315901140e022323060615141633323e02
33321615140e02070e0323222e0235343e0433321e0207342623220e0207
33323e0203c94189d3925c0404545d42694f340c0c0a060b110b0c405a70
3a608f60301938587da4695b835429f73f3c324f3c2b0d54506c421e02da
4873532c172d1351521317130e0f112c2b260a0c18140d28527f57439995
88673e2b475b432835243d532f152431>TXQXGF+Calibri-BoldItalic AddT42Char 
TXQXGF+Calibri-BoldItalic /CharStrings get begin
/e 286 def
end
TXQXGF+Calibri-BoldItalic /Encoding get
dup 101 /e put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXQXGF+Calibri-BoldItalic*1 
[32{/.notdef}rp /space 35{/.notdef}rp /D 14{/.notdef}rp /S 13{/.notdef}rp /a 
3{/.notdef}rp /e /.notdef /g /h /i 4{/.notdef}rp /n 
3{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]
TXQXGF+Calibri-BoldItalic nf
TXQXGF+Calibri-BoldItalic*1 [26.25 0 0 -26.25 0 0 ]msf
640.363 485.471 mo
(Stage)
[11.9961 9.00378 13.4926 14.2274 0 ]xsh
TXQXGF+Calibri-BoldItalic*1 [26.25 0 0 -26.25 0 0 ]msf
701.713 485.471 mo
( )sh
%ADOBeginSubsetFont: WUKAAA+Calibri-BoldItalic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXQXGF+Calibri-BoldItalic gcheck setglobal} if
3 15282 1006 <0001000a000003f10525004300a4ba0346034700582bb10102435558b900
45ffc040090f024d0045010f0340b802cdb71212270027000d1ab8032cb2
380d2ebb017e0024001f018540091a133f030833531240b80171b3400854
282b183f1afdc13f121739fdd4ed012fdded1239392f2f3910ed30315f5e
5d2b1bb50045010f032ebb017e0024001f018540091a133f030833531240
b80171b3400854282b183f1afdc13f121739fdd4ed3031015f5e5d592514
0e042321222e0235343e0237013e0535342e0223220e0223222635343e04
373e0333321e0215140e040707213216037b03080b0f130dfd18141a1006
0612251e01313c593e2716070c1e352935604e370c0d0b0205090a0f0a0c
4763793f698c52220f2542658f61b801ed120ea3071f24261f14060e140e
0f323d3f1b010b365e50463a3113132a23171f251f1815081c2225231d0a
0c262319355365302c595f6777874f9b1e00>TXQXGF+Calibri-BoldItalic AddT42Char 
TXQXGF+Calibri-BoldItalic /CharStrings get begin
/two 1006 def
end
TXQXGF+Calibri-BoldItalic /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXQXGF+Calibri-BoldItalic*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 17{/.notdef}rp /D 14{/.notdef}rp /S 
13{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /h /i 
4{/.notdef}rp /n 3{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]
TXQXGF+Calibri-BoldItalic nf
TXQXGF+Calibri-BoldItalic*1 [26.25 0 0 -26.25 0 0 ]msf
707.593 485.471 mo
(2)sh
%ADOBeginSubsetFont: WUKAAA+Calibri-BoldItalic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXQXGF+Calibri-BoldItalic gcheck setglobal} if
3 11406 855 <00020056fff3020303af001300270030bf000002fc000a001402fd001e00
2301a6b2194c05b801a7b20f4828ba0348034900582b2b3fed3fed012fed
d4ed3031010e0323222e02373e0333321e02030e0323222e02373e033332
1e0201fa0819273a2829331a0209081927392928341a028b0819283a2829
331a010808182739292934190303162a3824101024382a2a3b241010243b
fd492a3923100f23392b2a3a241010243a00>TXQXGF+Calibri-BoldItalic AddT42Char 
TXQXGF+Calibri-BoldItalic /CharStrings get begin
/colon 855 def
end
TXQXGF+Calibri-BoldItalic /Encoding get
dup 58 /colon put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXQXGF+Calibri-BoldItalic*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 7{/.notdef}rp /colon 9{/.notdef}rp /D 
14{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g 
/h /i 4{/.notdef}rp /n 3{/.notdef}rp /r /.notdef /t 
139{/.notdef}rp]
TXQXGF+Calibri-BoldItalic nf
TXQXGF+Calibri-BoldItalic*1 [26.25 0 0 -26.25 0 0 ]msf
720.763 485.471 mo
(: )
[7.5 0 ]xsh
%ADOBeginSubsetFont: WUKAAA+Calibri-BoldItalic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXQXGF+Calibri-BoldItalic gcheck setglobal} if
2 554 28 <0001003c00000420050e002d0088ba0346034700582bb101024355584010
0915160816160828271a0d1a0d002709b8013bb6282b2715152108b80140
b22b5116b80140b3402154282b183f1aed3fed12392f391239ed012fc439
392f2f10cd3233107d87c4c430311bb90009013bb6282b2715152108b801
40b22b5116b80140b3402154282b183f1aed3fed12392f391239ed303159
01140e0423210321321615140e0423210321321615140e042321222e0237
133636332132042003060a0f150cfe324001880e0c03060a0f140cfe794a
01d40c0c02070a0f140dfd76101a110604e209362102841a04e8061e2528
2116fec41412071d25262014fe931514071e2526211409151f1604682c27
>TXQXGF+Calibri-BoldItalic AddT42Char 
3 660 367 <00010026fffa022b057000150047ba0348034900582bb101024355584010
15000b400a000a150b04051046054c282b183f3f121739012f1acd333230
311b400b000a150b04051046054c282b183f3f121739303159250e032322
2e0237013e0333321e02070123020f1e3224262f1a09020107020e203125
252f1a0802220a0f0a05050a0f0a05230a100b06060b100a>TXQXGF+Calibri-BoldItalic AddT42Char 
3 1514 381 <0002003cffe9040003d70017002f0055ba0348034900582bb10102435558
bf000002ba0018002402ba000c001d0122b2134a29b80123b340074d282b
183f1aed3fed012fedd4ed30311bb9001d0122b2134a29b80123b340074d
282b183f1aed3fed30315901140e0423222e0235343e0433321e0205342e
0223220e0415141e0233323e0404001b3a5b7fa467659362301b3a5b7fa4
6765936230fefc11273d2c32503f2e1e0e11273d2c32503f2e1e0e027248
98917f61382f5b85564898908160382f5b85672a412d1827425760632d2a
422d182743576162>TXQXGF+Calibri-BoldItalic AddT42Char 
3 1732 393 <0002ffdffe95040003d7002a003f009dba0348034900582bb10102435558
400d2135360c0d350d35180d171800b802a940092b170c363521040730b8
0154400d264a170d182004121b49124f39b80154b340074d282b183f1aed
3f3f1217393fed121739012fd4ed2f11331133107d870ec4c41101333031
1bb60c363521040730b80154400d264a170d182004121b49124f39b80154
b340074d282b183f1aed3f3f1217393fed12173930315901140e0423222e
0227030e0323222e023713363633321e0207073e0333321e0205342e0223
220e020707161633323e04040018324e6d8d5828463b30124f020f1f3225
252e1b0802fa04363e1f271708021c0f415b6d3a4d69411dfefd0b19271c
2d5b503e0d1c235538294537291b0d028341969489683e101d2716fe6d0a
100b06060b100a04df151205090f0a9121473b26355c7c5d22382714355b
79458837372843586061>TXQXGF+Calibri-BoldItalic AddT42Char 
3 6090 454 <0001ffc7fffa03da03c6002f0079ba0348034900582bb10102435558bc00
2302a40019000b02bc400d0100240c180401190119011725bb0292002f00
0d02bf400e40172a49240c121e49124c064c282b183f3f3f1239393f012f
1aed2fed1239392f2f12173910ed10ed30311b400c2a49240c121e49124c
064c282b183f3f3f1239393f3031590113160e0223222e022703030e0323
22262636370103263e0233321e021713133e033332161606070294a00506
1f3a2e2a301a09026ce2060f2339302b3418030b01539506041b392f292f
19090368d7060e1e30292e371a030d01f0fe4411160e0504080e09013bfe
c4090d0804050d151101bc019c12170e0503060d0afed6012a080c080404
0c151200>TXQXGF+Calibri-BoldItalic AddT42Char 
TXQXGF+Calibri-BoldItalic /CharStrings get begin
/E 28 def
/l 367 def
/o 381 def
/p 393 def
/x 454 def
end
TXQXGF+Calibri-BoldItalic /Encoding get
dup 69 /E put
dup 108 /l put
dup 111 /o put
dup 112 /p put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXQXGF+Calibri-BoldItalic*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 7{/.notdef}rp /colon 9{/.notdef}rp /D 
/E 13{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp /e /.notdef 
/g /h /i 2{/.notdef}rp /l /.notdef /n /o 
/p /.notdef /r /.notdef /t 3{/.notdef}rp /x 135{/.notdef}rp]
TXQXGF+Calibri-BoldItalic nf
TXQXGF+Calibri-BoldItalic*1 [26.25 0 0 -26.25 0 0 ]msf
733.813 485.471 mo
(Data Exploitation )
[16.5376 13.5188 9.03003 13.5187 5.9325 12.8102 12.0487 13.545 6.71997 13.5186 6.72009 9.03003 
13.5187 9.03003 6.72009 13.5186 13.5186 0 ]xsh
163.513 121.431 mo
163.513 111.801 171.323 103.991 180.963 103.991 cv
190.593 103.991 198.403 111.801 198.403 121.431 cv
198.403 131.071 190.593 138.881 180.963 138.881 cv
171.323 138.881 163.513 131.071 163.513 121.431 cv
cp
.472541 .271244 0 0 cmyk
ef
1.5 lw
2 lc
0 lj
[] 0 dsh
163.513 121.431 mo
163.513 111.801 171.323 103.991 180.963 103.991 cv
190.593 103.991 198.403 111.801 198.403 121.431 cv
198.403 131.071 190.593 138.881 180.963 138.881 cv
171.323 138.881 163.513 131.071 163.513 121.431 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
163.513 178.751 mo
163.513 169.111 171.323 161.301 180.963 161.301 cv
190.593 161.301 198.403 169.111 198.403 178.751 cv
198.403 188.381 190.593 196.191 180.963 196.191 cv
171.323 196.191 163.513 188.381 163.513 178.751 cv
cp
.472541 .271244 0 0 cmyk
ef
163.513 178.751 mo
163.513 169.111 171.323 161.301 180.963 161.301 cv
190.593 161.301 198.403 169.111 198.403 178.751 cv
198.403 188.381 190.593 196.191 180.963 196.191 cv
171.323 196.191 163.513 188.381 163.513 178.751 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
163.513 282.171 mo
163.513 272.531 171.323 264.721 180.963 264.721 cv
190.593 264.721 198.403 272.531 198.403 282.171 cv
198.403 291.801 190.593 299.611 180.963 299.611 cv
171.323 299.611 163.513 291.801 163.513 282.171 cv
cp
.472541 .271244 0 0 cmyk
ef
163.513 282.171 mo
163.513 272.531 171.323 264.721 180.963 264.721 cv
190.593 264.721 198.403 272.531 198.403 282.171 cv
198.403 291.801 190.593 299.611 180.963 299.611 cv
171.323 299.611 163.513 291.801 163.513 282.171 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
23.9629 267.211 mo
58.8509 267.211 li
58.8509 232.323 li
23.9629 232.323 li
cp
.394232 .0187991 .542443 0 cmyk
ef
23.9629 267.211 mo
58.8509 267.211 li
58.8509 232.323 li
23.9629 232.323 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
23.9629 117.691 mo
58.8509 117.691 li
58.8509 82.803 li
23.9629 82.803 li
cp
.394232 .0187991 .542443 0 cmyk
ef
23.9629 117.691 mo
58.8509 117.691 li
58.8509 82.803 li
23.9629 82.803 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
23.9629 192.451 mo
58.8509 192.451 li
58.8509 157.563 li
23.9629 157.563 li
cp
.394232 .0187991 .542443 0 cmyk
ef
23.9629 192.451 mo
58.8509 192.451 li
58.8509 157.563 li
23.9629 157.563 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
23.9629 341.971 mo
58.8509 341.971 li
58.8509 307.083 li
23.9629 307.083 li
cp
.394232 .0187991 .542443 0 cmyk
ef
23.9629 341.971 mo
58.8509 341.971 li
58.8509 307.083 li
23.9629 307.083 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
23.9629 416.731 mo
58.8509 416.731 li
58.8509 381.843 li
23.9629 381.843 li
cp
.394232 .0187991 .542443 0 cmyk
ef
23.9629 416.731 mo
58.8509 416.731 li
58.8509 381.843 li
23.9629 381.843 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
163.513 335.741 mo
163.513 326.111 171.323 318.301 180.963 318.301 cv
190.593 318.301 198.403 326.111 198.403 335.741 cv
198.403 345.381 190.593 353.191 180.963 353.191 cv
171.323 353.191 163.513 345.381 163.513 335.741 cv
cp
.472541 .271244 0 0 cmyk
ef
163.513 335.741 mo
163.513 326.111 171.323 318.301 180.963 318.301 cv
190.593 318.301 198.403 326.111 198.403 335.741 cv
198.403 345.381 190.593 353.191 180.963 353.191 cv
171.323 353.191 163.513 345.381 163.513 335.741 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 lc
1 lj
58.8529 100.251 mo
163.513 121.431 li
1 /0 /CSD get_res sepcs
.502 sep
@
58.8529 175.011 mo
163.513 121.431 li
@
58.8529 249.771 mo
163.513 121.431 li
@
58.8529 324.531 mo
163.513 282.171 li
@
58.8529 249.771 mo
163.513 335.741 li
@
58.8529 175.011 mo
163.513 282.171 li
@
58.8529 399.291 mo
163.513 335.741 li
@
58.8529 249.771 mo
163.513 178.751 li
@
58.8529 399.291 mo
163.513 178.751 li
@
58.8529 324.531 mo
163.513 335.741 li
@
58.8529 100.251 mo
163.513 178.751 li
@
2 lc
0 lj
[3 1.5 ] 0 dsh
6.95288 444.151 mo
480.343 444.151 li
480.343 12.2111 li
6.95288 12.2111 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
TXQXGF+Calibri-BoldItalic*1 [26.25 0 0 -26.25 0 0 ]msf
111.813 485.471 mo
(Stage)
[11.9962 9.00372 13.4926 14.2275 0 ]xsh
TXQXGF+Calibri-BoldItalic*1 [26.25 0 0 -26.25 0 0 ]msf
173.163 485.471 mo
( )sh
%ADOBeginSubsetFont: WUKAAA+Calibri-BoldItalic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXQXGF+Calibri-BoldItalic gcheck setglobal} if
3 15006 1005 <000100460000036e0517002e008bba0346034700582bb10102435558b900
30ffc040180f024d0030010f032a142b1320141314001a0b2a25081514b8
019db325522b13b8013db3400854282b183f1afdc43ffdcd111239012fc4
cd393911331133113330315f5e5d2b1b400a0030010f032a25081514b801
9db325522b13b8013db3400854282b183f1afdc43ffdcd1112393031015f
5e5d5925140e042321222635343e04333313070606262635343e0237253e
0333321e020703333216036e03070a0f140bfd350d0e03070b0f140df0a6
e8141a0e05050e1711013d071019281f262e170401d5d50d0ca1071e2524
20131616071d23261e14033f73090507120f0e2f332c09b4040503010307
0c09fbd31500>TXQXGF+Calibri-BoldItalic AddT42Char 
TXQXGF+Calibri-BoldItalic /CharStrings get begin
/one 1005 def
end
TXQXGF+Calibri-BoldItalic /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXQXGF+Calibri-BoldItalic*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two 7{/.notdef}rp /colon 9{/.notdef}rp 
/D /E 13{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp /e 
/.notdef /g /h /i 2{/.notdef}rp /l /.notdef /n 
/o /p /.notdef /r /.notdef /t 3{/.notdef}rp /x 
135{/.notdef}rp]
TXQXGF+Calibri-BoldItalic nf
TXQXGF+Calibri-BoldItalic*1 [26.25 0 0 -26.25 0 0 ]msf
179.033 485.471 mo
(1)sh
TXQXGF+Calibri-BoldItalic*1 [26.25 0 0 -26.25 0 0 ]msf
192.213 485.471 mo
(: )
[7.5 0 ]xsh
%ADOBeginSubsetFont: WUKAAA+Calibri-BoldItalic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXQXGF+Calibri-BoldItalic gcheck setglobal} if
2 1386 87 <00020034fffa0460050e001f002f0080ba0346034700582bb10102435558
b9000002ee400c201328080927092709141328b8013db71417130908080e
27b8013db54017510e55282b183f3f1aed12392f39391239ed012fc63332
107d87c4c4011810d4ed30311bb90028013db71417130908080e27b8013d
b54017510e55282b183f3f1aed12392f39391239ed30315901140e042323
030e0323222e023713363633213216171e0305342627262623230333323e
04046019385981aa738753021022342625311c0a03e9093c2c011b345228
3d614424feeb2e3015342074567839513d2b1b0c03d1387a7569512ffe62
0a100a05050a0f0b048d2f2f07080c324b655e30460e0705fe491b2c3c42
4300>TXQXGF+Calibri-BoldItalic AddT42Char 
2 6990 272 <0001003bffea035a03d60035006fba0348034900582bb10102435558b51c
1c00112834bb01230005000a0128b22f4a20bb0124001900140150b34025
4d282b183f1afdd4ed3ffdd4ed012fcdc4392f30311bbc00340123000500
0a0128b22f4a20bb0124001900140150b340254d282b183f1afdd4ed3ffd
d4ed30315901140e0223222e0223220e0415141633323e0233321615140e
0623222635343e0433321e04035a0b121b100f1c293e3134523d281a0b47
4c38503929110a09080d111b3a4c5930abaa173453789e67284c40311807
0363173a3423181e192e495d5f572051541d231c12111133342d1a211a10
ada93d92938a6a400c151c171200>TXQXGF+Calibri-BoldItalic AddT42Char 
TXQXGF+Calibri-BoldItalic /CharStrings get begin
/P 87 def
/c 272 def
end
TXQXGF+Calibri-BoldItalic /Encoding get
dup 80 /P put
dup 99 /c put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXQXGF+Calibri-BoldItalic*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two 7{/.notdef}rp /colon 9{/.notdef}rp 
/D /E 10{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a 
/.notdef /c /.notdef /e /.notdef /g /h /i 
2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r 
/.notdef /t 3{/.notdef}rp /x 135{/.notdef}rp]
TXQXGF+Calibri-BoldItalic nf
TXQXGF+Calibri-BoldItalic*1 [26.25 0 0 -26.25 0 0 ]msf
205.263 485.471 mo
(Data Protection)
[16.5377 13.5187 9.00372 13.5187 5.93243 14.3062 9.00391 13.5186 9.00372 12.7574 11.2351 9.00366 
6.01135 13.5186 0 ]xsh
1 lc
1 lj
[10.5 7.5 0 7.5 ] 0 dsh
328.333 248.421 mo
432.993 334.401 li
1 /0 /CSD get_res sepcs
.502 sep
@
[] 0 dsh
879.153 161.141 mo
786.483 281.241 li
@
2.25 lw
[2.25 4.5 ] 0 dsh
211.243 128.881 mo
254.423 128.881 li
.644953 .27805 0 0 cmyk
@
253.233 124.111 mo
267.543 128.881 li
253.233 133.651 li
253.233 124.111 li
cp
ef
211.443 181.101 mo
254.623 181.101 li
@
253.433 176.331 mo
267.743 181.101 li
253.433 185.871 li
253.433 176.331 li
cp
ef
211.243 289.261 mo
254.423 289.261 li
@
253.233 284.491 mo
267.543 289.261 li
253.233 294.031 li
253.233 284.491 li
cp
ef
211.053 346.701 mo
254.233 346.701 li
@
253.033 341.931 mo
267.343 346.701 li
253.033 351.471 li
253.033 341.931 li
cp
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: Helvetica-Bold Initial
ct_T42Dict begin
-0.379 -0.355 1 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /Helvetica-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f3244f36af7000000cc000000566376
742073b0792b00000124000002586670676d521cb7300000037c00000c92
676c79666c3514a3000023f800011ecb68656164c6824898000010100000
0036686865610e1c063b0000104800000024686d747809e242bc0000106c
000006046c6f6361c7490a6d00001670000003046d617870063f07110000
1974000000206e616d654ad93cd900001994000008637072657027c524d3
000021f8000001fd67646972000000000000000000000000000103d402bc
0005000e059a05330000011b059a0533000003d1006602120805020b0806
030702040204000000000000000000000000000000004850202000200020
fb0205d3fe51013307b201d3000000930000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
100007b207b2065405be05e605ae05b205be00000595000004d605ea0440
045d0207030401cc044004400363033702450245022c000000000000ffe4
ffdaffd8fe56fe2dfe2d0254012605be0278059200000000000000000133
011f028204290105013300ef013300fd010501050133012a011f00b7011f
012a011c00f3011a00bf007d010e00ec00d700af00cb008000e000b70133
00fd010501050133012a011f00b7011f012a011c00f3011a00bf007d010e
00ec00d700af00cb008000e000b701330127012701270127011e012700d4
00c000c500c801330127012701270127011e012700d400c000c500c80105
00f000f800f800e800f000e3009b00a100980094010500f000ec00ec00e8
00f000e3009b00a100980094000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000002700000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000003c000000000000000000000000000000000000000000000000
000000000001000000000000000000000000000000000000000000000000
0000000000010000013302660124012a0266010a00000000000000000000
00000000000000000000000000000000000100000000404b4a4948474645
44434241403f3e3d3c3b3a393837363534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002cb0152b2d2c20468a8a49b08062602d2cb01e4358
01b0012b8a8ab0012b6120b0005058b001605968b0032b1b212121212121
21592d2c20b0005558b00225113820b0005258351b2159351b2121212159
2d2c208a424310b100148a7014b5010102000114f0133c582f1b21591314
20b10dff8a5523435a20b00e23425845234560b003456023586559b10403
252325496423208a8a646164b800c1505823103a1b212121591b21212121
2159b30201010016108a203c616523103c5820b8010055b00e435c5a58b0
01161020c01b2120b2010102492316385923582f1b21591bb00116212121
592d2c4b5358b301040000154815498a8a496120b0005058b0806268b104
00152338b00115b2010004111337b00116591b21212121592d2c43234320
8a208a208a208a23498a8a4a208a2361b104052623262d2c20b8ffff5458
2121b0001b208a20468a46608a478a476061b02063592d2c20b001602345
69442d2c452346236120b02661b004262348482d2c4523466020b02660b0
04262348482d2c4b53584920b0805258b180408a616523627d691823458c
1b214559208a23442321441b212145444544592d2cb0184b5358b0072b8a
8ab0072b23616965208a2338381b212121212121592d2c45b129142b2342
212d2cb2200d01422344bb0010001000140004442ab122218a4423442d2c
4b51234b525a2d2cb014452344b21401144560442d2c0111122039202f00
233f2d2cb900c0006445515823b06053582045b0608b441b21591b212159
2d2cb10405252325492361b08062208a58b000521bb000505958208a2338
65381b212121592d2c204320b001608a23422d2cb1492a2b2b18b9000101
ff858db6010300010002004444442d2c58021b035908111239002d2cb001
61208a422d2c2121212121210a2d2c01496463442d2c00496463442d2c01
4964638a8a0049648a638c442d2cb10c04254287b0184358b0204b53580c
6423648bb8400062234520b0605058211b20b0a0505821b080631b69b040
616059591b4559b11d2f8a441bb11d2f8a4544592b20b8ffff545821211b
b01d2b592d2c2010b018435821b12f00431d7ae518b02a2b1b23208a4ab9
02800040b01b438b8c633a592d2c212d2c00496123581bb0008b5923208a
382d2c232020b0042645234661b0008c382d2cb0016123b00160232d2c23
b0212b232d2cb125264523450ab127284523450b2d2c0cb126258a442344
0db128278a4423442d2c58861b2121594ab01b4363231020b00052588b1b
23658c592d2c10b1000543545821213c3c1b58208a23e4e41be4c459592d
2c29105820c02f1b2e5920c02f2d2c10b100054354583c213c1b29e4592d
2c10b0234558213c1bec592d2cb059451d2d2c4b5358b0401bb080591a2d
2cb100034354582010070e3c211b10212320b000545821211bb001545801
1b0059c459592d2c10b1000343545821208a208a070e3c3c1b20b0005458
2121211bb0015458011b0059c4c459592d2cbe0008006400290029004000
64002b45764569188b424323456242b2090829b80064458a436323432361
422d2cb0022558232020452058b0084363b00943605944458a458a58621b
208a6165236259b129142b23421b212121b129142b21592d2cb1312e2b2b
b3652f2931422ab0312bb365322931422a2d2c413f0065007a0000006701
010000006701000000006700ff0000006700fe0000006700fd0000006700
fc0000006700fb0000006700fa0000006700f90000006700f80000006700
d40000006700d30000006700d20000006700d10000006700d00000006700
cf0000006700ce0000006700cd0000006700cc0000006700cb000041f000
6700ca0000006700c90000006700c80000006700c70000006700c6000000
6700c50000006700c40000006700c30000006700c20000006700c1000000
6700c00000006700bf0000006700be000000650063000000650000000000
6500000000006500000000006500ae0000006500ad0000006500ac000000
6500ab0000006500aa0000006500a90000006500a8000000650000000000
6500000000006500000000006500b90000006500b80000006500b7000000
6500b60000006500b50000006500b40000006500b3000000650000000000
65007100000065006e00010065006b00000065006a000000650069000100
65006700000065006600000064011800000064011600000064011b000000
640119000000640000000000640000000000640000000000640098000000
640097000000640096000000640095000000640094000000640093000000
6400920000006400000000006400000000006400000000006400a3000000
6400a20000006400a10000006400a000000064009f00000064009e000000
64009d000000640079000100640000000000640000000000640075000000
64007400000064007300000064007200000064007000000064006f000000
64006d00010064006c00000064006800010064006500000064006400002d
2cb002255858b0341bb033592b1b212121b129142b21592d2c23b2002914
2b43208a54582145441b64b8002a456323452069238a637d691823208a20
8a60b8001f608a8a61b80020618a20458a8b8a8cb800208b232045206961
64b0294550582045b0208b44211b234459592d2c2121b22901294360422d
2cb03c4b522d2c4bb0005158212321b0001b8a234520b000528a8a525a58
b0001bb0015959422d2c20455821211b2344592d2cb0412b582b58b03b2b
b03b2b1b21212121591b212121212121212121212121592d2c45b1001543
8a8a525a20b01623422d2cb11517438a4b535a422d2c208a208a81208a20
8a61b0035258b0026123b001602010208a208a525820013c20003cb00161
23b8ffed1c595921212d2cb1390825232b5800b0212b8ab1090825232b01
b0222b8ab1090526232b1bb1071e2a59b016432d2cb1390825232b5800b0
222b8ab1090825232b01b0212b8ab10a0526232b1bb1071e2a59b016432d
2cb1390825232b5800b0212b8ab10a0825232b01b0222b8ab10a0526232b
1bb1071e2a59b016432d2cb1390825232b5800b0222b8ab10a0825232b01
b0212b8ab1090526232b1bb1071e2a59b016432d2c2045b080622320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235920b02050582320b00044235921212d2c528a8a525a
2d2c10b100044354583c3c3c1bc4c4c4592d2c442d2cba00110027004e45
645242ba00120037005045645242ba00130034004f45645242bb00140048
0048004a45234561645242b32a3929394542452069236142403313381437
02483b144a00470046034848113f11400249441250004d114e134f04484b
1236003e004100420043003506483905452a2d2c20204520205820b02943
62b02a436360b01e4b5358b0052576206820b0206123b020608a8c8b1859
59b005262120698a61b02b23424445206923b0005258b9001f00201bb900
20001f598a208a61b02c234260b02d2342b0462a2d2c2045b02b43608a20
435a58b12d2c438a8b23438c59442d2cb800302058b00161208a208a2344
23b8fff11c1b2121592d2cb800962058b00161208a208a234223b8fff11c
1b2121592d2c410200700000b20202172a212d2cb1200044ba000a000100
0f2b58411400000000000000000040004000000000004000400000000000
0000000000000000000000000a000e2b1bba000c000a000f2b5841140000
000000000000004000400000000000800040000000000040000000000000
00000000000c000e2b1bba000d000c000f2b584114000000000000004000
400040000000400080004000000000004000000000000000000000000d00
0e2b1bba000f000d000f2b58411400000000000000000040004000000040
0040004000000000004000000000000000000000000f000e2b1bba001000
0f000f2b5841140000000000000000004000400000004000400040000000
000040004000000000004000400010000e2b1bba00110010000f2b584114
000000000000004000400040000000400040004000000000004000400000
0000004000400011000e2b1bba00140011000f2b58411400000000000000
000040004000000000008000400000000000400040000000000040004000
14000e2b1bba00170014000f2b5841140000000000000000008000400000
000000800040000000000040004000000000004000400017000e2b1bba00
180017000f2b584114000000000040004000800040004000000080004000
0000000040004000000000008000400018000e2b5959595959595959592d
00000001000000270004264928b95f0f3cf5000b080000000000b1237f60
00000000b1237f60fcf6fd25080007b20001000800010000000000000001
0000076cfe4100080800fea5fe7808000001000000000000000000000000
00000181029d0000000000000239000002aa00b803cb00c9047300250473
003d071d003905c7006f01e7008f02aa004802aa0027031d003704ac0052
0239008302aa0037023900830239ffbd047300420473008d047300350473
003704730037047300370473003f04730033047300420473003d02aa00bc
02aa00bc04ac004e04ac005204ac004e04e3007b07cd00f205c7002905c7
009c05c7005a05c7009c0556009c04e3009c0639005a05c7009102390083
0473002d05c700b204e3009c06aa008d05c7008d0639005a0556009c0639
005a05c7009c0556005004e3001d05c7009305560027078d00210556001d
0556001f04e3003302aa00810239ffbd02aa003104ac007f0473000002aa
ffd20473003b04e3007d0473004604e300460473002f02aa001404e30052
04e300850239008d023900060473008d0239008d071d008304e3008504e3
004604e3007f04e30046031d00830473003d02aa001404e300870473001b
063900140473001f0473001404000029031d0062023d00ac031d003104ac
007d0239000002aa00b804730046047300390473fffb0473ffef023d00ac
0473004602aa000c0000fcf60000fe6405e5ffea02f6002d047300b404ac
005202aa00370000fcf70000febd05e5ffea02aafff50333007504ac0052
02aa001202aa001002aa00dd04e300870473fff10239007702aa000c02aa
003502ec000c047300b40156fea502aa003502aa000506ac003502aa0035
02aa001206ac003502aa001002aa000506ac002104e300710000fe8905c7
00290000ff8605c700290000fe9805c700290000fe8905c700290000feb7
05c700290000ff2705c700290800000a0000fec605c7005a0556009c0556
009c0556009c0556009c0239ff9b023900830239ffb50239ffd605c7fff7
05c7008d0639005a0639005a0639005a0639005a0639005a04ac00520639
004405c7009305c7009305c7009305c700930556001f0556009c04e3008d
0000fe890473003b0000ff860473003b0000fe980473003b0000fe890473
003b0000feb70473003b0000ff270473003b071d003b0000fed504730046
0473002f0473002f0473002f0473002f0239008d0239ff9b0239008d0239
ffb50239ffd604e3004604e3008504e3004604e3004604e3004604e30046
04e3004604ac005204e3002d04e3008704e3008704e3008704e300870473
001404e3007f047300140000febe05c700290000febe0473003b0000fec1
05c700290000fec10473003b0000ff0805c700290000ff080473003b05c7
005a047300460000fe9105c7005a0000fe980473004605c7009c0000fcfd
0000ffde05c0005105c7fff704e300460556009c0473002f0000ff7f0556
009c0000ff7f0473002f0556009c0473002f0556009c0473002f0639005a
04e300520000fff60639005a0000ff8104e300520239ffde0239ffde0239
00280239ffdf0239008305c700b20473008d04e3009c0239008d04e3009c
0239008d04e3009c035500d304e3ffe20239ffe205c7008d04e3008505c7
008d04e3008505c7008d04e300850639005a04e300460000fe720639005a
0000fe7204e300460800004c078d004605c7009c031d008305c7009c031d
008305c7009c031d0083055600500473003d055600500473003d05560050
0473003d0000ffda04e3001d0000ffde02aa001404e3001d03ad001f05c7
009304e3008705c7009304e3008705c7009304e3008705c7009304e30087
0556001f04e300330400002904e300330400002904e30033040000290473
ffed02aaffed02aaffed02aa001302aa001a02aa00cd02aa007902aa00a0
02aaffde02aa006004de007004730000080000000239008d0239008d0239
008d0400008304000083040000830473004a0473004a02cd0014080000bc
0800fffb02aa00aa02aa00aa0156fea502aa0005047300000000fea20000
fe070800005a04de006503fc00510550002507f700c507f701a004ac0055
0239007705c1003807f7011b07f702f007f7019e07f7019707f701a107f7
01a10493007e02aa00cd02aa001a02aa001302aa006002aa00a002aa000c
02aa007902aaffed02aaffde02aa000c02aaffed02aaffd202aa00dd04e3
001404e3001404e3001404e300140000001e001e001e009500df01ae033e
0466055b058c05d90626066d06c9070a073b076f07ab086908ba094309fb
0ace0bb10c7f0cd10dda0ea90ef90f6b0fbd1003105710e811e3128c13a7
147b152215bd16471701178317c7183018d8192819fb1a831b401bf81cc3
1d9f1eed1f521ff12085219b2290233823c4241c245824b024f125212557
26952772284229252a412adc2bea2c8b2d192dab2e532e9c2fcd306f3128
320a32e7335934a3350935ae36413757384a38d9396639dc3a103a863ad7
3ad73b4e3c5f3d383da33e993ee33fbd4007408c412f4168428942e84323
435443db448544cc44fc454a45b9463f46f3472547a6483b486f48cd491f
49e14a404a7e4ad04ba94bbb4c0d4c934ca54d594e324e444ecd4eeb4f14
4f454f6e4f974fc04ffb502450585082510651305210525a5268529152ba
52e3530d5336535f538853b2548554ae54d7550055295552557c55c4569f
56c856f1571a5744576d57f5589b58b958e25913593c5965598e59c959f2
5a265a505ad45afe5c9f5ce75cf55d1e5d475d705d9a5de35e0c5e355e5e
5e885f3e5f675f905fb95fe2600b603560a06174619d61c661ef62196242
63276351636c639563b063d96403642c6456647f64b264c064f36501652a
6553657b65a465cc65f5661e67016742675068236932695b698469a169ca
69e76a106a1e6a2c6a556a7e6aa76ad06b116b1f6b5e6b6c6b956bbe6bcc
6bda6c036c116c1f6c486c716c7f6c8d6c9b6ca96d256d9b6dc46ded6dfb
6e096e326e5b6e846ead6ef46f1e6f656f8f705f718171aa71d371e171ef
72187241726a729372a172af72d87301734273507391739f73c873d673ff
74287452747c74a674d074de74ec7516753f7568759175ba75e3760c76c0
76ff773e776f77b177e4788078c97919796079d87a087a387a7c7abf7b00
7b787bef7c647cc17d3f7d7c7dd67f697fab7fed802b81048219827e834e
836a83e9846284a98520857d85ad85e1862686a5872f87ad882c888088d5
892e896189a389d48a1b8a648ac48b608b9f8bef8c398c788cae8ce08d91
8e238ed48f660001000001810058000700550004000200640400004b0000
040002600003000200000036028e0001000000000000003b000000010000
000000010009003b0001000000000002000400440001000000000003003e
00480001000000000004000e00860001000000000005001d009400010000
00000006000e00b10003000104030002000e00bf00030001040300040022
00cd0003000104050002000a00ef0003000104050004001e00f900030001
04060002000e011700030001040600040022012500030001040700020008
01470003000104070004001c014f00030001040900000076016b00030001
04090001001201e10003000104090002000801f30003000104090003007c
01fb0003000104090004001c02770003000104090005003a029300030001
04090006001c02cd00030001040a0002000e02e900030001040a00040022
02f700030001040b00020012031900030001040b00040026032b00030001
040c00020008035100030001040c0004001c035900030001040e00020010
037500030001040e0004002403850003000104100002001203a900030001
04100004002603bb0003000104130002000603e10003000104130004001a
03e70003000104140002000e040100030001041400040022040f00030001
04150002001404310003000104150004002804450003000104160002000e
046d00030001041600040022047b00030001041900020014049d00030001
04190004002804b100030001041d0002000604d900030001041d0004001a
04df00030001041f0002000a04f900030001041f0004001e050300030001
042d0002000e052100030001042d00040022052f0003000108160002000e
055100030001081600040022055f000300010c0a0002000e058100030001
0c0a00040022058f000300010c0c0002000805b1000300010c0c0004001c
05b9436f707972696768742028632920313939322d3937204865776c6574
742d5061636b6172642e20416c6c20726967687473207265736572766564
2e48656c766574696361426f6c644865776c6574742d5061636b6172643a
2048656c76657469636120426f6c643a2056657273696f6e20312e332028
4865776c6574742d5061636b6172642948656c76657469636120426f6c64
56657273696f6e20312e3320284865776c6574742d5061636b6172642948
656c7665746963612d426f6c64004e006500670072006900740061004800
65006c0076006500740069006300610020004e0065006700720069007400
6100540075010d006e00e900480065006c00760065007400690063006100
2000540075010d006e00e900480061006c00760066006500640048006500
6c007600650074006900630061002000480061006c007600660065006400
4600650074007400480065006c0076006500740069006300610020004600
65007400740043006f007000790072006900670068007400200028006300
2900200031003900390032002d003900370020004800650077006c006500
740074002d005000610063006b006100720064002e00200041006c006c00
200072006900670068007400730020007200650073006500720076006500
64002e00480065006c0076006500740069006300610042006f006c006400
4800650077006c006500740074002d005000610063006b00610072006400
3a002000480065006c00760065007400690063006100200042006f006c00
64003a002000560065007200730069006f006e00200031002e0033002000
28004800650077006c006500740074002d005000610063006b0061007200
64002900480065006c00760065007400690063006100200042006f006c00
6400560065007200730069006f006e00200031002e003300200028004800
650077006c006500740074002d005000610063006b006100720064002900
480065006c007600650074006900630061002d0042006f006c0064004e00
650067007200690074006100480065006c00760065007400690063006100
20004e006500670072006900740061004c0069006800610076006f006900
74007500480065006c0076006500740069006300610020004c0069006800
610076006f006900740075004700720061007300480065006c0076006500
7400690063006100200047007200610073004600e9006c006b00f6007600
e9007200480065006c0076006500740069006300610020004600e9006c00
6b00f6007600e9007200470072006100730073006500740074006f004800
65006c007600650074006900630061002000470072006100730073006500
740074006f00560065007400480065006c00760065007400690063006100
2000560065007400480061006c007600660065007400480065006c007600
650074006900630061002000480061006c00760066006500740050006f00
670072007500620069006f006e006100480065006c007600650074006900
63006100200050006f00670072007500620069006f006e0061004e006500
67007200690074006f00480065006c007600650074006900630061002000
4e00650067007200690074006f041f043e043b0443043604380440043d04
4b043900480065006c0076006500740069006300610020041f043e043b04
43043604380440043d044b043900460065007400480065006c0076006500
740069006300610020004600650074004b0061006c0131006e0048006500
6c0076006500740069006300610020004b0061006c0131006e004e006500
67007200690074006100480065006c007600650074006900630061002000
4e006500670072006900740061004e00650067007200690074006f004800
65006c0076006500740069006300610020004e0065006700720069007400
6f004e00650067007200690074006100480065006c007600650074006900
6300610020004e0065006700720069007400610047007200610073004800
65006c0076006500740069006300610020004700720061007300410e001e
0000001f004000590041002b0045002a005000290010000600432ab11e18
4b5342b103035f400549398a39027340092939483b6939a839047440051a
39b9390275b03c5e400308390173b0095e5fb239443945232b44b732523b
48443906082ab103035f40191a6415652964256539643565a964a565b964
b565c964c5650c734007496445656b6503744007d665d566d56703755fb9
001a00644542ba006d0069006e458a458a45b8006845ba0118006c011b45
8a458a45bb00070064002c0064454442b130352b582b1b2159b9002d0064
4544b103035f400f2a6c27a827b32766276527676d6f07744005576c5770
02755fb8006c45692362208a638a8a63b90118011b8ab047766944236944
18b9006800122bb9006900122bb9006d00122bb9006e00122bb118204b53
42b61c401b1b1a1919b800644542432343624243236142b11701b9004000
644569535a42b80061b2035a362bb80061b2045b362bb80026b2055c362b
b90024003244b10d0042b800184b5258b04a2b59b50b23000a23004b5323
455b424b5323455b42b0234558b32200210044441bb52222442121447645
6944764569441859b21d40074345695442b0184b5358411800990050009a
0050009b005000a4005000a5005000a6005000af005000b0005000b10050
00ba005000bb005000bc00504444444444444444444444445900000000>
[16037 15309 16333 16013 9732 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 2 <> Helvetica-Bold AddT42Char 
1 9158 35 <000200290000059e05be001000170106b0152b58b10010b8010040090108
01180022ff0001b80000b2100f042bb10004b0104009010c01190122ff00
01b80000b20410042b00b102393fb617160f02060f4b3fc411123939b503
030201010210c0c0c0c0c0b9000b0065b51313020f170d081112392fec00
b3130b130bb20f020c2bb50a0b141607131008c010c000b10d10b8011cb2
010f262bb6100110011001162bb60d0b0d171301162bb10704b8011cb201
06262bb6040304030401162bb6070a07161401162b01b1011010d0b24003
301adc1ab404141401104a447af418b11710b10d10b80069b201101c2bb2
0b101d2bb213101d2b03b11604b10704b80068b203041c2bb20a041d2bb2
14041d2b0331305933013333013123233103312131033123230103312131
0331290208b2b20209a3a363fdd2619e9f02b6c30187c405befa42012bfe
d50477fdb1024f00>Helvetica-Bold AddT42Char 
1 10486 38 <0002009c0000057b05be000e001900fbb0152b58b1010eb8010040090108
011a0021050001b80000b20e0f042bb10108b00e4009010c011b011e0c00
01b80000b20810042b00b105393fb10b4b3fb405030105422bb40b0c0e0b
422bb11817b800a8b00510fcc0b11011b800b3b00b10fcc0b31011181710
c010c001b219180fb80064b3010e010e10c08718fc18c0c00501b1080810
d0b900140092b1010e87ec03b200140f495358b2800814495158b1140f10
3cb114403859593130b1103a2bba002e0040002eb68017148017141b2b2b
b0154358b305081417b8002e400c1417051714083c17140805382b59b015
4358b3080b1114b8002e400c14110b1114083f14110b08382b5959331131
33312120001110002121312325312132363534262321319c9901dc012f01
3bfeb9fec4fe3d9901330103bbbbaeaffee405befe9cfea9fe86fe77fdfd
fde5e500>Helvetica-Bold AddT42Char 
2 3082 67 <0002003bffe40438045d0029003a01d2b0152b58b10103b8010040090108
013b001eff0001b80000b2030f042bb1011db0034009010c013c011e1000
01b80000b21d10042b00b1234b3fb1004e3fb119403fb11935b900b60000
10ec10b9001000a9ecb406092f2b0010d4c0d0c0b00010b028c0b1151910
c4b12224b80123b20123262bb9002500d9b124292bb9002100d9b122292b
b2402f35495358b12f35103cb280062f495158b12f40381bb28035004951
58b1354065381bb5094006402f4038383859595904b1140044b200100949
5358b514012f4009406538653844b106095558b1064065385959b0144558
b12c4065385901b9003200a0b41c1d19100310c0c087ec01b9000c006cb3
1c1d1c1d10c48718fc18b00cc0b02bd4b02ac0b027c0b027d003b00310b0
15d4b1141401c100c1b11415060eb9001400a0ed01b9002500f6b1232710
4558213c1bb0005821c41be45959b9002100f6b1231d104558213c1bb000
5821c41be4595901b1140044b2212b32495258b1322b103cb28032034951
58b1324065381bb2801d2b495158b1140144595959b0144558b22b2a3210
3c3cb32b402a403838593130b1183a2bba002e0040002eb6803235803532
1b2b2bb0154358b300033235b8002e400c3235003532033e35320300382b
595905222635343637373637363627262726232206073121313636333216
151114161715152323312627270613353106070706061514163332373637
36018a97b8a69fbd4a311517030629315c525c03feed09f2eacbeb18249b
9b130601878232526a4b4e463f8a52100b0b1cad8d95b3171a0a180a341b
2e1a1f5049bfbeab94fda0493b110127423f02a001ae7d1c11140e4b3941
4a6113252500>Helvetica-Bold AddT42Char 
2 6770 75 <0002008d000001b105c90009000d00ecb0152b58b10109b8010040090108
010e0022ff0001b80000b2090f042b01b90006006cb30109010910c08718
fc1801b309060906baffffffff000c2b00b1084b3fb1043f3fb12a0bb901
1b006db10d0410dc1dec2bb10103b80122b20004262bb10609b80123b201
08262b01b30406010910c010c001b00610b9006d000cd41db12a0ab80118
ec2bb10a094920b0005258b80080626620b000525820b00a2338b00c2338
1b22591b22593130b309060c0a472347608a478a476061b309060c0a4623
46608a468a46606161b0806268b4010404000015488a3815b30101000412
143414b5090e0f0618052b593311313333311131232303211121908f908f
90030124fedc0440fbc005c9fef6>Helvetica-Bold AddT42Char 
2 7682 78 <0001008d000001ac05be00090070b0152b58b10109b8010040090108010a
0022ff0001b80000b2090f042b01b90006006cb30109010910c08718fc18
01b309060906baffffffff000c2b00b104353fb1084b3fb10103b80121b2
0004262bb10609b80123b20108262b01b30406010910c010c03130b5090a
0b0618052b59331131333331113123238d8f908f9005befa4200>Helvetica-Bold AddT42Char 
2 7828 79 <000100830000069c045d003501e0b0152b58b10135b80100400901080136
0022090001b80000b2350f042bb10118b0354009010c01370122110001b8
0000b21810042b00b11a4b3fb1043f3fb10c403fb114403fb900200063b1
142db80063b50c070427344b3fc410c010ec10ecb13235b80123b2013426
2bb12528b80123b20127262bb10103b80122b20004262bb1181bb80123b2
011a262b01b305073132b8006cb30135013510c08718fc18c0c0c0b31110
2425b8006cb62a282a282818351112392fc08718fc18c0c0c001b11d1bb8
006cb31718171810c08718fc18c005b2003228495358b22a2832103c3cb7
111025242a284006173859b200251b495358b21d1b25103c3cb518171d1b
4004173859b80080b11837495158b518171d1b4004173859b1251b4920b1
322849208a5558605658b418171d1b4065b004173859b1251b4920b13228
49208a55585058b61110282a24254065b00617381bb71110282a24254006
173859b1251b4920b1322849208a55585058b61110282a24254065b00617
381bb71110282a242540061738591b22591b22591b2259013130b1183a2b
ba002e0040002eb6801d20801d201b2b2bb0154358b314171d20b8002e40
0c1d2014201d173c201d1714382b59b0154358b30c102a2db8002e400c2a
2d0c2d2a103c2d2a100c382b595933113133333115313136373633321716
173137363332161511312323311134262322061531113123233111342623
2206153111312323838889131d5fb5905c24152359aab1c88f9050545a5f
8f905457575d8f900440af2e247a61252d397ad2bafd2f027f7a756f68fd
6902ae625e6f68fd6900>Helvetica-Bold AddT42Char 
2 8438 80 <000100850000045e045d002000f1b0152b58b10120b80100400901080121
0022090001b80000b2200f042bb10110b0204009010c01220122110001b8
0000b21010042b00b1043f3fb1124b3fb10c403fb11f4b3fba0018006300
0c10ecb1080c10c8b11d20b80123b2011f262bb10103b80122b20004262b
b11013b80123b20112262b01b11c1db8006cb30120012010c08718fc18c0
b1051d10c0b11315b8006cb30f100f1010d08718fc18c005b2001d134953
58b215131d103c3cb70f401040154013403838383859013130b1183a2bba
002e0040002eb68015188015181b2b2bb0154358b30c0f1518b8002e400c
15180c18150f3c18150f0c382b5959331131333331153131363736333216
15113123233111342623220615311131232385888911146acaacc38f9057
5a71798f900440a11d1a87ccb5fd2402a865618880fd9a00>Helvetica-Bold AddT42Char 
2 8762 81 <00020046ffe4049f045d000c00190116b0152b58b10103b8010040090108
011a001e080001b80000b2030f042bb10109b0034009010c011b011e1000
01b80000b20910042b00bb001c00a9001b00b4b3060c1e0b2bb10c4e3fb1
06403fb5131c060d1b0c10ec10ec3db7091003161016060c111239392fc4
2fc41801b30303090910c010d0bb001c0093001b009eb309031e0b2bb410
1c09161bec10ec013130b1183a2bba002e0040002eb6400d134010161b2b
2bb0154358b306091013b8002e400c1013061310093c13100906382b59b0
154358b303061316b8002e400c1613061316033d16130603382b59b01543
58b300031619b8002e400c1619001916033e19160300382b59b0154358b3
090c0d10b8002e400c100d0c0d10093f100d0c09382b5959052200111000
33200011100021353236353426232206151416330272fffed3012dff0101
012cfed4feff80868680808585801c01320104010a0139fec7fef6fefcfe
cef0a8a1a5ababa5a1a8>Helvetica-Bold AddT42Char 
2 10026 84 <00010083000002fc045d001800a0b0152b58b10118b80100400901080119
0022090001b80000b2180f042bb1010db0184009010c011a011e110001b8
0000b20d10042b01b10d1810c400b1043f3fb10c403fb50c130804174b3f
10c8c8104bb01e5258b0211d59b12a10b80063ec2bb20e100dc010c0b115
18b80123b20117262bb10103b80122b20004262b01b50c0d05071415b800
6cb30118011810c08718fc18c0c0c010c001b00ec0313059331131333331
153131363736331711262322061531113123238388890f1365a041263083
818f900440c3201ea201fedb048284fdcb00>Helvetica-Bold AddT42Char 
2 11118 87 <00010087ffe4045c0440002000f4b0152b58b1011cb80100400901080121
0022090001b80000b21c0f042bb1010eb01c4009010c01220122110001b8
0000b20e10042b00b120443fb10c443fb1194e3fb1114b3fb219151110c0
10b900040063ecb1090bb80122b2000c262bb11d1fb80122b20020262bb1
0e10b80123b20011262b01b31d1c1d1c10c087b12001b8006c18fc18c0b3
14120908b8006cb30c0e0c0e10c08718fc18c0c0c005b2002009495358b3
12080920103c3c3c400a0e400c401240084009403838383838593130b118
3a2bba002e0040002eb68004018004011b2b2bb0154358b3191c0104b800
2e400c01041904011c3e04011c19382b5959011114163332363531113133
33311131232331353131060706232226351131333301a6565970788f9088
890f156ac9acc18f900440fd57646088800265fbc0a31e1a87cbb402dd00
>Helvetica-Bold AddT42Char 
2 12298 90 <0001001f000004540440001d0194b0152b58b1001db8010040090108011e
001e0b0001b80000b21d0f042bb10012b01d4009010c011f011e120001b8
0000b21210042b00b50d0544141c4b3fc43fc4b310011c0511123939b11a
1db80124b2011c262bb61d011d011d01162bb61a181a181a01162bb11215
b80124b20114262bb6151715171501162bb6121012101201162bb10306b8
0124b20105262bb6030203020301162bb6060806080601162bb10b0eb801
24b2010d262bb60b090b090b01162bb60e100e100e01162b01b31001121d
11123939b1031d10c4b10e1210c4b9ffffffffb10603b8006db202031c2b
b1100e08b208031d2b0301b9ffffffffb11a1db8006eb2011d1c2bb11012
08b2171d1d2b0301b9ffffffffb11512b8006db210121c2bb1011d08b217
121d2b0301b9ffffffffb10b0eb8006eb2100e1c2bb1010308b2080e1d2b
030101b26009084920648a535820b0005258b800806220b209090b082338
b20808060823381b21591b215901b26017184920648a535820b0005258b8
00806220b2171715082338b218181a0823381b21591b2159013130593301
310131333331133131133133333101310131232331033131033123231f01
72fe9dadadb7b7a7a8fe9e0171b0b1bdbdadad022c0214febf0141fde7fd
d9014cfeb400>Helvetica-Bold AddT42Char 
2 12784 91 <00010014fe4a04500440001900ccb0152b58b1000eb8010040090108011a
001e0a0001b80000b20e0f042bb10019b00e4009010c011b011e130001b8
0000b21910042b00b105513fb60d0c10051810443fc011123939b10e11b8
0124b20110262bb60e0d0e0d0e01162bb6111311131101162bb11619b801
24b20118262bb6161416141601162bb6190119011901162b01b3010d190e
11123939b1130eb1110eb8006db20d0e1c2b03b10c19b11619b8006eb201
191c2bb214191d2bb1111308b20c191d2b0305b10d0c10c001b2141300b9
fff000132b31305901010206232735163332373637310131333331133131
133133330450fe7a5e86ac890a2d73231616fe6a9e9fede696960440fba9
feed8c03e6042f1e5e0466fcd9032700>Helvetica-Bold AddT42Char 
1 0 0 <000200000000023904fa000300070004b0002b2201010101010101010000
02390000fdc7006400000171000004fa0000fb0600000496fbce00000432
>Helvetica-Bold AddT42Char 
Helvetica-Bold /CharStrings get begin
/space 2 def
/A 35 def
/D 38 def
/a 67 def
/i 75 def
/l 78 def
/m 79 def
/n 80 def
/o 81 def
/r 84 def
/u 87 def
/x 90 def
/y 91 def
end
Helvetica-Bold /Encoding get
dup 32 /space put
dup 65 /A put
dup 68 /D put
dup 97 /a put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 117 /u put
dup 120 /x put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/TXQXGG+Helvetica-Bold /Helvetica-Bold findfont ct_VMDictPut
/TXQXGG+Helvetica-Bold*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A 2{/.notdef}rp /D 28{/.notdef}rp /a 
7{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp 
/r 2{/.notdef}rp /u 2{/.notdef}rp /x /y 134{/.notdef}rp]
TXQXGG+Helvetica-Bold nf
TXQXGG+Helvetica-Bold*1 [30 0 0 -30 0 0 ]msf
98.6929 55.441 mo
(Auxiliary Domain)
[21.72 17.9998 17.22 8.34003 8.15997 8.34003 16.41 11.9702 16.5 8.33997 21.66 17.9998 
26.9702 16.5 8.34003 0 ]xsh
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXQXGG+Helvetica-Bold gcheck setglobal} if
1 15834 54 <0001001d000004c805be00120097b0152b58b10112b80100400901080113
001eff0001b80000b2120f042b01b9000f0064b30112011210c08718fc18
01b3120f120fbaffffffff000c2b00b30839114b3f3fb408080608422bb3
0c0e0103b90066000810fcc0c0c0b10f12b8011cb20111262b01b2060112
10c0c4b10e0f10c0b21412064944b208140f10e4b10305b8011fb2000626
2bb10b0ab8011fb20008262b313059211131213135353121311515312131
1131232301d9fe4404abfe44999a04b982838283fb47>TXQXGG+Helvetica-Bold AddT42Char 
2 5030 71 <0002002fffe4043a045d001a002501bfb0152b58b10103b8010040090108
0126001e080001b80000b2030f042bb10109b0034009010c0127011e1000
01b80000b20910042b00b1004e3fb106403fb12a12b800b4b12100101dec
2bb1170010c4b12a20b800a9b12106101dec2bb90025006bb30d0d000611
12392ffcb30d250d25b200060c2bb31b250c0d10c010c0b2402025495258
b12025103cb31b40254065386538b200250d495358b30c400d4065386538
5959b2000d12495358b1120d103cb30c400d403838b200250d495358b31b
4025403838595901b1030310d0b9001c0093b51c0b0909240eb8009eb106
008718fc18c010d0c0c018fc1801b00910b017d4b1161601c100c1b11617
060eb90016009eed0101b2401c24495258b11c24103cb11c403859b32524
0d0e10c0c0c000b2200c16495358b316401740653865381bb2200c164953
58b11640653859593130b1183a2bba002e0040002eb6802025401c251b2b
2bb0154358b3060b1c20b8002e400c1c2006201c0b3c201c0b06382b59b0
154358b303062025b8002e400c2520062025033d25200603382b59ba002e
0040002eb680120e80120e1b2b2bb0154358b300030e12b8002e400c0e12
00120e033e120e0300382b59590522001110003332001116073121311617
1633323637312131060413312627262322070607310234f8fef30112f3f9
010d0207fd1b0a2f3c8c416f0b012425fef3110a2a37746f3a24101c0132
011b01050127fed3feea20218140504a34a6bc02ac62374955365700>TXQXGG+Helvetica-Bold AddT42Char 
2 5908 73 <00020052fe43046c045d0022002e0193b0152b58b1010bb8010040090108
012f001e090001b80000b20b0f042bb10117b00b4009010c0130011e1100
01b80000b21710042b00b1084b3fb116443fb10e403fb21a5129b800b5b1
0823b900aa000e10ec10ec3fb9000000b4ecb1130e10d8b1040810d8b240
2329495358b12329103cb2800e23495158b12340381bb2802908495158b1
2940653859595904b2000800495358ba00800000001a495158b100406538
5959b11e1a10c404b200081f495358b31f401e40653865385901b30b0b16
1710c010d0b90026009fb1161787ec01b90003006cb2161717108718fc18
b013c0b02cc0b005c0b00b10b01ed4b11f1f01c100c1b11f1e060eb9001f
009fed0101b3150014004444b2002c26495358b1262c103cb240260b4950
58b126406538b11401441bb2801612495158b1150144595959b0154558b1
2c26103cb12c4038593130b1183a2bba002e0040002eb68023268023261b
2b2bb0154358b30b0e2326b8002e400c26230e23260b3d26230e0b382b59
b0154358b3080b2629b8002e400c26290829260b3e29260b08382b595905
323635353107062322003510123332171617313531211110062122242731
213116161322061514163332363534260270796a175fb2d4fefbfecfb765
1310010efffef2defefa090138045f5a707e7e6f717f7fe2758786238301
31fa0100013885191e9ffbfafefef5ad9938330447ab9895a7aa9696a900
>TXQXGG+Helvetica-Bold AddT42Char 
2 10914 86 <00010014fff40279056500180086b0152b58b10105b80100400901080119
001eff0001b80000b2050f042b01b90014006cb20e1405108718fc1801b3
05140514baffffffff000c2b00b1024b3fb3100c0f443fc4c0b10a0ac0c0
b307110712b8006bfcc0c0d0b11817b80063b1000210c4ecc401b40d0e10
131410c0c4c0c0b208060510c0c4b10b0bc0c0b1181410c4013130590506
232226351131233533311121113133152331111416333302794869988597
97011fafaf2d473b06066d7c029ac90125fedbc9fd962618>TXQXGG+Helvetica-Bold AddT42Char 
TXQXGG+Helvetica-Bold /CharStrings get begin
/T 54 def
/e 71 def
/g 73 def
/t 86 def
end
TXQXGG+Helvetica-Bold /Encoding get
dup 84 /T put
dup 101 /e put
dup 103 /g put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXQXGG+Helvetica-Bold*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A 2{/.notdef}rp /D 15{/.notdef}rp /T 
12{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /.notdef /i 
2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /.notdef 
/t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]
TXQXGG+Helvetica-Bold nf
TXQXGG+Helvetica-Bold*1 [30 0 0 -30 0 0 ]msf
653.933 55.441 mo
(Target Domain)
[18.0298 17.25 11.2802 18.7499 16.5299 9.77979 8.33997 21.66 18.7798 26.2803 16.5299 9 
0 ]xsh
751.593 120.511 mo
751.593 110.881 759.403 103.071 769.043 103.071 cv
778.673 103.071 786.483 110.881 786.483 120.511 cv
786.483 130.141 778.673 137.951 769.043 137.951 cv
759.403 137.951 751.593 130.141 751.593 120.511 cv
cp
.472541 .271244 0 0 cmyk
ef
1.5 lw
2 lc
0 lj
[] 0 dsh
751.593 120.511 mo
751.593 110.881 759.403 103.071 769.043 103.071 cv
778.673 103.071 786.483 110.881 786.483 120.511 cv
786.483 130.141 778.673 137.951 769.043 137.951 cv
759.403 137.951 751.593 130.141 751.593 120.511 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
751.593 177.831 mo
751.593 168.191 759.403 160.381 769.043 160.381 cv
778.673 160.381 786.483 168.191 786.483 177.831 cv
786.483 187.461 778.673 195.271 769.043 195.271 cv
759.403 195.271 751.593 187.461 751.593 177.831 cv
cp
.472541 .271244 0 0 cmyk
ef
751.593 177.831 mo
751.593 168.191 759.403 160.381 769.043 160.381 cv
778.673 160.381 786.483 168.191 786.483 177.831 cv
786.483 187.461 778.673 195.271 769.043 195.271 cv
759.403 195.271 751.593 187.461 751.593 177.831 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
751.593 281.241 mo
751.593 271.611 759.403 263.801 769.043 263.801 cv
778.673 263.801 786.483 271.611 786.483 281.241 cv
786.483 290.881 778.673 298.691 769.043 298.691 cv
759.403 298.691 751.593 290.881 751.593 281.241 cv
cp
.472541 .271244 0 0 cmyk
ef
751.593 281.241 mo
751.593 271.611 759.403 263.801 769.043 263.801 cv
778.673 263.801 786.483 271.611 786.483 281.241 cv
786.483 290.881 778.673 298.691 769.043 298.691 cv
759.403 298.691 751.593 290.881 751.593 281.241 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
612.043 266.291 mo
646.931 266.291 li
646.931 231.403 li
612.043 231.403 li
cp
.394232 .0187991 .542443 0 cmyk
ef
612.043 266.291 mo
646.931 266.291 li
646.931 231.403 li
612.043 231.403 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
612.043 116.771 mo
646.931 116.771 li
646.931 81.8831 li
612.043 81.8831 li
cp
.394232 .0187991 .542443 0 cmyk
ef
612.043 116.771 mo
646.931 116.771 li
646.931 81.8831 li
612.043 81.8831 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
612.043 191.531 mo
646.931 191.531 li
646.931 156.643 li
612.043 156.643 li
cp
.394232 .0187991 .542443 0 cmyk
ef
612.043 191.531 mo
646.931 191.531 li
646.931 156.643 li
612.043 156.643 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
612.043 341.051 mo
646.931 341.051 li
646.931 306.163 li
612.043 306.163 li
cp
.394232 .0187991 .542443 0 cmyk
ef
612.043 341.051 mo
646.931 341.051 li
646.931 306.163 li
612.043 306.163 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
612.043 415.811 mo
646.931 415.811 li
646.931 380.923 li
612.043 380.923 li
cp
.394232 .0187991 .542443 0 cmyk
ef
612.043 415.811 mo
646.931 415.811 li
646.931 380.923 li
612.043 380.923 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
751.593 334.821 mo
751.593 325.191 759.403 317.381 769.043 317.381 cv
778.673 317.381 786.483 325.191 786.483 334.821 cv
786.483 344.461 778.673 352.271 769.043 352.271 cv
759.403 352.271 751.593 344.461 751.593 334.821 cv
cp
.472541 .271244 0 0 cmyk
ef
751.593 334.821 mo
751.593 325.191 759.403 317.381 769.043 317.381 cv
778.673 317.381 786.483 325.191 786.483 334.821 cv
786.483 344.461 778.673 352.271 769.043 352.271 cv
759.403 352.271 751.593 344.461 751.593 334.821 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 lc
1 lj
[10.5 7.5 0 7.5 ] 0 dsh
646.933 99.3311 mo
751.593 177.831 li
1 /0 /CSD get_res sepcs
.502 sep
@
646.933 174.091 mo
751.593 177.831 li
@
646.933 248.851 mo
751.593 120.511 li
@
646.933 323.611 mo
751.593 281.241 li
@
646.933 248.851 mo
751.593 281.241 li
@
646.933 174.091 mo
751.593 334.821 li
@
646.933 398.371 mo
751.593 281.241 li
@
646.933 398.371 mo
756.703 165.491 li
@
646.933 323.611 mo
751.593 177.831 li
@
646.933 99.3311 mo
751.593 281.241 li
@
646.933 248.851 mo
751.593 334.821 li
@
993.773 116.771 mo
1028.66 116.771 li
1028.66 81.8831 li
993.773 81.8831 li
cp
.394232 .0187991 .542443 0 cmyk
ef
2 lc
0 lj
[] 0 dsh
993.773 116.771 mo
1028.66 116.771 li
1028.66 81.8831 li
993.773 81.8831 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: QOJBAA+CambriaMath Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /QOJBAA+CambriaMath
Type42DictBegin
[<00010000000c000c000c000c4f532f328821eb19000000cc000000606376
7420030315980000012c0000089e6670676db5b31812000009cc000010b3
676c796699f646c90000d32800006e7e68656164f9af6b6500001a800000
00366868656112c4205a00001ab800000024686d747803e12cc100001adc
000055c06c6f636148e4287e0000709c00003b7e6d617870280111da0000
ac1c000000206e616d65030048150000ac3c000015c370726570664ecf85
0000c2000000112867646972000000000000000000000000000304ec0190
00050008059a05330000009c059a0533000001f7006601fe020f02040503
050406030204e00006ff420024ff02000000000000004d53202000c00000
207f0639fe39016118ef13b52000019f0000000003bc0555000000200003
058d000a000005550010002b000000000000041700100000000000000000
03bc001000000000fff0ff9d0000fff00000000000000000fe52fff00000
000000000000000005b1000d033d000d055500100215fff002e00010ffa0
fff000000000000000000000000000000000000000000000000000000000
03e000100000000000000800000008000000040000000042007d00000000
000000630000000000000063007000000000005600000000000000000000
00000000000000000000000000000000000000c200000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000ce00c900bb00830000000000bc00b300ac0000
0000000000ac00b5008500c200bc0078000000000059004f008400a0004f
00540078005a00490055005e00690000007100a400a50000000000000062
0060003100310000003e000a008a00000000000000ca00e800b601fc00a4
009b0000000000000000000000000000000000930085007200b800c2009b
004a0069003e00910063009400ab009f004b008600910000000000000000
000000d60000000000e00261006a007300a700b000850064006800000000
004d00810048005c0078004600560071006e008a005a00af00b4006500b1
0099007800bc0052009e06be00080274000d033dfff3023afff3008b0000
009602740281028e03800074007c009e00de00f40090008ffec2fff00000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00900098004b0084008e0042005a033d03500360007d0000000000000000
000000000000000000000000000000000000000000000000000000000000
00b700a400c10072007800b300a600ac009e00900125009a0087007d010c
009d00bc0132009100000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000b7008c00a60000000000000000000000000000
00c300b900af00a50055008e00520073009b00a800420050000000000000
000000000000000000000128010a0083006a005a010e00fa005f00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000700063007800540082
006a00720087005800660031007500580068005800750000000000000000
0136013e0088007100a3012d00e400750042007e006e0121013000c60088
0118007a0068009d0042009400ba0130013e007300b4012800f90070005b
008e000000000000000000000000000000000000058d0010000005550010
000000000800011600ce0000040003fa0000000003ea001000000000fff0
00000000fff00000012400c80000fe52fff00000000000000123010d00bc
00b700aa00c600a2009b011b010300f500e100fe012f011c00bc012900d1
012900c600fa00ba00c1010e00ec011b011800d701010000000000000000
00000000000000000000058d001000000555001000000000080000ba008b
0565040000000000000003ea001000000000fff000000000fff0000000b1
008d0000fe52fff0000000000000008100a7009c00c2007d00ac00b400bb
00c1009200b600bb008c00b400a00085009700ad00a600a60091008000a2
00000000000000000000055a0033000005670033000000000800010e00c3
0000040000000000000003c000330000ffd1ffcd00000000ffcd00000000
00000000fe8effcd00000000000000d5006900db003e0050004900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000207fce305df0249050f
0501ffeb04aa0704fe5b01f5000000a50070009300a5007b007b00670000
000000000000000000000000000000000000000003fd03e805afffee05ba
fe4205110524fe71fe7c000a00d700d900cf00c500e300d300d500ca00e7
033003c503e103f20460040605cd05a200b5042e00770096000000000000
00000000000000000000046e0468045104a4045a042e05270000041c004d
00520057005c00600062006b007200000590073104920556056403f203fa
05980000006c00780086008e0093007e000040718574737271706f6e6d6c
6b6a69686766656463625f5e5d5c5b5a595855545351504f4e524d4c4b4a
4948474644434241403f3e3d3c3b3a393837363534333231302f2e2d2c2b
2a292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d
0c0b0a090807060504030201002c0118b0184358456ab0194360b00c2344
231020b00c4ef04d2fb000121b21231120332f592d2c0118b0184358b005
2bb000134bb0145058b100403859b0062b1b21231120332f592d2c0118b0
1843584eb0032510f221b000124d1b2045b00425b00425234a6164b02852
58212310d61bb0032510f221b0001259592d2cb01a435821211bb00225b0
022549b00325b003254a612064b01050582121211bb00325b0032549b000
5058b0005058b8ffe238211bb0003821591bb0005258b01e38211bb00038
21595959592d2c0118b0184358b0052bb000134bb0145058b90000ffc038
59b0062b1b21231120332f592d2c4e018a10b10c194344b00014b1000ce2
b00015b90000fff03800b0003cb0282bb0022510b0003c2d2c0118b0002f
b00114f2b00113b001154db000122d2c0118b0184358b0052bb00013b900
00ffe038b0062b1b21231120332f592d2c0118b018435845646a23456469
b01943646060b00c2344231020b00cf02fb000121b2121208a208a525811
331b212159592d2c014bb0c85158b10b0a432343650a592d2c004bb0c851
5800b10a0b4323430b592d2c00b00c2370b1010c3e01b00c2370b1020c45
3ab10200080d2d2cb0122bb0022545b00225456ab0408b60b00225234421
21212d2cb0132bb0022545b00225456ab8ffc08c60b0022523442121212d
2cb000b0122b2121212d2cb000b0132b2121212d2c014bb0c85158b00643
b00743650a592d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2cb1000325456854b01c4b505a58b0032545b003
2545606820b004252344b0042523441bb00325204568208a2344b0032545
6860b003252344592d2cb00325204568208a2344b003254564686560b004
25b0016023442d2cb00143588721c01bb01243588745b0112bb00d2344b0
0d7ae41b038a45186920b00d23448a8a8720b0a05158b0112bb00d2344b0
0d7ae41b21b00d7ae4595959182d2c208a4523456860442d2c456a422d2c
01182f2d2c0118b0184358b00425b00425496423456469b0408b6120b080
626ab00225b00225618cb0194360b00c2344218a10b00cf6211b21212121
592d2c01b0184358b0022545b002254564606ab00325456a6120b0042545
6a208a8b65b0042523448cb00325234421211b20456a4420456a44592d2c
012045b00055b018435a584568234569b0408b6120b080626a208a236120
b003258b65b0042523448cb00325234421211b2121b0192b592d2c018a8a
45642345646164422d2cb00425b00425b0192bb0184358b00425b00425b0
0325b01b2b01b0022543b04054b0022543b000545a58b003252045b04061
4459b0022543b00054b0022543b040545a58b004252045b0406044595921
2121212d2cb0032520b0072587052e23208ab00425b00725b0142b1021c4
212d2cc02d2c4b525845441b2121592d2cb00243583ded181bed592d2c4b
505845441b2121592d2c01184b52588a2fed1b212121592d2c4b53234b51
5a58b003254568b003254568b003256054582121211bb00225456860b003
2523442121591b212121592d2cb00243583dcd181bcd592d2cb002435c58
462346608a8a462320468a608a61b8ff8062232010238ab10c0c8a704560
20b0005058b00161b8ffba8b1bb0468c59b0106068013a1b212121212159
2d2c2045b0032546524bb013515b58b0022546206861b00325b003253f23
21381b2111592d2c2045b00325465058b0022546206861b00325b003253f
2321381b2111592d2c004bb0c8515800b00743b006430b592d2c8a10ec2d
2cb00e4358211b2046b0005258b8fff0381bb0103859592d2c20b0005558
b8100063b003254564b00325456461b0005358b0021bb04061b003592545
69535845441b2121591b21b0022545b00225456164b028515845441b2121
59592d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200
802f2b59b002602d2c0c6423648bb84000626023212d2c184b5358b00425
b00425496423456469b0408b6120b080626ab00225b00225618cb00c2344
218a10b00cf6211b218a11231220392f592d2cb00225b002254964b0c054
58b8fff838b008381b2121592d2cb0134358031b02592d2cb0134358021b
03592d2cb00a2b2310203cb0172b2d2cb00225b8fff038b0282b8a102320
d023b0102bb0044358c01b3c59201011b00012012d2cb0482b2d2c01b002
2510d023c901b00113b0001410b0013cb001162d2c01b00013b001b00325
49b0031738b001132d2c4b53234b515a5820458a60441b2121592d2c184b
5358b00425b004254964b00325b00325496468b0408b6120b080626ab002
25b00225618cb00c234421b004251023b00cf61bb00425b0042511122320
392f59cc21212d2c0118b0184358b0052546234564611b21b00425b00425
4a59b00e23442310b00eec2310b00eec2d2cb01b435820b0016045b00051
5820b0016020452068b0005558b0206044211b212121591b20b001602045
2068b0005558b8ffe06044b01c4b50582045b02060441b21591b21212159
591b21592d2cb0022546206861b00325b003253f2321382d2c462346608a
8a462320468a608a61b8ff8062232010238ab10c0c8a70456020b0005058
b00161b8ff808b1bb0818c59683a2d2cb0402a212d2c2035b001602d2cb0
024354584b53234b515a58381b2121591b21212121592d2c49b00e23442d
2cb0024354584b53234b515a5820458a60441b2121591b21212121592d2c
8a10b002435821b0301ac9181bb0401a18ed592d2c4b53234b515a582045
8a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58
381b2121592d2c4b5458381b2121592d2cb002435458b0462b1b21212121
592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b212121
21592d2cb002435458b0492b1b212121592d2c4b52587d1b7a592d2c2320
b000508a8a64b10003255458b0401bb10103255458b005438b59b04f2b59
23b0622b2321235865592d2cb108000c215460432d2c0146234660234661
23201020468a61b8ff80628ab140408a704560683a2d2c208a2349648a23
53583c1b21592d2cb012004b014b54422d2cb1020042b123018851b14001
88535a58b910000020885458b202010243604259b12401885158b9200000
40885458b2020202436042b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
0243604259b12601885158b94000020063b80400885458b2024002436042
59b94000040063b80800885458b202800243604259b12801885158b94000
080063b81000885458ba00020100000243604259595959595959b1000243
5458400a0540084009400c020d021bb10102435458b2054008ba01000009
0100b30c010d011bb18002435258b2054008b80180b109401bb901000002
435258b2054008ba0180000901401bb901800002435258b2054008b80200
b109401bb2054008ba010000090100595959b9400000808855b940000200
63b8040088555a58b30c000d011bb30c000d0159595942424242422d2c45
1868234b51582320452064b04050587c59688a6059442d2cb00016b00225
b0022501b001233e00b002233eb10102060cb00a236542b00b234201b001
233f00b002233fb10102060cb006236542b0072342b00116012d2c20b820
00628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff
545821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547
b004254760b0062547b0806361b00225b0005558b00325b00725496359b0
082558001b0159b00425b0062549b009255cb009255a58b0092b59b00725
46b0806361b0032520b0005558631b2159612320b0005558b080631b21b0
8059b0592bb006255c586959b00425202010b00048233ab0062658001b01
59b0052658b003252f598a12233221212d2cb00625b00a2587b00625b009
254ab0005358b00625b00a251bb00925b0072559b00225b00225070cb005
256323b00625636020b94000040063535821b00426b00426b00a1bb94000
040063655158b0042665b0042665b00a1bb00426b00426b000b00325b003
250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b0
005558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ff
ff545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587
b00a2510b00b25c15920b00051b800522378b00161b00225b00725b00725
07b00a25b00d254961b08062b00525b005250bb00a252338b00625b00625
87b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549
b0032554b8ffa723792121212121212121212121212d2c23b0005458b940
0000001bb900004000598ab0005458b9400000001bb90000400059b05b2b
2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8a
b0005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db0
0426b00426080db05b2b2d2cb0022563b0206066b00225b8200062602362
2d2c0020b200400325b0062649618b3812342d2c204569442d2c234ab102
4e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b002256164b00343
525821206459b1024e2b23b000505865592d2c238a4a234564b0022564b0
02256164b00343525821206459b1014e2b23b000505865592d2c20b00325
4ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b00325
8ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003
254660b004252eb00425b00425b0042620b000505821b06a1bb06c592bb0
032546b00325466061b08062208a2010233a232010233a2d2cb0032547b0
03254760b0052547b0806361b00225b00625496323b005254ab080632058
621b2159b0042646608a468a4660b02063612d2cb00426b00425b00425b0
0426b06e2b208a2010233a232010233a2d2c2320b001545821b00225b102
4e2bb0805020605920606020b001515821211b20b005515821206661b040
2361b100032550b00325b00325505a5820b00325618a535821b000591b21
591bb00754582066616523211b2121b000595959b1024e2b2d2cb00225b0
04254ab0005358b0001b8a8a238ab00159b004254620666120b00526b006
2649b00526b00526b0702b236165b02060206661b02061652d2cb0022546
208a20b000505821b1024e2b1b452321596165b00225103b2d2cb0042620
b802006220b80200638a236120b05d602bb00525118a128a20398a58ba00
5d10000004266356602b23212010204620b1024e2b23611b2321208a2010
49b1024e2b593b2d2cba005d10000009256356602bb00525b00525b00526
b06d2bb15d0725602bb00525b00525b00525b00525b06f2bba005d100000
08266356602b20b0005258b0502bb00525b00525b00725b00725b00525b0
712bb0021738b00052b00225b001525a58b00425b0062549b00325b00525
496020b0405258211bb000525820b0025458b00425b00425b00725b00725
49b00217381bb00425b00425b00425b0062549b002173859595959592121
2121212d2cb12501885058b94000020063b8040088545cb0164b525b1bb0
01592d00000100000006fae1776cb9bf5f0f3cf5001b080000000000b9e6
983d00000000d56e8e10f434ec4a16f118ef000000090002000000000000
00010000063bfe390161175af434fda416f1000100000000000000000000
000000000d22054400be0000000001c3000001c300000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000044b00790686007500000000053a00770000000000000000
04f800790000000000000000052f005a0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000003e80050046100300387
00690470006903e70068026c004f03f4003f046a00400239005300000000
00000000022c003f06a8005304770053043f00690000000000000000034f
00530370005e02b50025046b0049000000000000000003de001704080014
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000239005300000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000045dfffe0471006803ef006904aa006a0417006803d50068044d
006904e3006802610068000000000000000003b7006805bb006504c40064
048300690000000000000000046a006803a4005e04390039049300470000
000000000000041b00160416001600000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000002610068000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000002ef004c0346003802ab005d034e005d02ee005d01eb004b02f70041
0349004101c2004e000000000000000001b9004004db004e0353004e032c
005d00000000000000000284004e029b0056021c002e034b004700000000
0000000002e8002403130027000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
024700c7000000000000fe850000fe850000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000024900c0000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000032500910000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000026c004f00000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000031a
005d04af005d0000000003d5006400000000000000000399005d00000000
0000000003d4005300000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000001c2004e000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000004c0008a073100880000000005d6008e00000000
000000000583008a000000000000000005d0007200000000000000000000
00000000000000000000046b006704f000470402008205010082046b0082
02d400670478005704f900570298006b0000000000000000028900550769
006b0507006b04ca0082000000000000000003c6006b03e900780321003a
04fb0061000000000000000004610029049b002b00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000298006b00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000517009907af009900000000064900a40000
00000000000005e700990000000000000000064800880000000000000000
00000000000000000000000004d0007d055f005c04610099056c009904ce
00990326007b04dd006b0564006b02e20080000000000000000002d40069
07f7008005740080053400990000000000000000042100800446008d0376
004b05670074000000000000000004c5003b050b00400000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002e200800000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000>
<000000760076007600760076007600760076007600760076007600760076
007600de0180018001db01db01db02810281028102f302f302f302f302f3
02f302f302f302f302f302f302f302f302f302f302f302f302f302f302f3
02f302f302f302f302f302f302f302f302f302f302f302f302f302f302f3
02f302f302f302f302f302f302f302f302f302f302f302f302f302f302f3
02f302f302f302f302f302f302f302f302f302f302f302f302f302f302f3
02f302f302f302f302f302f302f302f302f302f302f302f302f302f302f3
02f302f302f302f302f302f302f302f302f302f302f302f302f302f302f3
02f302f302f302f302f302f302f302f302f302f302f302f303f4047e0513
05ab064206da080308a0091109110911095c0a6a0b0e0b6e0b6e0b6e0bf9
0cc60d3e0dc60dc60dc60e650f040f040f040f040f040f040f040f040f04
0f040f040f040f040f040f040f040f040f040f040f040f040f040f040f04
0f040f040f040f040f040f040f040f040f040f040f040f040f040f040f04
0f040f040f040f040f040f450f450f450f450f450f450f450f450f450f45
0f450f450f450f450f450f450f450f450f450f450f450f450f450f450f45
0f450f450f450f450f450f450f450f450f450f450f450f450f450f450f45
0f450f450f450f450f450f450f450f450f450f450f450f450f450f450f45
0f450f450f450f450f450f450f450f450fbb103e10a510fb118411f8126d
12e0131d131d131d136d13e814521497149714971523159915ef164f164f
164f16e41757175717571757175717571757175717571757175717571757
175717571757175717571757175717571757175717571757175717571757
175717571757175717571757175717571757175717571757175717571757
176d176d176d176d176d176d176d176d176d176d176d176d176d176d176d
176d176d176d176d176d176d176d176d176d176d176d176d176d176d176d
176d176d176d176d176d176d176d176d176d176d176d176d176d176d176d
176d176d176d176d176d176d176d176d176d176d176d176d176d176d176d
17f6186b18c4194319bc1a321b201b931bdb1bdb1bdb1c141cc41d591dad
1dad1dad1e0e1e8c1ee51f4e1f4e1f4e1fd0205420542054205420542054
205420542054205420542054205420542054205420542054205420542054
205420542054205420542054205420542054205420542054205420542054
205420542054205420542054205420542054205420542054205420542054
205420542054205420542054205420892089209d20bc20bc20bc20bc20bc
20bc20bc20bc20bc20bc20bc20bc20bc20bc20f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f220f220f2
20f220f220f220f220f220f220f220f220f220f220f220f220f2211c211c
211c211c211c211c211c211c211c211c211c211c211c211c211c211c211c
211c211c211c211c211c211c211c211c211c211c211c211c211c211c211c
211c211c211c211c211c211c211c211c211c211c211c211c211c211c211c
211c211c211c211c211c211c211c211c211c211c211c211c211c211c211c
211c211c211c211c211c211c211c211c211c211c211c211c211c211c211c
211c211c211c211c211c211c211c211c211c211c211c211c211c211c211c
211c211c211c211c211c211c211c211c211c211c211c211c211c211c211c
211c211c211c211c211c211c211c211c211c211c211c211c211c211c211c
211c211c211c211c211c211c211c211c211c211c211c211c211c211c211c
211c211c211c211c211c211c211c211c211c211c211c211c211c211c211c
211c211c21842184218421842184218421842184218421842184218421d0
22592259229d229d229d2327232723272387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
238723872387238723872387238723872387238723872387238723872387
23872387238723872387238723872387238723872387238723b823b823b8
23b823b823b823b823b823b823b823b823b823b823b823b823b823b823b8
23b823b823b823b823b823b823b823b823b823b823b823b823b823b823b8
23b823b823b823b823b823b823b823b823b823b823b823b823b823b823b8
23b823b823b823b823b823b823b823b823b823b823b823b823b823b823b8
23b823b823fd247f247f24c924c924c9254425442544259e259e259e259e
259e259e2616268126d2275627af280e28c4293c29842984298429c12a7f
2b012b4c2b4c2b4c2baf2c242c752cdf2cdf2cdf2d512db12db12db12db1
2db12db12db12db12db12db12db12db12db12db12db12db12db12db12db1
2db12db12db12db12db12db12db12db12db12db12db12db12db12db12db1
2db12db12db12db12db12db12db12db12db12db12db12db12db12db12db1
2db12db12db12db12db12db12db12db12db12db12db12db12db12db12db1
2db12db12db12db12db12db12db12db12db12db12db12db12db12db12db1
2db12db12db12db12db12db12db12db12db12db12db12db12db12db12db1
2db12db12db12db12db12db12db12db12db12db12db12db12db12db12db1
2db12db12db12db12db12db12db12db12db12db12db12db12db12db12db1
2db12db12db12db12db12db12db12db12db12db12db12db12db12db12db1
2db12db12db12db12db12db12db12db12db12db12db12db12db12db12db1
2db12db12db12db12db12db12db12db12db12db12db12db12db12db12db1
2db12db12db12db12db12db12db12db12dea2dea2dea2dea2dea2dea2dea
2dea2dea2dea2dea2dea2dea2dea2dea2dea2dea2dea2dea2dea2dea2dea
2dea2dea2dea2dea2dea2dea2dea2dea2dea2dea2e2d2ea02ea02ee92ee9
2ee92f642f642f642fba2fba2fba2fba2fba2fba3024308030c531343182
31e1328a32fa333c333c333c33723419348b34d034d034d03526358535cc
362b362b362b36a9370b370b370b370b370b370b370b370b370b370b370b
370b370b370b370b370b370b370b370b370b370b370b370b370b370b370b
370b370b370b370b370b370b370b370b370b370b370b370b370b370b370b
370b370b370b370b370b370b370b370b370b370b370b370b370b370b370b
370b370b370b370b370b370b370b370b370b370b370b370b370b370b370b
370b370b370b370b370b370b370b370b370b370b370b370b370b370b370b
370b370b370b370b370b370b370b370b370b370b370b370b370b370b370b
370b370b370b370b370b370b370b370b370b370b370b370b370b370b370b
370b370b370b370b370b370b370b370b370b370b370b370b370b370b370b
370b370b370b370b370b370b370b370b370b370b370b370b370b370b370b
370b370b370b370b370b370b370b370b370b370b370b370b370b370b370b
370b370b370b370b370b370b370b370b370b370b370b370b370b370b370b
370b373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f373f373f373f373f373f
373f373f373f373f373f373f373f373f373f373f0000000100001dbe0064
0004001c000200020010002f0086000009a41128000200010000002f023a
000000000000000d03880000000000000000000e006c0388000000030000
0000006403f400000003000000010018046e0000000300000002000e0486
0000000300000003002e045800000003000000040018046e000000030000
0005001804940000000300000006001604ac0000000300000007007604c2
0000000300000008002a0402000000030000000900460538000000030000
000a070a057e000000030000000b00560c88000000030000000c00280cde
000000030000000d03880000000000030000000e006c0388000100000000
000000320d060001000000000001000c0d43000100000000000200070d4f
000100000000000300170d380001000000000004000c0d43000100000000
0005000c0d560001000000000006000b0d620001000000000007003b0d6d
000100000000000800150d0d000100000000000900230da8000100000000
000a03850dcb000100000000000b002b1150000100000000000c0014117b
000100000000000d01c4118f000100000000000e00361353000300010409
0000006403f400030001040900010018046e0003000104090002000e0486
0003000104090003002e045800030001040900040018046e000300010409
0005001804940003000104090006001604ac0003000104090007007604c2
0003000104090008002a0402000300010409000900460538000300010409
000a070a057e000300010409000b00560c88000300010409000c00280cde
000300010409000d03880000000300010409000e006c0388004d00690063
0072006f0073006f0066007400200073007500700070006c006900650064
00200066006f006e0074002e00200059006f00750020006d006100790020
0075007300650020007400680069007300200066006f006e007400200074
006f0020006300720065006100740065002c00200064006900730070006c
00610079002c00200061006e00640020007000720069006e007400200063
006f006e00740065006e00740020006100730020007000650072006d0069
007400740065006400200062007900200074006800650020006c00690063
0065006e007300650020007400650072006d00730020006f007200200074
00650072006d00730020006f00660020007500730065002c0020006f0066
00200074006800650020004d006900630072006f0073006f006600740020
00700072006f0064007500630074002c0020007300650072007600690063
0065002c0020006f007200200063006f006e00740065006e007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e0074002000770061007300200069006e0063006c0075006400650064
002e00200059006f00750020006d006100790020006f006e006c00790020
00280069002900200065006d006200650064002000740068006900730020
0066006f006e007400200069006e00200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
0079002000740068006500200065006d00620065006400640069006e0067
0020007200650073007400720069006300740069006f006e007300200069
006e0063006c007500640065006400200069006e00200074006800690073
00200066006f006e0074003b00200061006e006400200028006900690029
002000740065006d0070006f0072006100720069006c007900200064006f
0077006e006c006f006100640020007400680069007300200066006f006e
007400200074006f002000610020007000720069006e0074006500720020
006f00720020006f00740068006500720020006f00750074007000750074
002000640065007600690063006500200074006f002000680065006c0070
0020007000720069006e007400200063006f006e00740065006e0074002e
00200041006e00790020006f007400680065007200200075007300650020
00690073002000700072006f0068006900620069007400650064002e0068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f0066006f006e00740073002f0064006500660061
0075006c0074002e006100730070007800a9002000320030003100370020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020007200690067
006800740073002000720065007300650072007600650064002e004d0069
00630072006f0073006f00660074003a002000430061006d006200720069
00610020004d0061007400680052006500670075006c0061007200560065
007200730069006f006e00200036002e0039003800430061006d00620072
00690061004d00610074006800430061006d006200720069006100200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002e004d006f006e006f007400790070006500200049
006d006100670069006e006700200061006e00640020005400690072006f
002000540079007000650077006f0072006b007300430061006d00620072
0069006100200068006100730020006200650065006e0020006400650073
00690067006e0065006400200066006f00720020006f006e002d00730063
007200650065006e002000720065006100640069006e006700200061006e
006400200074006f0020006c006f006f006b00200067006f006f00640020
007700680065006e0020007000720069006e007400650064002000610074
00200073006d0061006c006c002000730069007a00650073002e00200049
00740020006800610073002000760065007200790020006500760065006e
002000730070006100630069006e006700200061006e0064002000700072
006f0070006f007200740069006f006e0073002e00200044006900610067
006f006e0061006c00200061006e00640020007600650072007400690063
0061006c00200068006100690072006c0069006e0065007300200061006e
006400200073006500720069006600730020006100720065002000720065
006c00610074006900760065006c00790020007300740072006f006e0067
002c0020007700680069006c006500200068006f00720069007a006f006e
00740061006c002000730065007200690066007300200061007200650020
0073006d0061006c006c00200061006e006400200069006e00740065006e
006400200074006f00200065006d00700068006100730069007a00650020
007300740072006f006b006500200065006e00640069006e006700730020
0072006100740068006500720020007400680061006e0020007300740061
006e00640020006f007500740020007400680065006d00730065006c0076
00650073002e002000540068006900730020007000720069006e00630069
0070006c00650020006900730020006d006f007300740020006e006f0074
00690063006500610062006c006500200069006e00200074006800650020
006900740061006c00690063007300200077006800650072006500200074
006800650020006c006f0077006500720063006100730065002000630068
006100720061006300740065007200730020006100720065002000730075
0062006400750065006400200069006e0020007300740079006c00650020
0074006f0020006200650020006100740020007400680065006900720020
006200650073007400200061007300200065006c0065006d0065006e0074
00730020006f006600200077006f00720064002d0069006d006100670065
0073002e0020005700680065006e002000430061006d0062007200690061
0020006900730020007500730065006400200066006f0072002000630061
007000740069006f006e0073002000610074002000730069007a00650073
0020006f00760065007200200032003000200070006f0069006e0074002c
0020007400680065002000200069006e007400650072002d006300680061
007200610063007400650072002000730070006100630069006e00670020
00730068006f0075006c006400200062006500200073006c006900670068
0074006c00790020007200650064007500630065006400200066006f0072
0020006200650073007400200072006500730075006c00740073002e0020
005400680065002000640065007300690067006e002000690073006e0027
00740020006a00750073007400200069006e00740065006e006400650064
00200066006f007200200062007500730069006e00650073007300200064
006f00630075006d0065006e00740073003a002000540068006500200072
006500670075006c00610072002000770065006900670068007400200068
006100730020006200650065006e00200065007800740065006e00640065
006400200077006900740068002000610020006c00610072006700650020
0073006500740020006f00660020006d00610074006800200061006e0064
00200073006300690065006e00630065002000730079006d0062006f006c
0073002e002000540068006500200047007200650065006b00200061006e
006400200043007900720069006c006c0069006300200068006100730020
006200650065006e002000640065007300690067006e0065006400200075
006e00640065007200200063006c006f0073006500200073007500700065
00720076006900730069006f006e0020006f006600200061006e00200069
006e007400650072006e006100740069006f006e0061006c002000740065
0061006d0020006f006600200065007800700065007200740073002c0020
00770068006f002000610069006d0065006400200074006f002000730065
00740020006100200068006900730074006f0072006900630061006c0020
006e006500770020007300740061006e006400610072006400200069006e
0020006d0075006c00740069002d00730063007200690070007400200074
007900700065002000640065007300690067006e002e0068007400740070
003a002f002f007700770077002e006d006900630072006f0073006f0066
0074002e0063006f006d002f007400790070006f00670072006100700068
0079002f006300740066006f006e007400730068007400740070003a002f
002f007700770077002e0066006f006e00740073002e0063006f006da920
32303137204d6963726f736f667420436f72706f726174696f6e2e20416c
6c207269676874732072657365727665642e4d6963726f736f66743a2043
616d62726961204d617468526567756c617256657273696f6e20362e3938
43616d627269614d61746843616d6272696120697320612074726164656d
61726b206f6620746865204d6963726f736f66742067726f7570206f6620
636f6d70616e6965732e4d6f6e6f7479706520496d6167696e6720616e64
205469726f2054797065776f726b7343616d627269612068617320626565
6e2064657369676e656420666f72206f6e2d73637265656e207265616469
6e6720616e6420746f206c6f6f6b20676f6f64207768656e207072696e74
656420617420736d616c6c2073697a65732e204974206861732076657279
206576656e2073706163696e6720616e642070726f706f7274696f6e732e
20446961676f6e616c20616e6420766572746963616c20686169726c696e
657320616e6420736572696673206172652072656c61746976656c792073
74726f6e672c207768696c6520686f72697a6f6e74616c20736572696673
2061726520736d616c6c20616e6420696e74656e6420746f20656d706861
73697a65207374726f6b6520656e64696e67732072617468657220746861
6e207374616e64206f7574207468656d73656c7665732e20546869732070
72696e6369706c65206973206d6f7374206e6f7469636561626c6520696e
20746865206974616c69637320776865726520746865206c6f7765726361
7365206368617261637465727320617265207375626475656420696e2073
74796c6520746f206265206174207468656972206265737420617320656c
656d656e7473206f6620776f72642d696d616765732e205768656e204361
6d62726961206973207573656420666f722063617074696f6e7320617420
73697a6573206f76657220323020706f696e742c207468652020696e7465
722d6368617261637465722073706163696e672073686f756c6420626520
736c696768746c79207265647563656420666f7220626573742072657375
6c74732e205468652064657369676e2069736e2774206a75737420696e74
656e64656420666f7220627573696e65737320646f63756d656e74733a20
54686520726567756c61722077656967687420686173206265656e206578
74656e64656420776974682061206c6172676520736574206f66206d6174
6820616e6420736369656e63652073796d626f6c732e2054686520477265
656b20616e6420437972696c6c696320686173206265656e206465736967
6e656420756e64657220636c6f7365207375706572766973696f6e206f66
20616e20696e7465726e6174696f6e616c207465616d206f662065787065
7274732c2077686f2061696d656420746f20736574206120686973746f72
6963616c206e6577207374616e6461726420696e206d756c74692d736372
69707420747970652064657369676e2e687474703a2f2f7777772e6d6963
726f736f66742e636f6d2f7479706f6772617068792f6374666f6e747368
7474703a2f2f7777772e666f6e74732e636f6d4d6963726f736f66742073
7570706c69656420666f6e742e20596f75206d6179207573652074686973
20666f6e7420746f206372656174652c20646973706c61792c20616e6420
7072696e7420636f6e74656e74206173207065726d697474656420627920
746865206c6963656e7365207465726d73206f72207465726d73206f6620
7573652c206f6620746865204d6963726f736f66742070726f647563742c
20736572766963652c206f7220636f6e74656e7420696e20776869636820
7468697320666f6e742077617320696e636c756465642e20596f75206d61
79206f6e6c792028692920656d626564207468697320666f6e7420696e20
636f6e74656e74206173207065726d69747465642062792074686520656d
62656464696e67207265737472696374696f6e7320696e636c7564656420
696e207468697320666f6e743b20616e6420286969292074656d706f7261
72696c7920646f776e6c6f6164207468697320666f6e7420746f20612070
72696e746572206f72206f74686572206f75747075742064657669636520
746f2068656c70207072696e7420636f6e74656e742e20416e79206f7468
6572207573652069732070726f686962697465642e687474703a2f2f7777
772e6d6963726f736f66742e636f6d2f7479706f6772617068792f666f6e
74732f64656661756c742e6173707800b9002001feb40918014a20b801fa
b40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b40918
014a20b801f6b40918014a20b801f0b40918014a20b801efb40918014a20
b801eeb40918014a20b801edb40918014a20b801ecb40918014a20b801eb
b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b40918
014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20
b801e0b40918014a20b801d3b40918014a20b801d2b40918014a20b801d1
b40918014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918
014a20b801ccb40918014a20b801a0b40918014a20b8018fb40918014a20
b8018eb40918014a20b8018ab40918014a20b80188b40918014a20b80187
b40918014a20b80186b40918014a20b8015bb40918014a20b8015ab40918
014a20b80159b40918014a20b80158b40918014a20b80154b40918014a20
b80150b40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80136b40918014a20b80130b40918014a20b8012fb40918
014a20b8012db40918014a20b8012cb40918014a20b80109b40918014a20
b80107b40918014a20b8010540ff0918014a20f40918014a20f20918014a
20f10918014a20f00918014a20ef0918014a20ed0918014a20ec0918014a
20ea0918014a20e50918014a20e40918014a20e30918014a20e10918014a
20de0918014a20da0918014a20d80918014a20d30918014a20cd0918014a
20cc0918014a20ca0918014a20c90918014a20c80918014a20c60918014a
20c40918014a20c20918014a20c00918014a20bf0918014a20bd0918014a
20b30918014a20b10918014a20af0918014a20a50918014a20a40918014a
20a00918014a208e0918014a208d0918014a208c0918014a208b0918014a
208a0918014a20890918014a20850918014a20840918014a208309180140
3e4a20800918014a207f0918014a207e0918014a207d0918014a20620918
014a20510918014a20500918014a20480918014a20420918014a200e0918
014a0f41630441001f0441002f0441003f0441004f0441005f0441006f04
41007f0441008f0441009f044100af044100bf044100cf0441000d005f03
ea0001008003f4009003f400a003f400b003f400c003f400d003f400e003
f400f003f40008002f0433003f0433004f0433005f0433006f0433007f04
33008f0433009f043300af043300bf0433000a001f0434002f0434003f04
34004f0434005f0434006f0434007f0434000700cf042300df042300ef04
230003000f0423001f0423003f0423005f0423009f0423402305f0e201b0
fdc0fd02c0fdd0fde0fdf0fd04d0fde0fdf0fd03c0ffd0ffe0fff0ff0470
410a0425000100c0042500d0042500e0042500f00425400c04e0bef0be02
e0bef0be020f41110421003f04210002001002580001000f025800e00258
0002000f040a0001000f0408b4010f26010f411b04070001000f04060001
007f02170001000f029c001f029c002f029c003f029c004f029c005f029c
000600df029c00ef029c00ff029c405303dfe016171cd4d516171c7b7c16
1b7b7c19d1d216171c767716171c6d7016171c6c6f16171c6b6e161b6b6e
7f721a747514151c676a14151c666914151c6568141b656885711a197316
7a431921794319211941310292009902920002001c0292002c0292000202
99029a029b000c028d028e028f000c028a028b028c000c001b0299008b02
990002000f0299009f029900bb029900db0299000402a5028b02a7000d02
9f029a02a1000d029c028e029e000dffe8028eb2142339b9ffe8029ab214
2339411a0282027d0008002b0281027c0005002b027e027a0004002b027d
027a0004002b027a02570005002b027702670005002b02670257b2052b20
b80270b21b2039bd027202570004002b026e0257b2042b20b80257b33133
3909414102710019027100aa025700b8025700040069027100da025700e8
02570003028402790006002b028002790004002b027f02790008002b027b
02790008002b027902560006002b027802660000002b027602660008002b
027502660008002b027302660008002b026602560006002b027402560000
002b027302560000002b026f0256b2072b29415002560001008602560001
025d025e025f000c025102520253000c024e024f0250000c000b024e000b
0251000a025d003b024e00590251007602510075025d009b024e00b5025d
00d9024e000a0269024f026b000d0263025e0265000d026002520262000d
0269003c0263003c0260003c025d003c0251003c024e003c0244023c0005
002b024302110002002b0240023c0005002b023e02110004002b023d0211
b2042b464115023c00010046023c00c6023c0002023b02110007002b0239
02110006002b023702110004002b02210211b2072b20b80233b213163941
16022f02110004002b022e02110004002b022d02110005002b022c021100
04002b022b02110004002b022a0211b2052b474142021100010005021100
a502110002003b0233004b02330064021100740211000402420210000700
2b024102100005002b023f02100002002b023a02100007002b0238021000
07002b023602100007002b023502100007002b022002100007002b023402
100005002b023102100005002b023002100007002b022902100007002b02
280210b2072b8a416e02100001001a021000b90232000202170218021900
0c020b020c020d000c02080209020a000c000b0208000b020b000a021700
3b02080059020b0076020b00750217009b020800b5021700d90208000a02
2302090225000d021d0218021f000d021a020c021c000d0223003c021d00
3c021a003c0217003c020b003c0208003c0153014d0002002b014e014d00
02002b0156015c0004002b0155015c0004002b0157015c0002002b01da01
d4000a002b01d801d4000a002b01e501e00005002b01e101e00005002b01
e001eb0005002b01ef01eb0002002b01ec01ebb2052b40b801ebb2090a39
b9ffc00104b2313139b9ffc00104b21b2039b8ffc0b4c71f203940b80103
b22c2c39ba010301000100b21f2223b901030100b3c01e1e23ba01030100
0100b21d1d23b901030100b3c01c1c23ba010301000100b21b1b23b90103
0100b3c0141a23b901030100b3800b1323b901030100b340090a23b90102
0101b340508b23b901010100b340508b23410a01020100004f001f010101
00004f001fffc00100b2505539b9ffc00100b323233940b80100b71d1e39
40e81b1b39b8ffc0b4e724253956b80108401301ddd8052b3bd64bd60240
b00b0d39c1c0052bb8ffc040379f131339409c2f30399c9a012b9b9a052b
9a91042ba999042b9992032b40c52c31399291032b889198910209631863
c7630320630d0f39b8fff0b4471f2539cbb8010a401c019895012b379e01
9695022b1897262a3917970110953f4039d99501bc0136012c0003002b01
30b2cd042bb8012fb2cc042bb8012db2cd032bb8012cb2cd042bbc014c01
4a0003002b014ab27f052bb9015b0154b2042b0f41190154001f01540002
018601880002002b018701880004002b018901880004002b0188018f0003
002b018e018f0004002b018fb385052b3f410c01a0000101ce01cc000300
2b01d201cc0006002b01d101ccb2062b40b80107b2323239b80107b2af03
2bb8ffc0b3de1e2039b8ffc04011dc181a39c9ca032bcac8042b40c82122
39b8ffc0b3c8151739b8ffc0b3c6242539b8ffc0b3c6161a39b8ffc04023
bf2d31395051032b40511b1b39e5cc042be4e3032b40e32a2a39cdcc052b
40cc424439b8ffc0b3cc272739b8ffc0b7cc171a39c2ea012bb80109b2da
032bb8ffc04033ea252539dfea0140c41b1d39b3b1052bb1c0052b40c03d
3d39c0af042bd3af052baf7d052b20da121639c5bd01208e01108e01b8ff
c0b38b363839b8ffc0b38b272b39b8ffc040328b171a398c8d052b8d8a04
2b898a052b8a7f052bf4ef032bf2ef052bf180022bf0a0042bef85052b40
ec32343940ec1b1d39b8ffc0b3a0515239b8ffc0b3a0454739b8ffc0b3a0
383c39b8ffc0400ba02c3139dfa001a080022bb8ffc0b394313139b8ffc0
40d480181a39817f012b7e7d052b7d7f052bed7f052bd87f017f85251f88
85012b8785012b8485052b8385052b298539854985036685014685013685
012685011b37151836151535151234150f33150c3215093115063015032f
15002e15f9fa0f20f930f90226270e28270f2a2b0e2c2b0f22230e24230f
1e1f0e201f0f00051005023c3d0e0b3c743c993c030f10110c090a0b0c06
07080c0304050c0001020c0603641f702a010f2a010b0f4b0f020b003b00
44037403ab00db0f060b000b030b0f3b003b0959035b0976039b009b0999
0fd9000cb9010b010c402a0f1b011d0d18071a0d1510170d1204140d2ff9
6ff99ff9a0f9cff9d0f9063ff940f9aff9b0f9e0f90500b8010bb22ff92f
ba010b003f010b403004fb3cf93cf73cf53c2c3c2a3c283c263c243c223c
203c1e3c1b3c183c153c123c0f3c093c063c033c003c035050335401b012
4b004b5442b013014b004b5342b0332b4bb8032052b0322b4bb009505b58
b101018e59b0332bb00288b8010054b00488b8020054b012435a5b58b801
19b101018e851bb900010100b04b60858d592b2b1d42b0644b5358b20380
801d4259b0324b5358b20390901d4259004bb03251b01b23422b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b2b73747573742b
2b2b2b2b2b732b732b2b2b2b2b2bb1282645b02a4561b02c4560442b2b73
2b2b2b2b2b2b2b2b2b2b2b0173737373742b2b2b2b2b742b2b2b2b2b2b2b
742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7475732b2b2b2b2b2b2b2b
732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b
2b2b2b2b732b2b2b012b2b2b2b2b00742b742b2b742b732b2b74742b2b2b
2b2b2b2b2b2b2b2b732b742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b
0173742b2b2b2b2b2b2b2b2b2b2b2b2b007374752b2b2b2b2b2b2b2b2b2b
2b73742b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b0173742b2b2b2b2b
2b2b2b2b2b2b2b2b0073742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73742b
2b2b0173742b2bb018b03f4b53422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
b101322b4bb0505242b002435c4bb064524bb01e505b60b01a23424bb0c8
524bb036505bb00e23420073747373737373737374737374737573737475
7373747373737373b100024354b102024354b1060243545b5b58416301fe
006401fa006401f9006401f8006401f7006401f6006401f0006401ef0064
01ee006401ed006401ec006401eb006401e6006401e5006401e4006401e3
006401e2006401e1006401e0006401d3006401d2006401d1006401cf0064
01ce006401cd006401cc006401a00064018f0064018e0064018a00640188
00640187006401860064015b0064015a0064015900640158006401540064
01500064014c0064014b0064014a00640136006401300064012f0064012d
0064012c006401090064010700640105406964f464f264f164f064ef64ed
64ec64ea64e564e464e364e164de64da64d864d364cd64cc64ca64c964c8
64c664c464c264c064bf64bd64b364b164af64a564a464a0648e648d648c
648b648a64896485648464836480647f647e647d64626451645064486442
640e642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00>
[16289 11999 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> QOJBAA+CambriaMath AddT42Char 
2 1282 24 <0001005afff004da055500310054b0852b58401c0820032091400813132a
2d03161516a6442b150331a02626331a7f0e2fe112392fe1003f332b1100
1733183f1aed2b31301b400e0820916c0813132a2d03162b150300183f33
1117333f2b30315901140706070e0223222e023511342e02273521150e02
1511141e0233323e023511342626273521150e0215046514132623689464
79ad71320a13243101a4382c10294a664c466a471a11273d018f3a2b1001
d86d4f4b3a34492a367ba78102924e3720170d31310e234652fd3c618449
213164927b02715740221031310f24445200>QOJBAA+CambriaMath AddT42Char 
2 1510 131 <00020050fff003b003cd00260032016bb0852b58b90001ffe8b40f10014c
00b8ffe8400a0f10014c022e011d0428b8ffe04044090f48280b0b270327
9640700b800bb00bc00b04000b100b500b900ba00b050c030b0b1930012e
042e032e9e4004162524a744251520133013a013b013043013b0130213b8
ffc04027272c48041314130213190d151d152d1503090315101910031098
1910131414081e85010b260332b8ffe040090f014d3232342a8508b8ffe0
b30f014d082f2be112392f2b1733e112392fcd003fed2b1100335f5e5d18
10c4712b5d713f2b00183f1aed2b110033331239182f5f5e5d711aed2b11
00332b5f5e5d31302b2b1bb3452e0128b8ffe04038090f48280b27966ca0
0bb00be00bf00b04300b400b800bc00bd00b050b0b193001042e9e6c0416
251520133013a013b013043013b0130213b8ffc0401a272c480413141302
13190d151d152d15030903151910986c191000183f2b325f5e5d10c4712b
5d713f3f2b323211392f5d712b332b713031592527060623222626353424
25353426262322060723353e02333216161511141e031715210306061514
1616333236363502a30f5799564c743e012101212856484e5f1883608080
4263783c020a14272cfeee0ccbca2e4630446f3e8f04594a3b6b46929f0d
41687838525282322f1b3f8283fea44a3d341f160c3101c8026869394219
42663200>QOJBAA+CambriaMath AddT42Char 
2 2598 134 <00020069fff0042b0597002200360095b0852b58402e11aa10100fa74410
1533142f182f032f9740181622291f1f29032995401f100706a744070008
010a851214220323b8ffc040090f014d2323382c831b2fe112392f2b1733
e1003f3f2b00183f1aed2b11120039183f1aed2b11003333183f2b001810
e531301b401711aa10153314182f976c1816221f29956c1f100700080100
183f3f3f2b393f2b32323fe530315901342e032735373311141e02171507
2337270e02232226353436363332161711342e0323220615141633323e04
350304030d172733f23b06142b36ec3c0c0f3f5d693ca4b274c57b426c39
0e2138432f80866e702c3a383a1b0e043f604c351e1209340afb7a4e4328
190b340aa404434328f9eba4e5701518feb14e5e402c14cdc0c0c80f213a
303e3100>QOJBAA+CambriaMath AddT42Char 
2 2902 135 <00020068fff0039403cd0019002100c4b0852b5840422013161e21110311
964021210b16004720df19ef1902001910192019f0190409031916041603
16974004160b1e031e95400b101920171200211210831a1a231284072fe1
12392ff11239d611391a19cd00183f1aed2b00183f1aed2b001810d65f5e
5d711a19ed111239182f1aed2b111200393931301b402d2013161e211196
6c21210b161900476cdf19ef1902001910192019f019040903190416976c
04160b1e956c0b1000183f2b3f2bc65f5e5d712b1112392f2b1112393930
3159250e022322263534363633321e0217211514161633323637032e0223
2206070380406b804dced26bc681658e552f03fd8a3579615283416b062a
5444677b0baa434c2bf7f195e47c406fa9881276a15b3d4501556c8949a5
9900>QOJBAA+CambriaMath AddT42Char 
2 4102 138 <00010040000004220597003a0095b0852b58403c03100f014d02280f014d
01280f014d00280f014d10132b03282928a74412291520011d051d031d97
4005103837a744380039010c8518183c00238530b8ffc0b310014d302f2b
e13212392fe1003f3f2b00183f1aed2b11003333183f332b110017333130
2b2b2b2b1b401410132b03281229152001051d976c05103800390100183f
3f3f2b32323f3311173330315901173e0233321e03151114161617152135
3e03351134262623220e021511141e02171521353e033511342e03273537
33016d044e5b593337564129140f273bfe762722170d1b4f472840542b07
14292bfe742c26150a030d172733f13c031f014f3f201a354d6b52fe8757
3f231031310c122043440106858d461c484c2bfe81443a27190b31310c16
2240450345604c351e1209340a00>QOJBAA+CambriaMath AddT42Char 
2 4416 139 <00020053000001e9054400030019008cb0852b58402a17041904a7441915
11aa10100fa744100f02637003010f03df03020f035f03df030303018302
1385020ab8ffe0b30f014d0ab8ffc0b310014d0a2f2b2bc4e110e1002f5d
715ded3f2b001810e53f2b11003331301b401e1704191511aa100f030263
6c7003010f03df03020f035f03df030309030300182f5f5e5d715d2b3fe5
3f113330315901152335033e033511342e02273537331114161617152101
7fb8662721170d0418312de93d102d33fe780544c2c2faed0c1220424601
b4404e2f17083509fd355643230d3100>QOJBAA+CambriaMath AddT42Char 
2 4642 142 <0001003f000001dc05970016004cb0852b58401504070607a74406151413
a74414001501160100850db8ffc0b310014d0d2f2be1003f3f3f2b00183f
2b11003331301b400a0407061514001501160100183f3f3f3f1133303159
25141616171521353e033511342e0327353733016c102d33fe7332271107
030d172733f13cfa5643230d31310d1c2743360345604c351e1209340a00
>QOJBAA+CambriaMath AddT42Char 
2 4792 143 <000100530000065f03cc0060011cb0852b5840560b080f014d0a180f014d
09200f014d04080f014d03080f014d02200f014d01200f014d00200f014d
083306181b334f5205363536a744501a35155faa5e5e5da7445e0f010928
2b46054306430343970d0610092d853cb8ffe8b310014d3cb8ffe840100f
014d3c3c5813850f210143df210121b8ffe0b310014d21b8ffe8400b0f01
4d2121626000488558b8ffc0b311014d58b8ffe8b30f014d58b8fff0b310
014d582f2b2b2be1323212392f2b2b715e5de112392f2b2be132003f33ed
2b11001733183f2b001810e53f33332b1100173311123931302b2b2b2b2b
2b2b2b1b401f083306181b334f520536501a35155faa5e0f0109282b4605
0643976c0d061000183f332b17323fe53f33331117331112393031590117
3e03333216173e0233321e021511141e02171521353e033511342e042322
0e021511141e02171521353e033511342e0423220e021511141e03171521
353e033511342e0227353733016f0e3c4d483f21647e184b5d6138436143
1f0a13262dfe772722170d09131b222e26284551240a13262dfe77272217
0d0a1521222e1d29484b26060d142525fe782621180c0418312dea3d0322
043c3d25105c5f4c482727517a67fe874c3a20170c31310c122043440106
556f42261c10204c4d34fe934c3a20170c31310c1220434401065970442a
160b25464c2cfe89393c2215130a31310c1220424601b4404e2f17083509
>QOJBAA+CambriaMath AddT42Char 
2 5332 144 <000100530000042f03cc003c00a1b0852b58403d2e100f014d2d280f014d
2c280f014d2b280f014d191c3c03020102a7441a011529aa282827a74428
0f2c120f300f030f973010368508083e2c2a148522b8ffd0b30f014d22b8
ffc0b41011014c222f2b2be1323212392fe1003fed2b11003333183f2b00
1810e53f332b1100173331302b2b2b2b1b4014191c3c03021a011529aa28
0f2c12300f976c301000183f2b32323fe53f331117333031592121353e03
3511342e0423220e021511141616171521353e033511342e022735373307
173e0233321e031511141e0217042ffe762722170d08131b253027274654
26102d33fe782721170d0418312dea3d0b0e4a5b5d343655412a15081426
2f310c122043440106467249291d111f4c4a30fe8b5643230d31310c1220
424601b4404e2f17083509a3044b402319344d6c53fe87453e22170d>QOJBAA+CambriaMath AddT42Char 
2 5660 145 <00020069fff003d603cd000d001c0065b0852b58401f0011031195400016
071a031a95071016100b014d16830a200c014d0a0a1e0eb8fff0b50b014d
0e8303b8ffe0b30c014d032f2be12b12392f2be12b003fed2b00183f1aed
2b31301b400c0011956c0016071a956c071000183f2b3f2b303159052226
353436363332161514060601141633323e02353426262322060214d0db73
c880d6dc6ecafe88837a435e3b1a417048798110f5f0a5e46ff9e9a6e471
01facedd416e914f93c25bd2>QOJBAA+CambriaMath AddT42Char 
2 5852 148 <000100530000032d03cd002700a1b0852b58401e16191819a74418152524
a74426aa250f0f010c000810080214030805800cb8fff04012101648050c
030c051009080829270112851eb8ffd0b30f014d1e2f2be1323211392fcd
003fcd2b002b1a1810cd5f5e5d1133333fe52b00183f2b11003331301b40
151619181526aa250f0f010c0008100802140308800cb8fff0b61016480c
40051000183f1acd2b1acd5f5e5d1133333fe53f113330315901173e0233
32171523262623220e021511141616171521353e033511342e0227353733
016f0e375e6d453a2f7118362f24474219163333fe6d2621180c0418312d
ea3d031603434d2a06e636312a504630fea25b45200931310c1220424601
b4404e2f1708340a>QOJBAA+CambriaMath AddT42Char 
2 6130 149 <0001005efff0030a03cd0031010bb0852b5840162f1a3f1a4f1a03bf1a01
001a101a201a031a1a261d01b8ffc040481216482f0101010105260c760c
860c02250c350c0203000c100c400c500c600c0509050c1d2e151d031d95
4015162e050305952e101aa519192a3201a5000008108522223308852a2f
e112392fe111392fe11112392fe1003fed2b00183f1aed2b111200395f5e
5d5f5d5d11331239182f5d2b1112392f5d5d7231301b40162f1a3f1a4f1a
03bf1a01001a101a201a031a1a261d01b8ffc040311216482f0101010105
260c760c860c02250c350c0203000c100c400c500c600c0509050c2e151d
956c15162e05956c2e1000183f2b3f2b11395f5e5d5f5d5d113312392f5d
2b1112392f5d5d7230315901232e0223220615141616171e0215140e0223
2226273533161633323e0235342626272e02353436363332161702ff6016
3c4c37505f265065666f3f36628750549e4b621b6a5d2445362028546a5b
6e3f59a871427b5d02e13c451c4b412e3c342b2c4a62444f6c441e1914d1
5c530f233c2d3340352d264862435279400d1300>QOJBAA+CambriaMath AddT42Char 
2 6540 150 <00010025fff002c204b3001c0097b0852b58403117100314201340262f48
13400c0f481310971716020a0f06010c030607400a00a7441b0aee070f13
1409091e07050b851a2fe1393211392fd6cd003fed322b001a1810cd5f5e
5d11393ffdd62b2b1a19cd2b31301b4023141340262f4813400c0f481317
10976c1716020a0f06010c030607401b070aee6c070f00183f2b321a10cd
5f5e5d11393f2bd62b2b19cd303159133e0337331521152111141e023332
363717060623222635112325323e23140b8e0143febd102c382c2846222d
477f44817e94038a08283f5f5bf765fe436173411c211f36453e99a3022b
>QOJBAA+CambriaMath AddT42Char 
2 6780 151 <00010049fff0042503bc002c008bb0852b5840221daa1c1c1ba7441c1520
0a072307030797402316132c012ca74414010f1685201e0cb8ffe040090f
014d0c0c2e028528b8ffc0400911014d28200f014d282f2b2be112392f2b
3333e1003f332b110033183f1aed2b11003333183f2b001810e531301b40
111daa1c15200a2307976c2316132c14010f00183f3311333f2b32323fe5
303159132111141e0233323e023511342e0327352111141e021715072337
2706062322262635113426262749011d1224423a26465625060e13232701
1d06142a36e53d060f53974c5b763a0d253e03bcfe03757a3e2a1e4b4a31
0177393a2316120a31fd554d4428190b340aa4045a54488f82017a543f25
1000>QOJBAA+CambriaMath AddT42Char 
2 7052 154 <00010017000003c703bc00370094b0852b58b9002afff8b30f014d2bb8ff
f840300f014d1b2a000e04233012152503222322a7441423070a32032f30
2fa74408300f000e1b2a04123009300925121239252f12392f1239392f2f
121739003f332b11001733182f332b110017331112173931302b012b1b40
161b2a000e04233012152503221423070a32032f08300f00183f33111733
2f3311173311121739303159013736363534262735211506060707131616
17152135363534262727070606151416171521353e023713032e02273521
150615141617020882151a22240147264f39cfe4314e27fe6e530e13919a
11132528feb22135372dd0d52c342c1601884f15160241a51b331b171e07
31310b4047fefecd42460f31310a34152619cac81625171b230431310c24
3937010201243c361c0631310c32172e1c00>QOJBAA+CambriaMath AddT42Char 
2 7370 155 <00010014fe4a040a03bc002e00b1b0852b58403e0b18111648e50bf50b02
0740111648000710072007030903070b40040b030bab40041c2000101615
272a03181718a74428170f08a50707161000202029162f12391133331139
2fed003f332b11001733183f33333f1aed2b001a1810cc5f5e5d2b5d2b31
301b402c0b18111648e50bf50b0207401116480007100720070309030740
040bab6c041c2000101615272a031828170f00183f331117333f33333f2b
1acc5f5e5d2b5d2b303159050e022322273533161633323e0237012e0227
3521150e021514161713133636353426273521150e0207020837687d5637
45590c24221e2f33452bfee81b21262701972f26120d0eb2c811132f3a01
76272a2a1d527c9a4e0dc629201738745902f1493a1e0931310b15211a1b
3a27fe0b01e028431d2b2c0d313108214740>QOJBAA+CambriaMath AddT42Char 
2 0 0 <000400be0000048605540028002c00300034004b4025152f3428292c002c
1d0b312e342c0b2e2e0b2c3404353600292b30331213130e18182e310300
3fcd322fcd322f3fddd6cd3211120117392f2f2f2f10cd10cd113310cd32
10ddc631300135343e02373e0335342623220e02072335363633321e0215
140e02070e031515171523350111211101112111023706162a2417261b0f
413e2030241909603c894346633e1c0f243c2c20261507129001fcfd0603
61fc3801e71616252a3527192f3339234b521424321e821e2e1d33462926
3e3d462d212c27281c066ea1a1fee4049afb6604f7faac055400>QOJBAA+CambriaMath AddT42Char 
QOJBAA+CambriaMath /CharStrings get begin
/g3 3 def
/g24 24 def
/g131 131 def
/g134 134 def
/g135 135 def
/g138 138 def
/g139 139 def
/g142 142 def
/g143 143 def
/g144 144 def
/g145 145 def
/g148 148 def
/g149 149 def
/g150 150 def
/g151 151 def
/g154 154 def
/g155 155 def
end
QOJBAA+CambriaMath /Encoding get
dup 32 /g3 put
dup 85 /g24 put
dup 97 /g131 put
dup 100 /g134 put
dup 101 /g135 put
dup 104 /g138 put
dup 105 /g139 put
dup 108 /g142 put
dup 109 /g143 put
dup 110 /g144 put
dup 111 /g145 put
dup 114 /g148 put
dup 115 /g149 put
dup 116 /g150 put
dup 117 /g151 put
dup 120 /g154 put
dup 121 /g155 put
pop
end
%ADOEndSubsetFont
/TXQXGH+CambriaMath /QOJBAA+CambriaMath findfont ct_VMDictPut
/TXQXGH+CambriaMath*1 
[32{/.notdef}rp /g3 52{/.notdef}rp /g24 11{/.notdef}rp /g131 2{/.notdef}rp /g134 
/g135 2{/.notdef}rp /g138 /g139 2{/.notdef}rp /g142 /g143 /g144 
/g145 2{/.notdef}rp /g148 /g149 /g150 /g151 2{/.notdef}rp /g154 
/g155 134{/.notdef}rp]
TXQXGH+CambriaMath nf
TXQXGH+CambriaMath*1 [24 0 0 -24 0 0 ]msf
1051.66 114.311 mo
(Users in the auxiliary domain)
[15.7198 9.7439 11.9761 9.74402 10.4639 5.28003 6.672 13.536 5.28003 8.20789 12.744 11.9762 
5.28003 11.9521 12.7441 11.976 6.71997 6 6.71997 11.9761 9.74414 11.9999 5.28003 13.4398 
12.7441 20.2321 11.2562 6.71997 0 ]xsh
%ADOBeginSubsetFont: QOJBAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXQXGH+CambriaMath gcheck setglobal} if
2 3508 137 <0003003ffe4103e203cd0032004100530167b0852b58405742215227270a
082f0836030895c036010f361f362f36030936362f0f5201524000100115
0f10010f101f102f10ef10ff1005230310102f48010032000300ee40320f
194803489540191c2f3f033f952f10270a0c224c24b8ffc0402910014d24
241e2142424c45201013014c451e1e5402092831042a3b8405100f014d05
0515330000554cb8ffe0400b0f13014c4c15155533842a2fe112392fcd2b
12392f1112392f2be112173911392fcd2b1139113311392f2b1239cd3232
003fed2b00183f1aed2b00183f1aed2b110033111239182f5f5e5d715e5d
1acd5d12392f5e5d71ed2b11120039391112393931301b40494221522727
0a2f3608956cc036010f361f362f36030936362f0f52015240001001150f
10010f101f102f10ef10ff1005230310102f48013200ee6c320f1948956c
191c2f3f956c2f1000183f2b3f2b3f2b321112392f5f5e5d715e5d1acd5d
12392f5e5d712b1139391112393930315901270716161514062322270615
14161633333216161514060623222e023534363726263534363726263534
3e023332172101141633323e023534262623220613060615141633323636
35342e0223232203e2b9091f24c9b9533c4c1d4344f06a86396ccc8865a7
7741544d2f364051484b39658a5048470162fd4a666033482d153256385f
641933338f935a81440e27483a95510357070b1f6b3ea3b1153a38252610
426f4a5e935218395d463f6727134a32395f3d2a905c567f532911fed07d
88274459315876377efced2655365a55305a3c1c352a1900>TXQXGH+CambriaMath AddT42Char 
TXQXGH+CambriaMath /CharStrings get begin
/g137 137 def
end
TXQXGH+CambriaMath /Encoding get
dup 103 /g137 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXQXGH+CambriaMath*1 
[32{/.notdef}rp /g3 52{/.notdef}rp /g24 11{/.notdef}rp /g131 2{/.notdef}rp /g134 
/g135 /.notdef /g137 /g138 /g139 2{/.notdef}rp /g142 /g143 
/g144 /g145 2{/.notdef}rp /g148 /g149 /g150 /g151 2{/.notdef}rp 
/g154 /g155 134{/.notdef}rp]
TXQXGH+CambriaMath nf
TXQXGH+CambriaMath*1 [24.025 0 0 -24.025 0 0 ]msf
1051.66 171.941 mo
(Users in the target domain)
[15.7362 9.75403 11.9646 9.75415 10.4747 5.28552 6.67896 13.5021 5.28552 8.19238 12.7573 11.9646 
5.28564 8.19238 11.9646 9.75415 11.9646 11.2439 8.21643 5.28552 13.4298 12.7574 19.4843 11.9646 
6.67896 0 ]xsh
%ADOBeginSubsetFont: QOJBAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXQXGH+CambriaMath gcheck setglobal} if
2 236 15 <00010079000004100555001e0071b0852b58402700091009020c03090917
000b0ca6440b00030091400b19161716a64417030a09a4080820007f102f
e112392fe132003f2b110033182f1aed2b2b11120039182f5f5e5d31301b
401300091009020c030909170b00916c0b1916170300183f11332f2b1139
2f5f5e5d3031592521323e0437330321353e023511342e02273521150e03
1501a901062b3a29211e1b146514fc7d3e2a0d0a17262e01a52c25180c5c
0a15253c5b5bfe6e311027484a0361453f23150d31310c1320424800>TXQXGH+CambriaMath AddT42Char 
2 2300 133 <00010069fff0035203cd002100c6b0852b5840442001300102b00101011f
8013472000121012201203091f12010f120119031240262948120f180f03
0f974018161f06030695401f1010100a1220131323020101230a831b2fe1
11392fcd12392f1a19cd1239182f003f1aed2b00183f1aed2b001810d62b
5f5e5d725e5d1a19ed1a1810cd5d7131301b40312001300102b00101011f
801213476c00121012201203091f12010f12011903124026294812180f97
6c18161f06956c1f1000183f2b3f2bc62b5f5e5d725e5d2b1a10cd5d7130
31590115232e022322060615141e0233323637170e032322263534363633
3216034a7f11324231466c3f183a604745774039334e595733bdc870ca84
528b03a5d1414b1e5ab885558d6438364442383d2913fbed94e57c13>TXQXGH+CambriaMath AddT42Char 
TXQXGH+CambriaMath /CharStrings get begin
/g15 15 def
/g133 133 def
end
TXQXGH+CambriaMath /Encoding get
dup 76 /g15 put
dup 99 /g133 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXQXGH+CambriaMath*1 
[32{/.notdef}rp /g3 43{/.notdef}rp /g15 8{/.notdef}rp /g24 11{/.notdef}rp /g131 
/.notdef /g133 /g134 /g135 /.notdef /g137 /g138 /g139 
2{/.notdef}rp /g142 /g143 /g144 /g145 2{/.notdef}rp /g148 /g149 
/g150 /g151 2{/.notdef}rp /g154 /g155 134{/.notdef}rp]
TXQXGH+CambriaMath nf
TXQXGH+CambriaMath*1 [24 0 0 -24 0 0 ]msf
1051.66 229.591 mo
(Locations shared across domains)
[12.744 12.7441 10.5118 11.9762 8.23193 6.72009 12.7441 12.7679 10.4637 5.28003 10.4398 13.488 
11.2562 10.464 11.2562 13.4637 5.28003 11.9521 10.4879 9.74402 12.7441 10.4878 9.7439 5.28003 
13.4398 12.7441 20.2319 11.2561 6.72021 13.4639 0 ]xsh
%ADOBeginSubsetFont: QOJBAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXQXGH+CambriaMath gcheck setglobal} if
2 950 21 <00020079000004f80555002f003c009bb0852b5840351c1b003131000331
914000003b072409060706a6442126071413a644143b033b9114032a1f1f
1b26251b01187e37373e2531017f0d2fe1322f11392fe111391133123911
33003fed2b2b00182f33332b11003333111239182f1aed2b111200393931
301b401a1c1b0031916c00003b073100916c240906212607143b916c1403
00183f2b2f33331133332b1112392f2b39393031590111141e0217152135
3e023511342e0227352132161514060715161617171e0217152126262727
2e0323031133323e0235342626232201aa0b16262efe5a3e2a0d0a17262e
01efeae897973d57355a27383a30feeb2644215828332b31316e71576c5c
374184705a0251feac484121150d31311027484a0361453f23150d31aab3
89c03608195d62a4484c280831357a3fa74c481d0b02a8fdae19467d5b5f
7e42>TXQXGH+CambriaMath AddT42Char 
TXQXGH+CambriaMath /CharStrings get begin
/g21 21 def
end
TXQXGH+CambriaMath /Encoding get
dup 82 /g21 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXQXGH+CambriaMath*1 
[32{/.notdef}rp /g3 43{/.notdef}rp /g15 5{/.notdef}rp /g21 2{/.notdef}rp /g24 
11{/.notdef}rp /g131 /.notdef /g133 /g134 /g135 /.notdef /g137 
/g138 /g139 2{/.notdef}rp /g142 /g143 /g144 /g145 2{/.notdef}rp 
/g148 /g149 /g150 /g151 2{/.notdef}rp /g154 /g155 134{/.notdef}rp]
TXQXGH+CambriaMath nf
TXQXGH+CambriaMath*1 [24.025 0 0 -24.025 0 0 ]msf
1051.66 287.221 mo
(Real interaction)
[14.9677 11.2438 11.9647 6.72681 5.28552 6.67896 13.5021 7.49573 11.9646 9.75415 11.9646 10.4988 
8.21655 6.67896 12.7574 0 ]xsh
%ADOBeginSubsetFont: QOJBAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal TXQXGH+CambriaMath gcheck setglobal} if
2 768 18 <00020077fff004c30565001000200047b0852b5840170014031491400013
091c031c9109040d7d181822117d052fe912392fe9003fed2b00183f1aed
2b31301b400c0014916c0013091c916c090400183f2b3f2b303159052226
2602353412363332161215140206011012333236123534022623220e0202
8e78c58d4d88fda7b2f37b8cfffe0db3ac6d984c599a665a815527104fa7
0104b5df0140a79dfecfdbeafebea002cbfecdfec08b010cb3da011f8254
9bdc>TXQXGH+CambriaMath AddT42Char 
2 2024 132 <00020030fff003f90597001c002e008cb0852b5840252c01290529032997
40051012151116100d230d23032395400d161a19a7441a001c01098326b8
ffc0400d0f10014c262630102e2e1c85132fe132123912392f2be1003f3f
2b00183f1aed2b11120039183f3f3f1aed2b1100333331301b40172c0105
29976c051012151116100d23956c0d161a001c0100183f3f3f2b393f3f3f
2b323230315901173e02333216161514060623222627072711342e032735
373311141e0333323635342623220e0215015d04465d633b6b995363c184
4a83484645030d172733f23b0e213f4e30787c717239504f25031f014942
236dda9ea3e1731b223d10043f604c351e1209340afbd14d5b3c3213c4c4
c6c7234a482e>TXQXGH+CambriaMath AddT42Char 
2 3204 136 <0001004f000002e7059c002c00b3b0852b5840200a070807a74408151012
a744101601ee2b0f002010202020c020d020050d0320b8ffc04018222548
201d401d240324961d0100000221a5202b0285180fb8ffc0b310014d0f2f
2b33f132d4e112392f003fed2b001a1810cd2b5f5e5d3fed33322b00183f
2b11003331301b401a0a07081510162b01ee6c2b0f002010202020c020d0
20050d0320b8ffc0400c222548201d401d24966c1d0100183f2b1a10cd2b
5f5e5d3f2b33323f1133303159012311141e02171521353e03351123353e
04373e033332171523262623220e031515330263ef0d19292dfe672c2615
0a79261917110d04093d75855a4f376313332e212d261b0def0357fda343
4423150a31310c16224045025d3306070e1a332e6d8860270bb53b311226
405f4c69>TXQXGH+CambriaMath AddT42Char 
TXQXGH+CambriaMath /CharStrings get begin
/g18 18 def
/g132 132 def
/g136 136 def
end
TXQXGH+CambriaMath /Encoding get
dup 79 /g18 put
dup 98 /g132 put
dup 102 /g136 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/TXQXGH+CambriaMath*1 
[32{/.notdef}rp /g3 43{/.notdef}rp /g15 2{/.notdef}rp /g18 2{/.notdef}rp /g21 
2{/.notdef}rp /g24 11{/.notdef}rp /g131 /g132 /g133 /g134 /g135 
/g136 /g137 /g138 /g139 2{/.notdef}rp /g142 /g143 /g144 
/g145 2{/.notdef}rp /g148 /g149 /g150 /g151 2{/.notdef}rp /g154 
/g155 134{/.notdef}rp]
TXQXGH+CambriaMath nf
TXQXGH+CambriaMath*1 [24.025 0 0 -24.025 0 0 ]msf
1051.66 344.841 mo
(Obfuscated  interaction)
[15.6884 12.8052 7.47168 13.478 10.4747 10.4988 11.2439 8.21655 11.9646 12.7571 5.98218 5.28552 
5.95825 13.4779 8.21655 11.9646 9.75415 11.9646 10.4988 8.21655 6.00623 12.7574 0 ]xsh
993.773 181.531 mo
1028.66 181.531 li
1028.66 146.643 li
993.773 146.643 li
cp
.476326 .831693 .898802 .160922 cmyk
ef
993.773 181.531 mo
1028.66 181.531 li
1028.66 146.643 li
993.773 146.643 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
993.773 220.351 mo
993.773 210.711 1001.58 202.901 1011.21 202.901 cv
1020.85 202.901 1028.66 210.711 1028.66 220.351 cv
1028.66 229.981 1020.85 237.791 1011.21 237.791 cv
1001.58 237.791 993.773 229.981 993.773 220.351 cv
cp
.472541 .271244 0 0 cmyk
ef
993.773 220.351 mo
993.773 210.711 1001.58 202.901 1011.21 202.901 cv
1020.85 202.901 1028.66 210.711 1028.66 220.351 cv
1028.66 229.981 1020.85 237.791 1011.21 237.791 cv
1001.58 237.791 993.773 229.981 993.773 220.351 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
1 lc
1 lj
990.573 278.891 mo
1035.33 278.891 li
1 /0 /CSD get_res sepcs
.502 sep
@
[10.5 7.5 0 7.5 ] 0 dsh
991.393 332.181 mo
1037.46 332.181 li
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/TXQXGH+CambriaMath*1 uf
/TXQXGH+CambriaMath uf
/QOJBAA+CambriaMath uf
/TXQXGF+Calibri-BoldItalic*1 uf
/TXQXGF+Calibri-BoldItalic uf
/WUKAAA+Calibri-BoldItalic uf
/TXQXGG+Helvetica-Bold*1 uf
/TXQXGG+Helvetica-Bold uf
/Helvetica-Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
